diff --git a/INSTALL.md b/INSTALL.md
index 20d55e134..8cadfdc2b 100644
--- a/INSTALL.md
+++ b/INSTALL.md
@@ -10,42 +10,49 @@
 
 Independently from the specific OS, make sure that the `gcc`, `g++`, `make`, `git`, and `libpng-dev` packages or their equivalents are installed and accessible to the development tools that are used by the project (this means that, for example, on Windows, the packages have to be installed in the WSL environment). The package names and installation methods may vary with each OS.
 
-Install the devkitARM toolchain of devkitPro as per [the instructions on their wiki](https://devkitpro.org/wiki/devkitPro_pacman). On Windows, follow the Linux instructions inside WSL as any steps about the Windows installer do not apply.
+# Requirements
 
-**Debian-based distro users:** This applies to Debian, Ubuntu, and similar distros, including in WSL. If necessary, install the `libarchive13`, `pkg-config`, and `gdebi-core` packages to be able to install devkitPro.
+Grab the latest version of [devkitPRO](https://github.com/devkitPro/pacman/releases/latest) from their GitHub that fits your CPU architecture (arm64 or amd64)
 
-**Windows 10 users:** WSL 2 is available in the 1903 release (build 18362) and later, therefore existing WSL 1 and [prerelease WSL](https://docs.microsoft.com/windows/wsl/install-legacy) users are recommended to update. Right-click the Start button or press `Win`+`X`, choose Run, and run `ms-settings:about` to determine the Windows version. Also check Windows Update to make sure your installation is up-to-date.
+**Windows 10 users:** [WSL 2][wsl] is available in the 1903 release (build 18362) and later, therefore existing WSL 1 and [prerelease WSL](https://docs.microsoft.com/windows/wsl/install-legacy) users are recommended to update. Right-click the Start button or press `Win`+`X`, choose Run, and run `ms-settings:about` to determine the Windows version. Also check Windows Update to make sure your installation is up-to-date.
 
-**Windows 7 and 8.1 users:** pret is no longer focusing on support in pokeemerald for [old versions of Windows](https://support.microsoft.com/help/13853) so consider upgrading to a current release of Windows 10 or try a third-party guide like [this one](https://www.pokecommunity.com/showthread.php?t=425246) instead.
+**Debian-based distro users (and Windows users running WSL v2):** This applies to Debian, Ubuntu, and similar distros, including in WSL.
 
+1. Run `sudo apt-get install gcc g++ make git libpng-dev libarchive13 pkg-config gdebi-core`. This grabs all the requirements to move forward
+2. Run `sudo gdebi devkitpro-pacman.[arch].deb`
+3. Run `sudo dkp-pacman -S gba-dev`. When asked to select what you want to install, type `all` and click enter
+4. Add `DEVKITPRO=/opt/devkitpro` and `DEVKITARM=/opt/devkitpro/devkitARM` as environmental variables
+	* For Ubuntu, that would be `export DEVKITPRO=/opt/devkitpro` and `export DEVKITARM=/opt/devkitpro/devkitARM`
+
+You can now proceed to the installation section
+
+**Windows 7 and 8.1 users:** pret is no longer focusing on support in pokeemerald for [old versions of Windows](https://support.microsoft.com/help/13853) so consider upgrading to a current release of Windows 10 or try a third-party guide like [this one](https://www.pokecommunity.com/showthread.php?t=425246) instead. Remember to update the git clone from pret/pokeemerald to ProjectRevoTPP/pokeemerald-speedchoice
+
+**MacOS users:** Nogarremi does not have a Mac device and cannot walk somebody through that process
 
 # Installation
 
 To set up the repository:
 
-	git clone https://github.com/pret/pokeemerald
 	git clone https://github.com/pret/agbcc
+	git clone https://github.com/ProjectRevoTPP/pokeemerald-speedchoice
 
 	cd ./agbcc
 	./build.sh
-	./install.sh ../pokeemerald
-
-	cd ../pokeemerald
-
-To build **pokeemerald.gba** for the first time and confirm it matches the official ROM image:
-
-	make compare
-
-If an OK is returned, then the installation went smoothly.
+	./install.sh ../pokeemerald-speedchoice
 
-**Windows users:** Consider adding exceptions for the `pokeemerald` and `agbcc` folders in Windows Security using [these instructions](https://support.microsoft.com/help/4028485). This prevents Microsoft Defender from scanning them which might improve performance while building.
+	cd ../pokeemerald-speedchoice
+	./build_tools.sh
 
+To build **pokeemerald-speedchoice.gba**:
 
-# Start
+	`make`
 
-To build **pokeemerald.gba** with your changes:
+A successful build will end with the lines:
+`arm-none-eabi-objcopy -O binary pokeemerald-speedchoice.elf pokeemerald-speedchoice.gba`
+`tools/gbafix/gbafix pokeemerald-speedchoice.gba -p --silent`
 
-	make
+**Windows users:** Consider adding exceptions for the `pokeemerald-speedchoice` and `agbcc` folders in Windows Security using [these instructions](https://support.microsoft.com/help/4028485). This prevents Microsoft Defender from scanning them which might improve performance while building.
 
 **macOS users:** If the base tools are not found in new Terminal sessions after the first successful build, run `echo "if [ -f ~/.bashrc ]; then . ~/.bashrc; fi" >> ~/.bash_profile` once to prevent the issue from occurring again. Verify that the `devkitarm-rules` package is installed as well; if not, install it by running `sudo dkp-pacman -S devkitarm-rules`.
 
diff --git a/Makefile b/Makefile
index 78a2c2a4f..80a20af95 100644
--- a/Makefile
+++ b/Makefile
@@ -32,7 +32,7 @@ EXE :=
 endif
 
 TITLE       := POKEMON EMER
-GAME_CODE   := BPEE
+GAME_CODE   := SPDC
 MAKER_CODE  := 01
 REVISION    := 0
 MODERN      ?= 0
@@ -41,6 +41,8 @@ SHELL := /bin/bash -o pipefail
 
 ELF = $(ROM:.gba=.elf)
 MAP = $(ROM:.gba=.map)
+INI = $(ROM:.gba=.ini)
+PATCH := $(ROM:.gba=.xdelta)
 
 C_SUBDIR = src
 GFLIB_SUBDIR = gflib
@@ -64,7 +66,7 @@ ASFLAGS := -mcpu=arm7tdmi --defsym MODERN=$(MODERN)
 ifeq ($(MODERN),0)
 CC1             := tools/agbcc/bin/agbcc$(EXE)
 override CFLAGS += -mthumb-interwork -Wimplicit -Wparentheses -Werror -O2 -fhex-asm -g
-ROM := pokeemerald.gba
+ROM := pokeemerald-speedchoice.gba
 OBJ_DIR := build/emerald
 LIBPATH := -L ../../tools/agbcc/lib
 else
@@ -94,6 +96,8 @@ RAMSCRGEN := tools/ramscrgen/ramscrgen$(EXE)
 FIX := tools/gbafix/gbafix$(EXE)
 MAPJSON := tools/mapjson/mapjson$(EXE)
 JSONPROC := tools/jsonproc/jsonproc$(EXE)
+INIGEN := tools/inigen/inigen$(EXE)
+XDELTA := xdelta3
 
 TOOLDIRS := $(filter-out tools/agbcc tools/binutils,$(wildcard tools/*))
 TOOLBASE = $(TOOLDIRS:tools/%=%)
@@ -117,7 +121,7 @@ infoshell = $(foreach line, $(shell $1 | sed "s/ /__SPACE__/g"), $(info $(subst
 
 # Build tools when building the rom
 # Disable dependency scanning for clean/tidy/tools
-ifeq (,$(filter-out all rom compare modern berry_fix libagbsyscall,$(MAKECMDGOALS)))
+ifeq (,$(filter-out all rom compare modern berry_fix libagbsyscall release,$(MAKECMDGOALS)))
 $(call infoshell, $(MAKE) tools)
 else
 NODEP := 1
@@ -169,6 +173,12 @@ ifeq ($(COMPARE),1)
 	@$(SHA1) rom.sha1
 endif
 
+release: ini patch
+
+ini: $(INI)
+
+patch: $(PATCH)
+
 # For contributors to make sure a change didn't affect the contents of the ROM.
 compare: ; @$(MAKE) COMPARE=1
 
@@ -345,3 +355,12 @@ berry_fix:
 
 libagbsyscall:
 	@$(MAKE) -C libagbsyscall TOOLCHAIN=$(TOOLCHAIN)
+
+$(INI): $(ROM)
+	$(INIGEN) $(ELF) $@ --name "Emerald Speedchoice (U)" --code $(GAME_CODE)
+	echo "MD5Hash="$(shell md5sum $< | cut -d' ' -f1) >> $@
+
+$(PATCH): $(ROM)
+	$(XDELTA) -f -e -s baserom.gba $< $@
+
+print-% : ; $(info $* is a $(flavor $*) variable set to [$($*)]) @true
diff --git a/README.md b/README.md
index 2c3447abc..553f68d8d 100644
--- a/README.md
+++ b/README.md
@@ -1,15 +1,12 @@
-# Pokémon Emerald
+# Pokémon Emerald Speedchoice Edition
 
-[![Build Status][travis-badge]][travis]
+This is a decompilation of Pokémon Emerald with changes made to be more speedrun friendly.
 
-[travis]: https://travis-ci.org/pret/pokeemerald
-[travis-badge]: https://travis-ci.org/pret/pokeemerald.svg?branch=master
-
-This is a decompilation of Pokémon Emerald.
+* [Original decompilation by pret](https://github.com/pret/pokeemerald)
 
 It builds the following ROM:
 
-* [**pokeemerald.gba**](https://datomatic.no-intro.org/index.php?page=show_record&s=23&n=1961) `sha1: f3ae088181bf583e55daf962a92bb46f4f1d07b7`
+* pokeemerald-speedchoice.gba
 
 To set up the repository, see [INSTALL.md](INSTALL.md).
 
diff --git a/asm/macros/event.inc b/asm/macros/event.inc
index eafd19b1c..1287e0c34 100644
--- a/asm/macros/event.inc
+++ b/asm/macros/event.inc
@@ -1614,6 +1614,13 @@
 	.2byte \quantity
 	.endm
 
+    @ speedchoice option checking command for checking if a specific
+    @ setting on a specific option is set.
+    .macro checkspeedchoice option:req, setting:req
+    .byte 0xe3
+    .byte \option
+    .byte \setting
+    .endm
 
 @ Supplementary
 
diff --git a/constants/global.inc b/constants/global.inc
index 621ba2af8..8bdc49d8d 100644
--- a/constants/global.inc
+++ b/constants/global.inc
@@ -20,3 +20,96 @@
 
 	.set OBJ_IMAGE_ANIM_H_FLIP, 1 << 6
 	.set OBJ_IMAGE_ANIM_V_FLIP, 1 << 7
+
+    @ README: ensure that these values are aligned with the enum in speedchoice.h!
+    @ 0 is for the preset value in the enum and 1 is for the player name.
+    @ DO NOT USE THESE VALUES!
+    @ 0 reserved for PRESET
+    @ 1 reserved for PLAYER_NAME
+	.set EXPMATH, 2
+	.set PLOTLESS, 3
+	.set SPINNERS, 4
+	.set MAXVISION, 5
+	.set EARLYFLY, 6
+	.set GOOD_EARLY_WILDS, 7
+	.set EARLYSURF, 8
+	.set NICE_MENU_ORDER, 9
+	.set EASY_FALSE_SWIPE, 10
+    .set FAST_CATCH, 11
+    .set GEN_7_X_ITEMS, 12
+    .set EVO_EVERY_LEVEL, 13
+
+    @ -------------
+    @ option enums
+    @ -------------
+
+    @ EXPMATH
+    .set EXP_KEEP, 0
+    .set EXP_BW, 1
+    .set EXP_NONE, 2
+
+    @ PLOTLESS
+    .set PLOT_SEMI, 0
+    .set PLOT_KEEP, 1
+    .set PLOT_FULL, 2
+
+    @ INSTANT TEXT (DEPRECATED)
+    .set IT_ON, 0
+    .set IT_OFF, 1
+
+    @ SPINNERS
+    .set SPIN_NERF, 0
+    .set SPIN_KEEP, 1
+    .set SPIN_HELL, 2
+    .set SPIN_WHY, 3
+
+    @ MAX VISION
+    .set MAX_OFF, 0
+    .set MAX_SANE, 1
+    .set MAX_HELL, 2
+
+    @ NERF ROXANNE (DEPRECATED)
+    .set NERF_YES, 0
+    .set NERF_NO, 1
+
+    @ SUPER BIKE (DEPRECATED)
+    .set BIKE_ON, 0
+    .set BIKE_OFF, 1
+
+    @ NEW WILD ENC (DEPRECATED)
+    .set NEW_ON, 0
+    .set NEW_OFF, 1
+
+    @ EARLY FLY
+    .set FLY_YES, 0
+    .set FLY_NO, 1
+
+    @ RUN EVERYWHERE (DEPRECATED)
+    .set RUN_ON, 0
+    .set RUN_OFF, 1
+
+    @ MEME ISLAND (DEPRECATED)
+    .set MEME_BIG, 0 @ dot net
+    .set MEME_SMALL, 1 @ you're banned
+
+    @ BETTER MARTS (DEPRECATED)
+    .set MARTS_ON, 0
+    .set MARTS_OFF, 1
+
+    @ GOOD EARLY WILDS
+    .set GOOD_OFF, 0
+    .set GOOD_STATIC, 1
+    .set GOOD_RAND, 2
+
+    @ EARLY SURF
+    .set SURF_ON, 0
+    .set SURF_OFF, 1
+
+    @ NICE_MENU_ORDER
+    .set NICE_MENU_ORDER_ON, 0
+    .set NICE_MENU_ORDER_OFF, 1
+
+    @ EASY_FALSE_SWIPE
+    .set EASY_FALSE_SWIPE_OFF, 0
+    .set EASY_FALSE_SWIPE_TUTOR, 1
+    .set EASY_FALSE_SWIPE_HM05, 2
diff --git a/data/battle_scripts_1.s b/data/battle_scripts_1.s
index bf8ab19c1..d583e15a8 100644
--- a/data/battle_scripts_1.s
+++ b/data/battle_scripts_1.s
@@ -278,9 +278,9 @@ BattleScript_HitFromAtkAnimation::
 	healthbarupdate BS_TARGET
 	datahpupdate BS_TARGET
 	critmessage
-	waitmessage 0x40
+	waitmessage 1
 	resultmessage
-	waitmessage 0x40
+	waitmessage 1
 	seteffectwithchance
 	tryfaintmon BS_TARGET, FALSE, NULL
 BattleScript_MoveEnd::
@@ -297,7 +297,7 @@ BattleScript_MoveMissedPause::
 BattleScript_MoveMissed::
 	effectivenesssound
 	resultmessage
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_EffectSleep::
@@ -320,19 +320,19 @@ BattleScript_AlreadyAsleep::
 	setalreadystatusedmoveattempt BS_ATTACKER
 	pause 0x20
 	printstring STRINGID_PKMNALREADYASLEEP
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_WasntAffected::
 	pause 0x20
 	printstring STRINGID_PKMNWASNTAFFECTED
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_CantMakeAsleep::
 	pause 0x20
 	printfromtable gUproarAwakeStringIds
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_EffectPoisonHit::
@@ -357,9 +357,9 @@ BattleScript_EffectAbsorb::
 	healthbarupdate BS_TARGET
 	datahpupdate BS_TARGET
 	critmessage
-	waitmessage 0x40
+	waitmessage 1
 	resultmessage
-	waitmessage 0x40
+	waitmessage 1
 	negativedamage
 	orword gHitMarker, HITMARKER_IGNORE_SUBSTITUTE
 	jumpifability BS_TARGET, ABILITY_LIQUID_OOZE, BattleScript_AbsorbLiquidOoze
@@ -373,7 +373,7 @@ BattleScript_AbsorbUpdateHp::
 	datahpupdate BS_ATTACKER
 	jumpifmovehadnoeffect BattleScript_AbsorbTryFainting
 	printfromtable gLeechSeedDrainStringIds
-	waitmessage 0x40
+	waitmessage 1
 BattleScript_AbsorbTryFainting::
 	tryfaintmon BS_ATTACKER, FALSE, NULL
 	tryfaintmon BS_TARGET, FALSE, NULL
@@ -418,9 +418,9 @@ BattleScript_ExplosionLoop:
 	healthbarupdate BS_TARGET
 	datahpupdate BS_TARGET
 	critmessage
-	waitmessage 0x40
+	waitmessage 1
 	resultmessage
-	waitmessage 0x40
+	waitmessage 1
 	tryfaintmon BS_TARGET, FALSE, NULL
 	moveendto MOVEEND_NEXT_TARGET
 	jumpifnexttargetvalid BattleScript_ExplosionLoop
@@ -429,7 +429,7 @@ BattleScript_ExplosionLoop:
 BattleScript_ExplosionMissed:
 	effectivenesssound
 	resultmessage
-	waitmessage 0x40
+	waitmessage 1
 	moveendto MOVEEND_NEXT_TARGET
 	jumpifnexttargetvalid BattleScript_ExplosionLoop
 	tryfaintmon BS_ATTACKER, FALSE, NULL
@@ -449,7 +449,7 @@ BattleScript_EffectDreamEater::
 BattleScript_DreamEaterNoEffect:
 	attackstring
 	ppreduce
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_WasntAffected
 BattleScript_DreamEaterWorked:
 	accuracycheck BattleScript_PrintMoveMissed, ACC_CURR_MOVE
@@ -467,16 +467,16 @@ BattleScript_DreamEaterWorked:
 	healthbarupdate BS_TARGET
 	datahpupdate BS_TARGET
 	critmessage
-	waitmessage 0x40
+	waitmessage 1
 	resultmessage
-	waitmessage 0x40
+	waitmessage 1
 	negativedamage
 	orword gHitMarker, HITMARKER_IGNORE_SUBSTITUTE
 	healthbarupdate BS_ATTACKER
 	datahpupdate BS_ATTACKER
 	jumpifmovehadnoeffect BattleScript_DreamEaterTryFaintEnd
 	printstring STRINGID_PKMNDREAMEATEN
-	waitmessage 0x40
+	waitmessage 1
 BattleScript_DreamEaterTryFaintEnd:
 	tryfaintmon BS_TARGET, FALSE, NULL
 	goto BattleScript_MoveEnd
@@ -489,7 +489,7 @@ BattleScript_EffectMirrorMove::
 	ppreduce
 	orbyte gMoveResultFlags, MOVE_RESULT_FAILED
 	printstring STRINGID_MIRRORMOVEFAILED
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_EffectAttackUp::
@@ -523,14 +523,14 @@ BattleScript_StatUpDoAnim::
 	playanimation BS_ATTACKER, B_ANIM_STATS_CHANGE, sB_ANIM_ARG1
 BattleScript_StatUpPrintString::
 	printfromtable gStatUpStringIds
-	waitmessage 0x40
+	waitmessage 1
 BattleScript_StatUpEnd::
 	goto BattleScript_MoveEnd
 
 BattleScript_StatUp::
 	playanimation BS_EFFECT_BATTLER, B_ANIM_STATS_CHANGE, sB_ANIM_ARG1
 	printfromtable gStatUpStringIds
-	waitmessage 0x40
+	waitmessage 1
 	return
 
 BattleScript_EffectAttackDown::
@@ -569,14 +569,14 @@ BattleScript_StatDownDoAnim::
 	playanimation BS_TARGET, B_ANIM_STATS_CHANGE, sB_ANIM_ARG1
 BattleScript_StatDownPrintString::
 	printfromtable gStatDownStringIds
-	waitmessage 0x40
+	waitmessage 1
 BattleScript_StatDownEnd::
 	goto BattleScript_MoveEnd
 
 BattleScript_StatDown::
 	playanimation BS_EFFECT_BATTLER, B_ANIM_STATS_CHANGE, sB_ANIM_ARG1
 	printfromtable gStatDownStringIds
-	waitmessage 0x40
+	waitmessage 1
 	return
 
 BattleScript_EffectHaze::
@@ -587,7 +587,7 @@ BattleScript_EffectHaze::
 	waitanimation
 	normalisebuffs
 	printstring STRINGID_STATCHANGESGONE
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_EffectBide::
@@ -650,9 +650,9 @@ BattleScript_DoMultiHit::
 	healthbarupdate BS_TARGET
 	datahpupdate BS_TARGET
 	critmessage
-	waitmessage 0x40
+	waitmessage 1
 	printstring STRINGID_EMPTYSTRING3
-	waitmessage 0x1
+	waitmessage 1
 	addbyte sMULTIHIT_STRING + 4, 0x1
 	moveendto MOVEEND_NEXT_TARGET
 	jumpifbyte CMP_COMMON_BITS, gMoveResultFlags, MOVE_RESULT_FOE_ENDURED, BattleScript_MultiHitPrintStrings
@@ -662,11 +662,11 @@ BattleScript_MultiHitNoMoreHits::
 	pause 0x20
 BattleScript_MultiHitPrintStrings::
 	resultmessage
-	waitmessage 0x40
+	waitmessage 1
 	jumpifmovehadnoeffect BattleScript_MultiHitEnd
 	copyarray gBattleTextBuff1, sMULTIHIT_STRING, 0x6
 	printstring STRINGID_HITXTIMES
-	waitmessage 0x40
+	waitmessage 1
 BattleScript_MultiHitEnd::
 	seteffectwithchance
 	tryfaintmon BS_TARGET, FALSE, NULL
@@ -682,7 +682,7 @@ BattleScript_EffectConversion::
 	attackanimation
 	waitanimation
 	printstring STRINGID_PKMNCHANGEDTYPE
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_EffectFlinchHit::
@@ -700,7 +700,7 @@ BattleScript_EffectRestoreHp::
 	healthbarupdate BS_ATTACKER
 	datahpupdate BS_ATTACKER
 	printstring STRINGID_PKMNREGAINEDHEALTH
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_EffectToxic::
@@ -721,14 +721,14 @@ BattleScript_EffectToxic::
 	setmoveeffect MOVE_EFFECT_TOXIC
 	seteffectprimary
 	resultmessage
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_AlreadyPoisoned::
 	setalreadystatusedmoveattempt BS_ATTACKER
 	pause 0x40
 	printstring STRINGID_PKMNALREADYPOISONED
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_ImmunityProtected::
@@ -761,7 +761,7 @@ BattleScript_EffectRest::
 	trysetrest BattleScript_AlreadyAtFullHp
 	pause 0x20
 	printfromtable gRestUsedStringIds
-	waitmessage 0x40
+	waitmessage 1
 	updatestatusicon BS_ATTACKER
 	waitstate
 	goto BattleScript_PresentHealTarget
@@ -769,14 +769,14 @@ BattleScript_EffectRest::
 BattleScript_RestCantSleep::
 	pause 0x40
 	printfromtable gUproarAwakeStringIds
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_RestIsAlreadyAsleep::
 	setalreadystatusedmoveattempt BS_ATTACKER
 	pause 0x20
 	printstring STRINGID_PKMNALREADYASLEEP2
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_EffectOHKO::
@@ -792,7 +792,7 @@ BattleScript_EffectOHKO::
 BattleScript_KOFail::
 	pause 0x40
 	printfromtable gKOFailedStringIds
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_EffectRazorWind::
@@ -823,7 +823,7 @@ BattleScriptFirstChargingTurn::
 	seteffectprimary
 	copybyte cMULTISTRING_CHOOSER, sTWOTURN_STRINGID
 	printfromtable gFirstTurnOfTwoStringIds
-	waitmessage 0x40
+	waitmessage 1
 	return
 
 BattleScript_EffectSuperFang::
@@ -875,10 +875,10 @@ BattleScript_MoveMissedDoDamage::
 	ppreduce
 	pause 0x40
 	resultmessage
-	waitmessage 0x40
+	waitmessage 1
 	jumpifbyte CMP_COMMON_BITS, gMoveResultFlags, MOVE_RESULT_DOESNT_AFFECT_FOE, BattleScript_MoveEnd
 	printstring STRINGID_PKMNCRASHED
-	waitmessage 0x40
+	waitmessage 1
 	damagecalc
 	typecalc
 	adjustnormaldamage
@@ -899,7 +899,7 @@ BattleScript_EffectMist::
 	attackanimation
 	waitanimation
 	printfromtable gMistUsedStringIds
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_EffectFocusEnergy::
@@ -911,7 +911,7 @@ BattleScript_EffectFocusEnergy::
 	attackanimation
 	waitanimation
 	printfromtable gFocusEnergyUsedStringIds
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_EffectRecoil::
@@ -934,14 +934,14 @@ BattleScript_EffectConfuse::
 	setmoveeffect MOVE_EFFECT_CONFUSION
 	seteffectprimary
 	resultmessage
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_AlreadyConfused::
 	setalreadystatusedmoveattempt BS_ATTACKER
 	pause 0x20
 	printstring STRINGID_PKMNALREADYCONFUSED
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_EffectAttackUp2::
@@ -972,7 +972,7 @@ BattleScript_EffectTransform::
 	attackanimation
 	waitanimation
 	printfromtable gTransformUsedStringIds
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_EffectAttackDown2::
@@ -1000,7 +1000,7 @@ BattleScript_PrintReflectLightScreenSafeguardString::
 	attackanimation
 	waitanimation
 	printfromtable gReflectLightScreenSafeguardStringIds
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_EffectPoison::
@@ -1021,7 +1021,7 @@ BattleScript_EffectPoison::
 	setmoveeffect MOVE_EFFECT_POISON
 	seteffectprimary
 	resultmessage
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_EffectParalyze::
@@ -1041,14 +1041,14 @@ BattleScript_EffectParalyze::
 	setmoveeffect MOVE_EFFECT_PARALYSIS
 	seteffectprimary
 	resultmessage
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_AlreadyParalyzed::
 	setalreadystatusedmoveattempt BS_ATTACKER
 	pause 0x20
 	printstring STRINGID_PKMNISALREADYPARALYZED
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_LimberProtected::
@@ -1119,13 +1119,13 @@ BattleScript_SubstituteAnim::
 	datahpupdate BS_ATTACKER
 BattleScript_SubstituteString::
 	printfromtable gSubsituteUsedStringIds
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 BattleScript_AlreadyHasSubstitute::
 	setalreadystatusedmoveattempt BS_ATTACKER
 	pause 0x20
 	printstring STRINGID_PKMNHASSUBSTITUTE
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_EffectRecharge::
@@ -1136,7 +1136,7 @@ BattleScript_EffectRecharge::
 
 BattleScript_MoveUsedMustRecharge::
 	printstring STRINGID_PKMNMUSTRECHARGE
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_EffectRage::
@@ -1161,7 +1161,7 @@ BattleScript_EffectMimic::
 	attackanimation
 	waitanimation
 	printstring STRINGID_PKMNLEARNEDMOVE2
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_EffectMetronome::
@@ -1186,7 +1186,7 @@ BattleScript_DoLeechSeed::
 	attackanimation
 	waitanimation
 	printfromtable gLeechSeedStringIds
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_EffectSplash::
@@ -1197,7 +1197,7 @@ BattleScript_EffectSplash::
 	waitanimation
 	incrementgamestat GAME_STAT_USED_SPLASH
 	printstring STRINGID_BUTNOTHINGHAPPENED
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_EffectDisable::
@@ -1209,7 +1209,7 @@ BattleScript_EffectDisable::
 	attackanimation
 	waitanimation
 	printstring STRINGID_PKMNMOVEWASDISABLED
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_EffectLevelDamage::
@@ -1253,7 +1253,7 @@ BattleScript_EffectEncore::
 	attackanimation
 	waitanimation
 	printstring STRINGID_PKMNGOTENCORE
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_EffectPainSplit::
@@ -1271,7 +1271,7 @@ BattleScript_EffectPainSplit::
 	healthbarupdate BS_TARGET
 	datahpupdate BS_TARGET
 	printstring STRINGID_SHAREDPAIN
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_EffectSnore::
@@ -1283,7 +1283,7 @@ BattleScript_EffectSnore::
 BattleScript_SnoreIsAsleep::
 	jumpifhalfword CMP_EQUAL, gChosenMove, MOVE_SLEEP_TALK, BattleScript_DoSnore
 	printstring STRINGID_PKMNFASTASLEEP
-	waitmessage 0x40
+	waitmessage 1
 	statusanimation BS_ATTACKER
 BattleScript_DoSnore::
 	attackstring
@@ -1300,7 +1300,7 @@ BattleScript_EffectConversion2::
 	attackanimation
 	waitanimation
 	printstring STRINGID_PKMNCHANGEDTYPE
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_EffectLockOn::
@@ -1313,7 +1313,7 @@ BattleScript_EffectLockOn::
 	attackanimation
 	waitanimation
 	printstring STRINGID_PKMNTOOKAIM
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_EffectSketch::
@@ -1325,7 +1325,7 @@ BattleScript_EffectSketch::
 	attackanimation
 	waitanimation
 	printstring STRINGID_PKMNSKETCHEDMOVE
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_EffectSleepTalk::
@@ -1336,7 +1336,7 @@ BattleScript_EffectSleepTalk::
 	goto BattleScript_ButItFailed
 BattleScript_SleepTalkIsAsleep::
 	printstring STRINGID_PKMNFASTASLEEP
-	waitmessage 0x40
+	waitmessage 1
 	statusanimation BS_ATTACKER
 	attackstring
 	ppreduce
@@ -1359,7 +1359,7 @@ BattleScript_EffectDestinyBond::
 	attackanimation
 	waitanimation
 	printstring STRINGID_PKMNTRYINGTOTAKEFOE
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_EffectFlail::
@@ -1375,7 +1375,7 @@ BattleScript_EffectSpite::
 	attackanimation
 	waitanimation
 	printstring STRINGID_PKMNREDUCEDPP
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_EffectHealBell::
@@ -1387,15 +1387,15 @@ BattleScript_EffectHealBell::
 	attackanimation
 	waitanimation
 	printfromtable gPartyStatusHealStringIds
-	waitmessage 0x40
+	waitmessage 1
 	jumpifnotmove MOVE_HEAL_BELL, BattleScript_PartyHealEnd
 	jumpifbyte CMP_NO_COMMON_BITS, cMULTISTRING_CHOOSER, 0x1, BattleScript_CheckHealBellMon2Unaffected
 	printstring STRINGID_PKMNSXBLOCKSY
-	waitmessage 0x40
+	waitmessage 1
 BattleScript_CheckHealBellMon2Unaffected::
 	jumpifbyte CMP_NO_COMMON_BITS, cMULTISTRING_CHOOSER, 0x2, BattleScript_PartyHealEnd
 	printstring STRINGID_PKMNSXBLOCKSY2
-	waitmessage 0x40
+	waitmessage 1
 BattleScript_PartyHealEnd::
 	updatestatusicon BS_ATTACKER_WITH_PARTNER
 	waitstate
@@ -1432,9 +1432,9 @@ BattleScript_DoTripleKickAttack::
 	healthbarupdate BS_TARGET
 	datahpupdate BS_TARGET
 	critmessage
-	waitmessage 0x40
+	waitmessage 1
 	printstring STRINGID_EMPTYSTRING3
-	waitmessage 0x1
+	waitmessage 1
 	moveendto MOVEEND_NEXT_TARGET
 	jumpifbyte CMP_COMMON_BITS, gMoveResultFlags, MOVE_RESULT_FOE_ENDURED, BattleScript_TripleKickPrintStrings
 	decrementmultihit BattleScript_TripleKickLoop
@@ -1445,12 +1445,12 @@ BattleScript_TripleKickNoMoreHits::
 	bicbyte gMoveResultFlags, MOVE_RESULT_MISSED
 BattleScript_TripleKickPrintStrings::
 	resultmessage
-	waitmessage 0x40
+	waitmessage 1
 	jumpifbyte CMP_EQUAL, sMULTIHIT_STRING + 4, 0x0, BattleScript_TripleKickEnd
 	jumpifbyte CMP_COMMON_BITS, gMoveResultFlags, MOVE_RESULT_DOESNT_AFFECT_FOE, BattleScript_TripleKickEnd
 	copyarray gBattleTextBuff1, sMULTIHIT_STRING, 0x6
 	printstring STRINGID_HITXTIMES
-	waitmessage 0x40
+	waitmessage 1
 BattleScript_TripleKickEnd::
 	seteffectwithchance
 	tryfaintmon BS_TARGET, FALSE, NULL
@@ -1473,7 +1473,7 @@ BattleScript_EffectMeanLook::
 	setmoveeffect MOVE_EFFECT_PREVENT_ESCAPE
 	seteffectprimary
 	printstring STRINGID_TARGETCANTESCAPENOW
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_EffectNightmare::
@@ -1490,7 +1490,7 @@ BattleScript_NightmareWorked::
 	setmoveeffect MOVE_EFFECT_NIGHTMARE
 	seteffectprimary
 	printstring STRINGID_PKMNFELLINTONIGHTMARE
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_EffectMinimize::
@@ -1515,17 +1515,17 @@ BattleScript_CurseTrySpeed::
 	setstatchanger STAT_SPEED, 1, TRUE
 	statbuffchange MOVE_EFFECT_AFFECTS_USER | STAT_BUFF_ALLOW_PTR, BattleScript_CurseTryAttack
 	printfromtable gStatDownStringIds
-	waitmessage 0x40
+	waitmessage 1
 BattleScript_CurseTryAttack::
 	setstatchanger STAT_ATK, 1, FALSE
 	statbuffchange MOVE_EFFECT_AFFECTS_USER | STAT_BUFF_ALLOW_PTR, BattleScript_CurseTryDefence
 	printfromtable gStatUpStringIds
-	waitmessage 0x40
+	waitmessage 1
 BattleScript_CurseTryDefence::
 	setstatchanger STAT_DEF, 1, FALSE
 	statbuffchange MOVE_EFFECT_AFFECTS_USER | STAT_BUFF_ALLOW_PTR, BattleScript_CurseEnd
 	printfromtable gStatUpStringIds
-	waitmessage 0x40
+	waitmessage 1
 BattleScript_CurseEnd::
 	goto BattleScript_MoveEnd
 BattleScript_GhostCurse::
@@ -1545,7 +1545,7 @@ BattleScript_DoGhostCurse::
 	healthbarupdate BS_ATTACKER
 	datahpupdate BS_ATTACKER
 	printstring STRINGID_PKMNLAIDCURSE
-	waitmessage 0x40
+	waitmessage 1
 	tryfaintmon BS_ATTACKER, FALSE, NULL
 	goto BattleScript_MoveEnd
 
@@ -1558,7 +1558,7 @@ BattleScript_EffectEndure::
 	attackanimation
 	waitanimation
 	printfromtable gProtectLikeUsedStringIds
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_EffectSpikes::
@@ -1569,7 +1569,7 @@ BattleScript_EffectSpikes::
 	attackanimation
 	waitanimation
 	printstring STRINGID_SPIKESSCATTERED
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_EffectForesight::
@@ -1581,7 +1581,7 @@ BattleScript_EffectForesight::
 	attackanimation
 	waitanimation
 	printstring STRINGID_PKMNIDENTIFIED
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_EffectPerishSong::
@@ -1592,7 +1592,7 @@ BattleScript_EffectPerishSong::
 	attackanimation
 	waitanimation
 	printstring STRINGID_FAINTINTHREE
-	waitmessage 0x40
+	waitmessage 1
 	setbyte sBATTLER, 0x0
 BattleScript_PerishSongLoop::
 	jumpifability BS_SCRIPTING, ABILITY_SOUNDPROOF, BattleScript_PerishSongNotAffected
@@ -1603,7 +1603,7 @@ BattleScript_PerishSongLoopIncrement::
 
 BattleScript_PerishSongNotAffected::
 	printstring STRINGID_PKMNSXBLOCKSY2
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_PerishSongLoopIncrement
 
 BattleScript_EffectSandstorm::
@@ -1640,7 +1640,7 @@ BattleScript_EffectSwagger::
 	setgraphicalstatchangevalues
 	playanimation BS_TARGET, B_ANIM_STATS_CHANGE, sB_ANIM_ARG1
 	printfromtable gStatUpStringIds
-	waitmessage 0x40
+	waitmessage 1
 BattleScript_SwaggerTryConfuse::
 	jumpifability BS_TARGET, ABILITY_OWN_TEMPO, BattleScript_OwnTempoPrevents
 	jumpifsideaffecting BS_TARGET, SIDE_STATUS_SAFEGUARD, BattleScript_SafeguardProtected
@@ -1671,7 +1671,7 @@ BattleScript_EffectAttract::
 	attackanimation
 	waitanimation
 	printstring STRINGID_PKMNFELLINLOVE
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_EffectReturn::
@@ -1708,7 +1708,7 @@ BattleScript_EffectMagnitude::
 	magnitudedamagecalculation
 	pause 0x20
 	printstring STRINGID_MAGNITUDESTRENGTH
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_HitsAllWithUndergroundBonusLoop
 
 BattleScript_EffectBatonPass::
@@ -1770,7 +1770,7 @@ BattleScript_MoveWeatherChange::
 	attackanimation
 	waitanimation
 	printfromtable gMoveWeatherChangeStringIds
-	waitmessage 0x40
+	waitmessage 1
 	call BattleScript_WeatherFormChanges
 	goto BattleScript_MoveEnd
 
@@ -1804,7 +1804,7 @@ BattleScript_EffectBellyDrum::
 	healthbarupdate BS_ATTACKER
 	datahpupdate BS_ATTACKER
 	printstring STRINGID_PKMNCUTHPMAXEDATTACK
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_EffectPsychUp::
@@ -1815,7 +1815,7 @@ BattleScript_EffectPsychUp::
 	attackanimation
 	waitanimation
 	printstring STRINGID_PKMNCOPIEDSTATCHANGES
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_EffectMirrorCoat::
@@ -1839,7 +1839,7 @@ BattleScript_EffectSkullBash::
 	setgraphicalstatchangevalues
 	playanimation BS_ATTACKER, B_ANIM_STATS_CHANGE, sB_ANIM_ARG1
 	printfromtable gStatUpStringIds
-	waitmessage 0x40
+	waitmessage 1
 BattleScript_SkullBashEnd::
 	goto BattleScript_MoveEnd
 
@@ -1879,11 +1879,11 @@ BattleScript_DoHitAllWithUndergroundBonus::
 	healthbarupdate BS_TARGET
 	datahpupdate BS_TARGET
 	critmessage
-	waitmessage 0x40
+	waitmessage 1
 	resultmessage
-	waitmessage 0x40
+	waitmessage 1
 	printstring STRINGID_EMPTYSTRING3
-	waitmessage 0x1
+	waitmessage 1
 	tryfaintmon BS_TARGET, FALSE, NULL
 	moveendto MOVEEND_NEXT_TARGET
 	jumpifnexttargetvalid BattleScript_HitsAllWithUndergroundBonusLoop
@@ -1893,7 +1893,7 @@ BattleScript_HitAllWithUndergroundBonusMissed::
 	typecalc
 	effectivenesssound
 	resultmessage
-	waitmessage 0x40
+	waitmessage 1
 	moveendto MOVEEND_NEXT_TARGET
 	jumpifnexttargetvalid BattleScript_HitsAllWithUndergroundBonusLoop
 	end
@@ -1906,7 +1906,7 @@ BattleScript_EffectFutureSight::
 	attackanimation
 	waitanimation
 	printfromtable gFutureMoveUsedStringIds
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_EffectGust::
@@ -1953,7 +1953,7 @@ BattleScript_EffectTeleport::
 	attackanimation
 	waitanimation
 	printstring STRINGID_PKMNFLEDFROMBATTLE
-	waitmessage 0x40
+	waitmessage 1
 	setoutcomeonteleport BS_ATTACKER
 	goto BattleScript_MoveEnd
 
@@ -1981,9 +1981,9 @@ BattleScript_BeatUpAttack::
 	healthbarupdate BS_TARGET
 	datahpupdate BS_TARGET
 	critmessage
-	waitmessage 0x40
+	waitmessage 1
 	resultmessage
-	waitmessage 0x40
+	waitmessage 1
 	tryfaintmon BS_TARGET, FALSE, NULL
 	moveendto MOVEEND_NEXT_TARGET
 	goto BattleScript_BeatUpLoop
@@ -2056,13 +2056,13 @@ BattleScript_PresentHealTarget::
 	healthbarupdate BS_TARGET
 	datahpupdate BS_TARGET
 	printstring STRINGID_PKMNREGAINEDHEALTH
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_AlreadyAtFullHp::
 	pause 0x20
 	printstring STRINGID_PKMNHPFULL
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_EffectFakeOut::
@@ -2079,14 +2079,14 @@ BattleScript_ButItFailed::
 	pause 0x20
 	orbyte gMoveResultFlags, MOVE_RESULT_FAILED
 	resultmessage
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_NotAffected::
 	pause 0x20
 	orbyte gMoveResultFlags, MOVE_RESULT_DOESNT_AFFECT_FOE
 	resultmessage
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_EffectUproar::
@@ -2108,7 +2108,7 @@ BattleScript_EffectStockpile::
 	attackanimation
 	waitanimation
 	printfromtable gStockpileUsedStringIds
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_EffectSpitUp::
@@ -2124,7 +2124,7 @@ BattleScript_EffectSpitUp::
 BattleScript_SpitUpFail::
 	pause 0x20
 	printstring STRINGID_FAILEDTOSPITUP
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_82D9FA2::
@@ -2133,7 +2133,7 @@ BattleScript_82D9FA2::
 	pause 0x40
 	stockpiletobasedamage BattleScript_SpitUpFail
 	resultmessage
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_EffectSwallow::
@@ -2146,7 +2146,7 @@ BattleScript_EffectSwallow::
 BattleScript_SwallowFail::
 	pause 0x20
 	printfromtable gSwallowFailStringIds
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_EffectHail::
@@ -2165,7 +2165,7 @@ BattleScript_EffectTorment::
 	attackanimation
 	waitanimation
 	printstring STRINGID_PKMNSUBJECTEDTOTORMENT
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_EffectFlatter::
@@ -2183,7 +2183,7 @@ BattleScript_EffectFlatter::
 	setgraphicalstatchangevalues
 	playanimation BS_TARGET, B_ANIM_STATS_CHANGE, sB_ANIM_ARG1
 	printfromtable gStatUpStringIds
-	waitmessage 0x40
+	waitmessage 1
 BattleScript_FlatterTryConfuse::
 	jumpifability BS_TARGET, ABILITY_OWN_TEMPO, BattleScript_OwnTempoPrevents
 	jumpifsideaffecting BS_TARGET, SIDE_STATUS_SAFEGUARD, BattleScript_SafeguardProtected
@@ -2218,7 +2218,7 @@ BattleScript_AlreadyBurned::
 	setalreadystatusedmoveattempt BS_ATTACKER
 	pause 0x20
 	printstring STRINGID_PKMNALREADYHASBURN
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_EffectMemento::
@@ -2238,20 +2238,20 @@ BattleScript_EffectMemento::
 	statbuffchange STAT_BUFF_ALLOW_PTR, BattleScript_EffectMementoTrySpAtk
 	jumpifbyte CMP_GREATER_THAN, cMULTISTRING_CHOOSER, 0x1, BattleScript_EffectMementoTrySpAtk
 	printfromtable gStatDownStringIds
-	waitmessage 0x40
+	waitmessage 1
 BattleScript_EffectMementoTrySpAtk:
 	playstatchangeanimation BS_TARGET, BIT_SPATK, STAT_CHANGE_NEGATIVE | STAT_CHANGE_BY_TWO
 	setstatchanger STAT_SPATK, 2, TRUE
 	statbuffchange STAT_BUFF_ALLOW_PTR, BattleScript_EffectMementoTryFaint
 	jumpifbyte CMP_GREATER_THAN, cMULTISTRING_CHOOSER, 0x1, BattleScript_EffectMementoTryFaint
 	printfromtable gStatDownStringIds
-	waitmessage 0x40
+	waitmessage 1
 BattleScript_EffectMementoTryFaint:
 	tryfaintmon BS_ATTACKER, FALSE, NULL
 	goto BattleScript_MoveEnd
 BattleScript_EffectMementoPrintNoEffect:
 	printstring STRINGID_BUTNOEFFECT
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_EffectMementoTryFaint
 BattleScript_82DA153:
 	attackstring
@@ -2262,7 +2262,7 @@ BattleScript_82DA15A:
 	pause 0x40
 	effectivenesssound
 	resultmessage
-	waitmessage 0x40
+	waitmessage 1
 	tryfaintmon BS_ATTACKER, FALSE, NULL
 	goto BattleScript_MoveEnd
 
@@ -2279,7 +2279,7 @@ BattleScript_EffectFocusPunch::
 	jumpifnodamage BattleScript_HitFromAccCheck
 	ppreduce
 	printstring STRINGID_PKMNLOSTFOCUS
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_EffectSmellingsalt::
@@ -2299,7 +2299,7 @@ BattleScript_EffectFollowMe::
 	attackanimation
 	waitanimation
 	printstring STRINGID_PKMNCENTERATTENTION
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_EffectNaturePower::
@@ -2308,7 +2308,7 @@ BattleScript_EffectNaturePower::
 	pause 0x20
 	callterrainattack
 	printstring STRINGID_NATUREPOWERTURNEDINTO
-	waitmessage 0x40
+	waitmessage 1
 	return
 
 BattleScript_EffectCharge::
@@ -2319,7 +2319,7 @@ BattleScript_EffectCharge::
 	attackanimation
 	waitanimation
 	printstring STRINGID_PKMNCHARGINGPOWER
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_EffectTaunt::
@@ -2331,7 +2331,7 @@ BattleScript_EffectTaunt::
 	attackanimation
 	waitanimation
 	printstring STRINGID_PKMNFELLFORTAUNT
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_EffectHelpingHand::
@@ -2342,7 +2342,7 @@ BattleScript_EffectHelpingHand::
 	attackanimation
 	waitanimation
 	printstring STRINGID_PKMNREADYTOHELP
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_EffectTrick::
@@ -2355,9 +2355,9 @@ BattleScript_EffectTrick::
 	attackanimation
 	waitanimation
 	printstring STRINGID_PKMNSWITCHEDITEMS
-	waitmessage 0x40
+	waitmessage 1
 	printfromtable gItemSwapStringIds
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_EffectRolePlay::
@@ -2369,7 +2369,7 @@ BattleScript_EffectRolePlay::
 	attackanimation
 	waitanimation
 	printstring STRINGID_PKMNCOPIEDFOE
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_EffectWish::
@@ -2399,7 +2399,7 @@ BattleScript_EffectIngrain::
 	attackanimation
 	waitanimation
 	printstring STRINGID_PKMNPLANTEDROOTS
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_EffectSuperpower::
@@ -2414,7 +2414,7 @@ BattleScript_EffectMagicCoat::
 	attackanimation
 	waitanimation
 	printstring STRINGID_PKMNSHROUDEDITSELF
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_EffectRecycle::
@@ -2425,7 +2425,7 @@ BattleScript_EffectRecycle::
 	attackanimation
 	waitanimation
 	printstring STRINGID_XFOUNDONEY
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_EffectRevenge::
@@ -2449,7 +2449,7 @@ BattleScript_BrickBreakAnim::
 	waitanimation
 	jumpifbyte CMP_LESS_THAN, sB_ANIM_TURN, 0x2, BattleScript_BrickBreakDoHit
 	printstring STRINGID_THEWALLSHATTERED
-	waitmessage 0x40
+	waitmessage 1
 BattleScript_BrickBreakDoHit::
 	typecalc2
 	effectivenesssound
@@ -2458,9 +2458,9 @@ BattleScript_BrickBreakDoHit::
 	healthbarupdate BS_TARGET
 	datahpupdate BS_TARGET
 	critmessage
-	waitmessage 0x40
+	waitmessage 1
 	resultmessage
-	waitmessage 0x40
+	waitmessage 1
 	seteffectwithchance
 	tryfaintmon BS_TARGET, FALSE, NULL
 	goto BattleScript_MoveEnd
@@ -2479,14 +2479,14 @@ BattleScript_EffectYawn::
 	attackanimation
 	waitanimation
 	printstring STRINGID_PKMNWASMADEDROWSY
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 BattleScript_PrintBankAbilityMadeIneffective::
 	copybyte sBATTLER, sBATTLER_WITH_ABILITY
 BattleScript_PrintAbilityMadeIneffective::
 	pause 0x20
 	printstring STRINGID_PKMNSXMADEITINEFFECTIVE
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_EffectKnockOff::
@@ -2520,7 +2520,7 @@ BattleScript_EffectSkillSwap::
 	attackanimation
 	waitanimation
 	printstring STRINGID_PKMNSWAPPEDABILITIES
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_EffectImprison::
@@ -2531,7 +2531,7 @@ BattleScript_EffectImprison::
 	attackanimation
 	waitanimation
 	printstring STRINGID_PKMNSEALEDOPPONENTMOVE
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_EffectRefresh::
@@ -2542,7 +2542,7 @@ BattleScript_EffectRefresh::
 	attackanimation
 	waitanimation
 	printstring STRINGID_PKMNSTATUSNORMAL
-	waitmessage 0x40
+	waitmessage 1
 	updatestatusicon BS_ATTACKER
 	goto BattleScript_MoveEnd
 
@@ -2554,7 +2554,7 @@ BattleScript_EffectGrudge::
 	attackanimation
 	waitanimation
 	printstring STRINGID_PKMNWANTSGRUDGE
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_EffectSnatch::
@@ -2566,7 +2566,7 @@ BattleScript_EffectSnatch::
 	waitanimation
 	pause 0x20
 	printstring STRINGID_PKMNWAITSFORTARGET
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_EffectLowKick::
@@ -2604,7 +2604,7 @@ BattleScript_TeeterDanceLoop::
 	waitanimation
 	seteffectprimary
 	resultmessage
-	waitmessage 0x40
+	waitmessage 1
 BattleScript_TeeterDanceDoMoveEndIncrement::
 	moveendto MOVEEND_NEXT_TARGET
 BattleScript_TeeterDanceLoopIncrement::
@@ -2615,31 +2615,31 @@ BattleScript_TeeterDanceLoopIncrement::
 BattleScript_TeeterDanceOwnTempoPrevents::
 	pause 0x20
 	printstring STRINGID_PKMNPREVENTSCONFUSIONWITH
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_TeeterDanceDoMoveEndIncrement
 
 BattleScript_TeeterDanceSafeguardProtected::
 	pause 0x20
 	printstring STRINGID_PKMNUSEDSAFEGUARD
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_TeeterDanceDoMoveEndIncrement
 
 BattleScript_TeeterDanceSubstitutePrevents::
 	pause 0x20
 	printstring STRINGID_BUTITFAILED
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_TeeterDanceDoMoveEndIncrement
 
 BattleScript_TeeterDanceAlreadyConfused::
 	setalreadystatusedmoveattempt BS_ATTACKER
 	pause 0x20
 	printstring STRINGID_PKMNALREADYCONFUSED
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_TeeterDanceDoMoveEndIncrement
 
 BattleScript_TeeterDanceMissed::
 	resultmessage
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_TeeterDanceDoMoveEndIncrement
 
 BattleScript_EffectMudSport::
@@ -2651,7 +2651,7 @@ BattleScript_EffectWaterSport::
 	attackanimation
 	waitanimation
 	printfromtable gSportsUsedStringIds
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_EffectPoisonFang::
@@ -2683,14 +2683,14 @@ BattleScript_TickleDoMoveAnim::
 	statbuffchange STAT_BUFF_ALLOW_PTR, BattleScript_TickleTryLowerDef
 	jumpifbyte CMP_EQUAL, cMULTISTRING_CHOOSER, 0x2, BattleScript_TickleTryLowerDef
 	printfromtable gStatDownStringIds
-	waitmessage 0x40
+	waitmessage 1
 BattleScript_TickleTryLowerDef::
 	playstatchangeanimation BS_TARGET, BIT_DEF, STAT_CHANGE_NEGATIVE
 	setstatchanger STAT_DEF, 1, TRUE
 	statbuffchange STAT_BUFF_ALLOW_PTR, BattleScript_TickleEnd
 	jumpifbyte CMP_EQUAL, cMULTISTRING_CHOOSER, 0x2, BattleScript_TickleEnd
 	printfromtable gStatDownStringIds
-	waitmessage 0x40
+	waitmessage 1
 BattleScript_TickleEnd::
 	goto BattleScript_MoveEnd
 
@@ -2698,7 +2698,7 @@ BattleScript_CantLowerMultipleStats::
 	pause 0x20
 	orbyte gMoveResultFlags, MOVE_RESULT_FAILED
 	printstring STRINGID_STATSWONTDECREASE2
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_EffectCosmicPower::
@@ -2716,13 +2716,13 @@ BattleScript_CosmicPowerDoMoveAnim::
 	statbuffchange MOVE_EFFECT_AFFECTS_USER | STAT_BUFF_ALLOW_PTR, BattleScript_CosmicPowerTrySpDef
 	jumpifbyte CMP_EQUAL, cMULTISTRING_CHOOSER, 0x2, BattleScript_CosmicPowerTrySpDef
 	printfromtable gStatUpStringIds
-	waitmessage 0x40
+	waitmessage 1
 BattleScript_CosmicPowerTrySpDef::
 	setstatchanger STAT_SPDEF, 1, FALSE
 	statbuffchange MOVE_EFFECT_AFFECTS_USER | STAT_BUFF_ALLOW_PTR, BattleScript_CosmicPowerEnd
 	jumpifbyte CMP_EQUAL, cMULTISTRING_CHOOSER, 0x2, BattleScript_CosmicPowerEnd
 	printfromtable gStatUpStringIds
-	waitmessage 0x40
+	waitmessage 1
 BattleScript_CosmicPowerEnd::
 	goto BattleScript_MoveEnd
 
@@ -2745,13 +2745,13 @@ BattleScript_BulkUpDoMoveAnim::
 	statbuffchange MOVE_EFFECT_AFFECTS_USER | STAT_BUFF_ALLOW_PTR, BattleScript_BulkUpTryDef
 	jumpifbyte CMP_EQUAL, cMULTISTRING_CHOOSER, 0x2, BattleScript_BulkUpTryDef
 	printfromtable gStatUpStringIds
-	waitmessage 0x40
+	waitmessage 1
 BattleScript_BulkUpTryDef::
 	setstatchanger STAT_DEF, 1, FALSE
 	statbuffchange MOVE_EFFECT_AFFECTS_USER | STAT_BUFF_ALLOW_PTR, BattleScript_BulkUpEnd
 	jumpifbyte CMP_EQUAL, cMULTISTRING_CHOOSER, 0x2, BattleScript_BulkUpEnd
 	printfromtable gStatUpStringIds
-	waitmessage 0x40
+	waitmessage 1
 BattleScript_BulkUpEnd::
 	goto BattleScript_MoveEnd
 
@@ -2770,13 +2770,13 @@ BattleScript_CalmMindDoMoveAnim::
 	statbuffchange MOVE_EFFECT_AFFECTS_USER | STAT_BUFF_ALLOW_PTR, BattleScript_CalmMindTrySpDef
 	jumpifbyte CMP_EQUAL, cMULTISTRING_CHOOSER, 0x2, BattleScript_CalmMindTrySpDef
 	printfromtable gStatUpStringIds
-	waitmessage 0x40
+	waitmessage 1
 BattleScript_CalmMindTrySpDef::
 	setstatchanger STAT_SPDEF, 1, FALSE
 	statbuffchange MOVE_EFFECT_AFFECTS_USER | STAT_BUFF_ALLOW_PTR, BattleScript_CalmMindEnd
 	jumpifbyte CMP_EQUAL, cMULTISTRING_CHOOSER, 0x2, BattleScript_CalmMindEnd
 	printfromtable gStatUpStringIds
-	waitmessage 0x40
+	waitmessage 1
 BattleScript_CalmMindEnd::
 	goto BattleScript_MoveEnd
 
@@ -2784,7 +2784,7 @@ BattleScript_CantRaiseMultipleStats::
 	pause 0x20
 	orbyte gMoveResultFlags, MOVE_RESULT_FAILED
 	printstring STRINGID_STATSWONTINCREASE2
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_EffectDragonDance::
@@ -2802,13 +2802,13 @@ BattleScript_DragonDanceDoMoveAnim::
 	statbuffchange MOVE_EFFECT_AFFECTS_USER | STAT_BUFF_ALLOW_PTR, BattleScript_DragonDanceTrySpeed
 	jumpifbyte CMP_EQUAL, cMULTISTRING_CHOOSER, 0x2, BattleScript_DragonDanceTrySpeed
 	printfromtable gStatUpStringIds
-	waitmessage 0x40
+	waitmessage 1
 BattleScript_DragonDanceTrySpeed::
 	setstatchanger STAT_SPEED, 1, FALSE
 	statbuffchange MOVE_EFFECT_AFFECTS_USER | STAT_BUFF_ALLOW_PTR, BattleScript_DragonDanceEnd
 	jumpifbyte CMP_EQUAL, cMULTISTRING_CHOOSER, 0x2, BattleScript_DragonDanceEnd
 	printfromtable gStatUpStringIds
-	waitmessage 0x40
+	waitmessage 1
 BattleScript_DragonDanceEnd::
 	goto BattleScript_MoveEnd
 
@@ -2820,7 +2820,7 @@ BattleScript_EffectCamouflage::
 	attackanimation
 	waitanimation
 	printstring STRINGID_PKMNCHANGEDTYPE
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_FaintAttacker::
@@ -2948,7 +2948,7 @@ BattleScript_LocalBattleWonLoseTexts::
 BattleScript_LocalBattleWonReward::
 	getmoneyreward
 	printstring STRINGID_PLAYERGOTMONEY
-	waitmessage 0x40
+	waitmessage 1
 BattleScript_PayDayMoneyAndPickUpItems::
 	givepaydaymoney
 	pickup
@@ -2962,9 +2962,9 @@ BattleScript_LocalBattleLost::
 	jumpifhalfword CMP_EQUAL, gTrainerBattleOpponent_A, 0x400, BattleScript_LocalBattleLostEnd
 BattleScript_LocalBattleLostPrintWhiteOut::
 	printstring STRINGID_PLAYERWHITEOUT
-	waitmessage 0x40
+	waitmessage 1
 	printstring STRINGID_PLAYERWHITEOUT2
-	waitmessage 0x40
+	waitmessage 1
 BattleScript_LocalBattleLostEnd::
 	end2
 BattleScript_CheckDomeDrew::
@@ -3005,23 +3005,23 @@ BattleScript_82DAA0B::
 	jumpifbattletype BATTLE_TYPE_RECORDED, BattleScript_82DAA31
 	atk57
 BattleScript_82DAA31::
-	waitmessage 0x40
+	waitmessage 1
 	end2
 
 BattleScript_LinkBattleWonOrLost::
 	jumpifbattletype BATTLE_TYPE_BATTLE_TOWER, BattleScript_82DAA5C
 	printstring STRINGID_BATTLEEND
-	waitmessage 0x40
+	waitmessage 1
 	jumpifbattletype BATTLE_TYPE_RECORDED, BattleScript_LinkBattleWonOrLostWaitEnd
 	atk57
 BattleScript_LinkBattleWonOrLostWaitEnd::
-	waitmessage 0x40
+	waitmessage 1
 	end2
 
 BattleScript_82DAA5C::
 	playtrainerdefeatbgm BS_ATTACKER
 	printstring STRINGID_BATTLEEND
-	waitmessage 0x40
+	waitmessage 1
 	trainerslidein BS_ATTACKER
 	waitstate
 	printstring STRINGID_TRAINER1LOSETEXT
@@ -3033,7 +3033,7 @@ BattleScript_82DAA5C::
 	jumpifbattletype BATTLE_TYPE_RECORDED, BattleScript_82DAA83
 	atk57
 BattleScript_82DAA83::
-	waitmessage 0x40
+	waitmessage 1
 	end2
 
 BattleScript_FrontierTrainerBattleWon::
@@ -3062,22 +3062,22 @@ BattleScript_FrontierTrainerBattleWon_End:
 BattleScript_SmokeBallEscape::
 	playanimation BS_ATTACKER, B_ANIM_SMOKEBALL_ESCAPE, NULL
 	printstring STRINGID_PKMNFLEDUSINGITS
-	waitmessage 0x40
+	waitmessage 1
 	end2
 
 BattleScript_RanAwayUsingMonAbility::
 	printstring STRINGID_PKMNFLEDUSING
-	waitmessage 0x40
+	waitmessage 1
 	end2
 
 BattleScript_GotAwaySafely::
 	printstring STRINGID_GOTAWAYSAFELY
-	waitmessage 0x40
+	waitmessage 1
 	end2
 
 BattleScript_WildMonFled::
 	printstring STRINGID_WILDPKMNFLED
-	waitmessage 0x40
+	waitmessage 1
 	end2
 
 BattleScript_PrintCantRunFromTrainer::
@@ -3086,7 +3086,7 @@ BattleScript_PrintCantRunFromTrainer::
 
 BattleScript_PrintFailedToRunString::
 	printfromtable gNoEscapeStringIds
-	waitmessage 0x40
+	waitmessage 1
 	end2
 
 BattleScript_PrintCantEscapeFromBattle::
@@ -3148,9 +3148,9 @@ BattleScript_PursuitDmgOnSwitchOut::
 	healthbarupdate BS_TARGET
 	datahpupdate BS_TARGET
 	critmessage
-	waitmessage 0x40
+	waitmessage 1
 	resultmessage
-	waitmessage 0x40
+	waitmessage 1
 	tryfaintmon BS_TARGET, FALSE, NULL
 	moveendfromto MOVEEND_ON_DAMAGE_ABILITIES, MOVEEND_CHOICE_MOVE
 	getbattlerfainted BS_TARGET
@@ -3195,7 +3195,7 @@ BattleScript_LearnedNewMove::
 	buffermovetolearn
 	fanfare MUS_LEVEL_UP
 	printstring STRINGID_PKMNLEARNEDMOVE
-	waitmessage 0x40
+	waitmessage 1
 	updatechoicemoveonlvlup BS_ATTACKER
 	goto BattleScript_TryLearnMoveLoop
 BattleScript_LearnMoveReturn::
@@ -3203,7 +3203,7 @@ BattleScript_LearnMoveReturn::
 
 BattleScript_RainContinuesOrEnds::
 	printfromtable gRainContinuesStringIds
-	waitmessage 0x40
+	waitmessage 1
 	jumpifbyte CMP_EQUAL, cMULTISTRING_CHOOSER, 0x2, BattleScript_RainContinuesOrEndsEnd
 	playanimation BS_ATTACKER, B_ANIM_RAIN_CONTINUES, NULL
 BattleScript_RainContinuesOrEndsEnd::
@@ -3211,7 +3211,7 @@ BattleScript_RainContinuesOrEndsEnd::
 
 BattleScript_DamagingWeatherContinues::
 	printfromtable gSandStormHailContinuesStringIds
-	waitmessage 0x40
+	waitmessage 1
 	playanimation2 BS_ATTACKER, sB_ANIM_ARG1, NULL
 	setbyte gBattleCommunication, 0x0
 BattleScript_DamagingWeatherLoop::
@@ -3219,7 +3219,7 @@ BattleScript_DamagingWeatherLoop::
 	weatherdamage
 	jumpifword CMP_EQUAL, gBattleMoveDamage, 0x0, BattleScript_DamagingWeatherLoopIncrement
 	printfromtable gSandStormHailDmgStringIds
-	waitmessage 0x40
+	waitmessage 1
 	orword gHitMarker, HITMARKER_x20 | HITMARKER_IGNORE_SUBSTITUTE | HITMARKER_x100000 | HITMARKER_GRUDGE
 	effectivenesssound
 	hitanimation BS_ATTACKER
@@ -3237,41 +3237,41 @@ BattleScript_DamagingWeatherContinuesEnd::
 
 BattleScript_SandStormHailEnds::
 	printfromtable gSandStormHailEndStringIds
-	waitmessage 0x40
+	waitmessage 1
 	end2
 
 BattleScript_SunlightContinues::
 	printstring STRINGID_SUNLIGHTSTRONG
-	waitmessage 0x40
+	waitmessage 1
 	playanimation BS_ATTACKER, B_ANIM_SUN_CONTINUES, NULL
 	end2
 
 BattleScript_SunlightFaded::
 	printstring STRINGID_SUNLIGHTFADED
-	waitmessage 0x40
+	waitmessage 1
 	end2
 
 BattleScript_OverworldWeatherStarts::
 	printfromtable gWeatherStartsStringIds
-	waitmessage 0x40
+	waitmessage 1
 	playanimation2 BS_ATTACKER, sB_ANIM_ARG1, NULL
 	end3
 
 BattleScript_SideStatusWoreOff::
 	printstring STRINGID_PKMNSXWOREOFF
-	waitmessage 0x40
+	waitmessage 1
 	end2
 
 BattleScript_SafeguardProtected::
 	pause 0x20
 	printstring STRINGID_PKMNUSEDSAFEGUARD
-	waitmessage 0x40
+	waitmessage 1
 	end2
 
 BattleScript_SafeguardEnds::
 	pause 0x20
 	printstring STRINGID_PKMNSAFEGUARDEXPIRED
-	waitmessage 0x40
+	waitmessage 1
 	end2
 
 BattleScript_LeechSeedTurnDrain::
@@ -3291,14 +3291,14 @@ BattleScript_LeechSeedTurnPrintAndUpdateHp::
 	healthbarupdate BS_TARGET
 	datahpupdate BS_TARGET
 	printfromtable gLeechSeedStringIds
-	waitmessage 0x40
+	waitmessage 1
 	tryfaintmon BS_ATTACKER, FALSE, NULL
 	tryfaintmon BS_TARGET, FALSE, NULL
 	end2
 
 BattleScript_BideStoringEnergy::
 	printstring STRINGID_PKMNSTORINGENERGY
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_BideAttack::
@@ -3306,7 +3306,7 @@ BattleScript_BideAttack::
 	setmoveeffect MOVE_EFFECT_CHARGING
 	clearstatusfromeffect BS_ATTACKER
 	printstring STRINGID_PKMNUNLEASHEDENERGY
-	waitmessage 0x40
+	waitmessage 1
 	accuracycheck BattleScript_MoveMissed, ACC_CURR_MOVE
 	typecalc
 	bicbyte gMoveResultFlags, MOVE_RESULT_SUPER_EFFECTIVE | MOVE_RESULT_NOT_VERY_EFFECTIVE
@@ -3321,7 +3321,7 @@ BattleScript_BideAttack::
 	healthbarupdate BS_TARGET
 	datahpupdate BS_TARGET
 	resultmessage
-	waitmessage 0x40
+	waitmessage 1
 	tryfaintmon BS_TARGET, FALSE, NULL
 	goto BattleScript_MoveEnd
 
@@ -3330,7 +3330,7 @@ BattleScript_BideNoEnergyToAttack::
 	setmoveeffect MOVE_EFFECT_CHARGING
 	clearstatusfromeffect BS_ATTACKER
 	printstring STRINGID_PKMNUNLEASHEDENERGY
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_ButItFailed
 
 BattleScript_SuccessForceOut::
@@ -3355,17 +3355,17 @@ BattleScript_TrainerBattleForceOut::
 BattleScript_MistProtected::
 	pause 0x20
 	printstring STRINGID_PKMNPROTECTEDBYMIST
-	waitmessage 0x40
+	waitmessage 1
 	return
 
 BattleScript_RageIsBuilding::
 	printstring STRINGID_PKMNRAGEBUILDING
-	waitmessage 0x40
+	waitmessage 1
 	return
 
 BattleScript_MoveUsedIsDisabled::
 	printstring STRINGID_PKMNMOVEISDISABLED
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_SelectingDisabledMove::
@@ -3374,7 +3374,7 @@ BattleScript_SelectingDisabledMove::
 
 BattleScript_DisabledNoMore::
 	printstring STRINGID_PKMNMOVEDISABLEDNOMORE
-	waitmessage 0x40
+	waitmessage 1
 	end2
 
 BattleScript_SelectingDisabledMoveInPalace::
@@ -3385,12 +3385,12 @@ BattleScript_SelectingUnusableMoveInPalace::
 
 BattleScript_EncoredNoMore::
 	printstring STRINGID_PKMNENCOREENDED
-	waitmessage 0x40
+	waitmessage 1
 	end2
 
 BattleScript_DestinyBondTakesLife::
 	printstring STRINGID_PKMNTOOKFOE
-	waitmessage 0x40
+	waitmessage 1
 	orword gHitMarker, HITMARKER_IGNORE_SUBSTITUTE | HITMARKER_x100000
 	healthbarupdate BS_ATTACKER
 	datahpupdate BS_ATTACKER
@@ -3444,12 +3444,12 @@ BattleScript_SpikesOnFaintedBattlerFainted::
 
 BattleScript_PrintHurtBySpikes::
 	printstring STRINGID_PKMNHURTBYSPIKES
-	waitmessage 0x40
+	waitmessage 1
 	return
 
 BattleScript_PerishSongTakesLife::
 	printstring STRINGID_PKMNPERISHCOUNTFELL
-	waitmessage 0x40
+	waitmessage 1
 	orword gHitMarker, HITMARKER_IGNORE_SUBSTITUTE | HITMARKER_x100000
 	healthbarupdate BS_ATTACKER
 	datahpupdate BS_ATTACKER
@@ -3458,7 +3458,7 @@ BattleScript_PerishSongTakesLife::
 
 BattleScript_PerishSongCountGoesDown::
 	printstring STRINGID_PKMNPERISHCOUNTFELL
-	waitmessage 0x40
+	waitmessage 1
 	end2
 
 BattleScript_AllStatsUp::
@@ -3473,27 +3473,27 @@ BattleScript_AllStatsUpAtk::
 	setstatchanger STAT_ATK, 1, FALSE
 	statbuffchange MOVE_EFFECT_AFFECTS_USER | STAT_BUFF_ALLOW_PTR, BattleScript_AllStatsUpDef
 	printfromtable gStatUpStringIds
-	waitmessage 0x40
+	waitmessage 1
 BattleScript_AllStatsUpDef::
 	setstatchanger STAT_DEF, 1, FALSE
 	statbuffchange MOVE_EFFECT_AFFECTS_USER | STAT_BUFF_ALLOW_PTR, BattleScript_AllStatsUpSpeed
 	printfromtable gStatUpStringIds
-	waitmessage 0x40
+	waitmessage 1
 BattleScript_AllStatsUpSpeed::
 	setstatchanger STAT_SPEED, 1, FALSE
 	statbuffchange MOVE_EFFECT_AFFECTS_USER | STAT_BUFF_ALLOW_PTR, BattleScript_AllStatsUpSpAtk
 	printfromtable gStatUpStringIds
-	waitmessage 0x40
+	waitmessage 1
 BattleScript_AllStatsUpSpAtk::
 	setstatchanger STAT_SPATK, 1, FALSE
 	statbuffchange MOVE_EFFECT_AFFECTS_USER | STAT_BUFF_ALLOW_PTR, BattleScript_AllStatsUpSpDef
 	printfromtable gStatUpStringIds
-	waitmessage 0x40
+	waitmessage 1
 BattleScript_AllStatsUpSpDef::
 	setstatchanger STAT_SPDEF, 1, FALSE
 	statbuffchange MOVE_EFFECT_AFFECTS_USER | STAT_BUFF_ALLOW_PTR, BattleScript_AllStatsUpRet
 	printfromtable gStatUpStringIds
-	waitmessage 0x40
+	waitmessage 1
 BattleScript_AllStatsUpRet::
 	return
 
@@ -3503,23 +3503,23 @@ BattleScript_RapidSpinAway::
 
 BattleScript_WrapFree::
 	printstring STRINGID_PKMNGOTFREE
-	waitmessage 0x40
+	waitmessage 1
 	copybyte gBattlerTarget, sBATTLER
 	return
 
 BattleScript_LeechSeedFree::
 	printstring STRINGID_PKMNSHEDLEECHSEED
-	waitmessage 0x40
+	waitmessage 1
 	return
 
 BattleScript_SpikesFree::
 	printstring STRINGID_PKMNBLEWAWAYSPIKES
-	waitmessage 0x40
+	waitmessage 1
 	return
 
 BattleScript_MonTookFutureAttack::
 	printstring STRINGID_PKMNTOOKATTACK
-	waitmessage 0x40
+	waitmessage 1
 	jumpifbyte CMP_NOT_EQUAL, cMULTISTRING_CHOOSER, 0x0, BattleScript_CheckDoomDesireMiss
 	accuracycheck BattleScript_FutureAttackMiss, MOVE_FUTURE_SIGHT
 	goto BattleScript_FutureAttackAnimate
@@ -3539,7 +3539,7 @@ BattleScript_DoFutureAttackHit::
 	healthbarupdate BS_TARGET
 	datahpupdate BS_TARGET
 	resultmessage
-	waitmessage 0x40
+	waitmessage 1
 	tryfaintmon BS_TARGET, FALSE, NULL
 	atk24 BattleScript_FutureAttackEnd
 BattleScript_FutureAttackEnd::
@@ -3553,7 +3553,7 @@ BattleScript_FutureAttackMiss::
 	setbyte gMoveResultFlags, 0
 	orbyte gMoveResultFlags, MOVE_RESULT_FAILED
 	resultmessage
-	waitmessage 0x40
+	waitmessage 1
 	setbyte gMoveResultFlags, 0
 	end2
 
@@ -3569,7 +3569,7 @@ BattleScript_NoPPForMove::
 	attackstring
 	pause 0x20
 	printstring STRINGID_BUTNOPPLEFT
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_SelectingTormentedMove::
@@ -3578,7 +3578,7 @@ BattleScript_SelectingTormentedMove::
 
 BattleScript_MoveUsedIsTormented::
 	printstring STRINGID_PKMNCANTUSEMOVETORMENT
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_SelectingTormentedMoveInPalace::
@@ -3591,7 +3591,7 @@ BattleScript_SelectingNotAllowedMoveTaunt::
 
 BattleScript_MoveUsedIsTaunted::
 	printstring STRINGID_PKMNCANTUSEMOVETAUNT
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_SelectingNotAllowedMoveTauntInPalace::
@@ -3602,26 +3602,26 @@ BattleScript_WishComesTrue::
 	trywish 0x1, BattleScript_WishButFullHp
 	playanimation BS_TARGET, B_ANIM_WISH_HEAL, NULL
 	printstring STRINGID_PKMNWISHCAMETRUE
-	waitmessage 0x40
+	waitmessage 1
 	orword gHitMarker, HITMARKER_IGNORE_SUBSTITUTE
 	healthbarupdate BS_TARGET
 	datahpupdate BS_TARGET
 	printstring STRINGID_PKMNREGAINEDHEALTH
-	waitmessage 0x40
+	waitmessage 1
 	end2
 
 BattleScript_WishButFullHp::
 	printstring STRINGID_PKMNWISHCAMETRUE
-	waitmessage 0x40
+	waitmessage 1
 	pause 0x20
 	printstring STRINGID_PKMNHPFULL
-	waitmessage 0x40
+	waitmessage 1
 	end2
 
 BattleScript_IngrainTurnHeal::
 	playanimation BS_ATTACKER, B_ANIM_INGRAIN_HEAL, NULL
 	printstring STRINGID_PKMNABSORBEDNUTRIENTS
-	waitmessage 0x40
+	waitmessage 1
 	orword gHitMarker, HITMARKER_IGNORE_SUBSTITUTE
 	healthbarupdate BS_ATTACKER
 	datahpupdate BS_ATTACKER
@@ -3630,7 +3630,7 @@ BattleScript_IngrainTurnHeal::
 BattleScript_PrintMonIsRooted::
 	pause 0x20
 	printstring STRINGID_PKMNANCHOREDITSELF
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_AtkDefDown::
@@ -3641,26 +3641,26 @@ BattleScript_AtkDefDown::
 	statbuffchange MOVE_EFFECT_AFFECTS_USER | MOVE_EFFECT_CERTAIN | STAT_BUFF_ALLOW_PTR, BattleScript_AtkDefDown_TryDef
 	jumpifbyte CMP_EQUAL, cMULTISTRING_CHOOSER, 0x2, BattleScript_AtkDefDown_TryDef
 	printfromtable gStatDownStringIds
-	waitmessage 0x40
+	waitmessage 1
 BattleScript_AtkDefDown_TryDef::
 	playstatchangeanimation BS_ATTACKER, BIT_DEF, STAT_CHANGE_CANT_PREVENT | STAT_CHANGE_NEGATIVE
 	setstatchanger STAT_DEF, 1, TRUE
 	statbuffchange MOVE_EFFECT_AFFECTS_USER | MOVE_EFFECT_CERTAIN | STAT_BUFF_ALLOW_PTR, BattleScript_AtkDefDown_End
 	jumpifbyte CMP_EQUAL, cMULTISTRING_CHOOSER, 0x2, BattleScript_AtkDefDown_End
 	printfromtable gStatDownStringIds
-	waitmessage 0x40
+	waitmessage 1
 BattleScript_AtkDefDown_End::
 	return
 
 BattleScript_KnockedOff::
 	playanimation BS_TARGET, B_ANIM_ITEM_KNOCKOFF, NULL
 	printstring STRINGID_PKMNKNOCKEDOFF
-	waitmessage 0x40
+	waitmessage 1
 	return
 
 BattleScript_MoveUsedIsImprisoned::
 	printstring STRINGID_PKMNCANTUSEMOVESEALED
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_SelectingImprisonedMove::
@@ -3673,7 +3673,7 @@ BattleScript_SelectingImprisonedMoveInPalace::
 
 BattleScript_GrudgeTakesPp::
 	printstring STRINGID_PKMNLOSTPPGRUDGE
-	waitmessage 0x40
+	waitmessage 1
 	return
 
 BattleScript_MagicCoatBounce::
@@ -3681,7 +3681,7 @@ BattleScript_MagicCoatBounce::
 	ppreduce
 	pause 0x20
 	printstring STRINGID_PKMNMOVEBOUNCED
-	waitmessage 0x40
+	waitmessage 1
 	orword gHitMarker, HITMARKER_ATTACKSTRING_PRINTED | HITMARKER_NO_PPDEDUCT | HITMARKER_x800000
 	setmagiccoattarget BS_ATTACKER
 	return
@@ -3692,19 +3692,19 @@ BattleScript_SnatchedMove::
 	snatchsetbattlers
 	playanimation BS_TARGET, B_ANIM_SNATCH_MOVE, NULL
 	printstring STRINGID_PKMNSNATCHEDMOVE
-	waitmessage 0x40
+	waitmessage 1
 	orword gHitMarker, HITMARKER_ATTACKSTRING_PRINTED | HITMARKER_NO_PPDEDUCT | HITMARKER_x800000
 	swapattackerwithtarget
 	return
 
 BattleScript_EnduredMsg::
 	printstring STRINGID_PKMNENDUREDHIT
-	waitmessage 0x40
+	waitmessage 1
 	return
 
 BattleScript_OneHitKOMsg::
 	printstring STRINGID_ONEHITKO
-	waitmessage 0x40
+	waitmessage 1
 	return
 
 BattleScript_SAtkDown2::
@@ -3714,40 +3714,40 @@ BattleScript_SAtkDown2::
 	statbuffchange MOVE_EFFECT_AFFECTS_USER | MOVE_EFFECT_CERTAIN | STAT_BUFF_ALLOW_PTR, BattleScript_SAtkDown2End
 	jumpifbyte CMP_EQUAL, cMULTISTRING_CHOOSER, 0x2, BattleScript_SAtkDown2End
 	printfromtable gStatDownStringIds
-	waitmessage 0x40
+	waitmessage 1
 BattleScript_SAtkDown2End::
 	return
 
 BattleScript_FocusPunchSetUp::
 	printstring STRINGID_EMPTYSTRING3
-	waitmessage 0x1
+	waitmessage 1
 	playanimation BS_ATTACKER, B_ANIM_FOCUS_PUNCH_SETUP, NULL
 	printstring STRINGID_PKMNTIGHTENINGFOCUS
-	waitmessage 0x40
+	waitmessage 1
 	end2
 
 BattleScript_MoveUsedIsAsleep::
 	printstring STRINGID_PKMNFASTASLEEP
-	waitmessage 0x40
+	waitmessage 1
 	statusanimation BS_ATTACKER
 	goto BattleScript_MoveEnd
 
 BattleScript_MoveUsedWokeUp::
 	bicword gHitMarker, HITMARKER_x10
 	printfromtable gWokeUpStringIds
-	waitmessage 0x40
+	waitmessage 1
 	updatestatusicon BS_ATTACKER
 	return
 
 BattleScript_MonWokeUpInUproar::
 	printstring STRINGID_PKMNWOKEUPINUPROAR
-	waitmessage 0x40
+	waitmessage 1
 	updatestatusicon BS_ATTACKER
 	end2
 
 BattleScript_PoisonTurnDmg::
 	printstring STRINGID_PKMNHURTBYPOISON
-	waitmessage 0x40
+	waitmessage 1
 BattleScript_DoStatusTurnDmg::
 	statusanimation BS_ATTACKER
 BattleScript_DoTurnDmg::
@@ -3761,60 +3761,60 @@ BattleScript_DoTurnDmgEnd::
 
 BattleScript_BurnTurnDmg::
 	printstring STRINGID_PKMNHURTBYBURN
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_DoStatusTurnDmg
 
 BattleScript_MoveUsedIsFrozen::
 	printstring STRINGID_PKMNISFROZEN
-	waitmessage 0x40
+	waitmessage 1
 	statusanimation BS_ATTACKER
 	goto BattleScript_MoveEnd
 
 BattleScript_MoveUsedUnfroze::
 	printfromtable gGotDefrostedStringIds
-	waitmessage 0x40
+	waitmessage 1
 	updatestatusicon BS_ATTACKER
 	return
 
 BattleScript_DefrostedViaFireMove::
 	printstring STRINGID_PKMNWASDEFROSTED
-	waitmessage 0x40
+	waitmessage 1
 	updatestatusicon BS_TARGET
 	return
 
 BattleScript_MoveUsedIsParalyzed::
 	printstring STRINGID_PKMNISPARALYZED
-	waitmessage 0x40
+	waitmessage 1
 	statusanimation BS_ATTACKER
 	cancelmultiturnmoves BS_ATTACKER
 	goto BattleScript_MoveEnd
 
 BattleScript_MoveUsedFlinched::
 	printstring STRINGID_PKMNFLINCHED
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_PrintUproarOverTurns::
 	printfromtable gUproarOverTurnStringIds
-	waitmessage 0x40
+	waitmessage 1
 	end2
 
 BattleScript_ThrashConfuses::
 	chosenstatus2animation BS_ATTACKER, STATUS2_CONFUSION
 	printstring STRINGID_PKMNFATIGUECONFUSION
-	waitmessage 0x40
+	waitmessage 1
 	end2
 
 BattleScript_MoveUsedIsConfused::
 	printstring STRINGID_PKMNISCONFUSED
-	waitmessage 0x40
+	waitmessage 1
 	status2animation BS_ATTACKER, STATUS2_CONFUSION
 	jumpifbyte CMP_EQUAL, cMULTISTRING_CHOOSER, 0x0, BattleScript_MoveUsedIsConfusedRet
 BattleScript_DoSelfConfusionDmg::
 	cancelmultiturnmoves BS_ATTACKER
 	adjustnormaldamage2
 	printstring STRINGID_ITHURTCONFUSION
-	waitmessage 0x40
+	waitmessage 1
 	effectivenesssound
 	hitanimation BS_ATTACKER
 	waitstate
@@ -3822,7 +3822,7 @@ BattleScript_DoSelfConfusionDmg::
 	healthbarupdate BS_ATTACKER
 	datahpupdate BS_ATTACKER
 	resultmessage
-	waitmessage 0x40
+	waitmessage 1
 	tryfaintmon BS_ATTACKER, FALSE, NULL
 	goto BattleScript_MoveEnd
 BattleScript_MoveUsedIsConfusedRet::
@@ -3830,58 +3830,58 @@ BattleScript_MoveUsedIsConfusedRet::
 
 BattleScript_MoveUsedIsConfusedNoMore::
 	printstring STRINGID_PKMNHEALEDCONFUSION
-	waitmessage 0x40
+	waitmessage 1
 	return
 
 BattleScript_PrintPayDayMoneyString::
 	printstring STRINGID_PLAYERPICKEDUPMONEY
-	waitmessage 0x40
+	waitmessage 1
 	return
 
 BattleScript_WrapTurnDmg::
 	playanimation BS_ATTACKER, B_ANIM_TURN_TRAP, sB_ANIM_ARG1
 	printstring STRINGID_PKMNHURTBY
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_DoTurnDmg
 
 BattleScript_WrapEnds::
 	printstring STRINGID_PKMNFREEDFROM
-	waitmessage 0x40
+	waitmessage 1
 	end2
 
 BattleScript_MoveUsedIsInLove::
 	printstring STRINGID_PKMNINLOVE
-	waitmessage 0x40
+	waitmessage 1
 	status2animation BS_ATTACKER, STATUS2_INFATUATION
 	return
 
 BattleScript_MoveUsedIsInLoveCantAttack::
 	printstring STRINGID_PKMNIMMOBILIZEDBYLOVE
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_NightmareTurnDmg::
 	printstring STRINGID_PKMNLOCKEDINNIGHTMARE
-	waitmessage 0x40
+	waitmessage 1
 	status2animation BS_ATTACKER, STATUS2_NIGHTMARE
 	goto BattleScript_DoTurnDmg
 
 BattleScript_CurseTurnDmg::
 	printstring STRINGID_PKMNAFFLICTEDBYCURSE
-	waitmessage 0x40
+	waitmessage 1
 	status2animation BS_ATTACKER, STATUS2_CURSED
 	goto BattleScript_DoTurnDmg
 
 BattleScript_TargetPRLZHeal::
 	printstring STRINGID_PKMNHEALEDPARALYSIS
-	waitmessage 0x40
+	waitmessage 1
 	updatestatusicon BS_TARGET
 	return
 
 BattleScript_MoveEffectSleep::
 	statusanimation BS_EFFECT_BATTLER
 	printfromtable gFellAsleepStringIds
-	waitmessage 0x40
+	waitmessage 1
 BattleScript_UpdateEffectStatusIconRet::
 	updatestatusicon BS_EFFECT_BATTLER
 	waitstate
@@ -3890,7 +3890,7 @@ BattleScript_UpdateEffectStatusIconRet::
 BattleScript_YawnMakesAsleep::
 	statusanimation BS_EFFECT_BATTLER
 	printstring STRINGID_PKMNFELLASLEEP
-	waitmessage 0x40
+	waitmessage 1
 	updatestatusicon BS_EFFECT_BATTLER
 	waitstate
 	makevisible BS_EFFECT_BATTLER
@@ -3899,52 +3899,52 @@ BattleScript_YawnMakesAsleep::
 BattleScript_MoveEffectPoison::
 	statusanimation BS_EFFECT_BATTLER
 	printfromtable gGotPoisonedStringIds
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_UpdateEffectStatusIconRet
 
 BattleScript_MoveEffectBurn::
 	statusanimation BS_EFFECT_BATTLER
 	printfromtable gGotBurnedStringIds
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_UpdateEffectStatusIconRet
 
 BattleScript_MoveEffectFreeze::
 	statusanimation BS_EFFECT_BATTLER
 	printfromtable gGotFrozenStringIds
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_UpdateEffectStatusIconRet
 
 BattleScript_MoveEffectParalysis::
 	statusanimation BS_EFFECT_BATTLER
 	printfromtable gGotParalyzedStringIds
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_UpdateEffectStatusIconRet
 
 BattleScript_MoveEffectUproar::
 	printstring STRINGID_PKMNCAUSEDUPROAR
-	waitmessage 0x40
+	waitmessage 1
 	return
 
 BattleScript_MoveEffectToxic::
 	statusanimation BS_EFFECT_BATTLER
 	printstring STRINGID_PKMNBADLYPOISONED
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_UpdateEffectStatusIconRet
 
 BattleScript_MoveEffectPayDay::
 	printstring STRINGID_COINSSCATTERED
-	waitmessage 0x40
+	waitmessage 1
 	return
 
 BattleScript_MoveEffectWrap::
 	printfromtable gWrappedStringIds
-	waitmessage 0x40
+	waitmessage 1
 	return
 
 BattleScript_MoveEffectConfusion::
 	chosenstatus2animation BS_EFFECT_BATTLER, STATUS2_CONFUSION
 	printstring STRINGID_PKMNWASCONFUSED
-	waitmessage 0x40
+	waitmessage 1
 	return
 
 BattleScript_MoveEffectRecoil::
@@ -3955,7 +3955,7 @@ BattleScript_DoRecoil::
 	healthbarupdate BS_ATTACKER
 	datahpupdate BS_ATTACKER
 	printstring STRINGID_PKMNHITWITHRECOIL
-	waitmessage 0x40
+	waitmessage 1
 	tryfaintmon BS_ATTACKER, FALSE, NULL
 BattleScript_RecoilEnd::
 	return
@@ -3963,7 +3963,7 @@ BattleScript_RecoilEnd::
 BattleScript_ItemSteal::
 	playanimation BS_TARGET, B_ANIM_ITEM_STEAL, NULL
 	printstring STRINGID_PKMNSTOLEITEM
-	waitmessage 0x40
+	waitmessage 1
 	return
 
 BattleScript_DrizzleActivates::
@@ -3977,18 +3977,18 @@ BattleScript_DrizzleActivates::
 BattleScript_SpeedBoostActivates::
 	playanimation BS_ATTACKER, B_ANIM_STATS_CHANGE, sB_ANIM_ARG1
 	printstring STRINGID_PKMNRAISEDSPEED
-	waitmessage 0x40
+	waitmessage 1
 	end3
 
 BattleScript_TraceActivates::
 	pause 0x20
 	printstring STRINGID_PKMNTRACED
-	waitmessage 0x40
+	waitmessage 1
 	end3
 
 BattleScript_RainDishActivates::
 	printstring STRINGID_PKMNSXRESTOREDHPALITTLE2
-	waitmessage 0x40
+	waitmessage 1
 	orword gHitMarker, HITMARKER_IGNORE_SUBSTITUTE
 	healthbarupdate BS_ATTACKER
 	datahpupdate BS_ATTACKER
@@ -4004,7 +4004,7 @@ BattleScript_SandstreamActivates::
 
 BattleScript_ShedSkinActivates::
 	printstring STRINGID_PKMNSXCUREDYPROBLEM
-	waitmessage 0x40
+	waitmessage 1
 	updatestatusicon BS_ATTACKER
 	end3
 
@@ -4024,7 +4024,7 @@ BattleScript_DoCastformChange::
 	docastformchangeanimation
 	waitstate
 	printstring STRINGID_PKMNTRANSFORMED
-	waitmessage 0x40
+	waitmessage 1
 	return
 
 BattleScript_IntimidateActivatesEnd3::
@@ -4047,7 +4047,7 @@ BattleScript_IntimidateActivatesLoop:
 	setgraphicalstatchangevalues
 	playanimation BS_TARGET, B_ANIM_STATS_CHANGE, sB_ANIM_ARG1
 	printstring STRINGID_PKMNCUTSATTACKWITH
-	waitmessage 0x40
+	waitmessage 1
 BattleScript_IntimidateActivatesLoopIncrement:
 	addbyte gBattlerTarget, 0x1
 	goto BattleScript_IntimidateActivatesLoop
@@ -4056,7 +4056,7 @@ BattleScript_IntimidateActivatesReturn:
 BattleScript_IntimidatePrevented:
 	pause 0x20
 	printstring STRINGID_PREVENTEDFROMWORKING
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_IntimidateActivatesLoopIncrement
 	
 BattleScript_DroughtActivates::
@@ -4071,7 +4071,7 @@ BattleScript_TookAttack::
 	attackstring
 	pause 0x20
 	printstring STRINGID_PKMNSXTOOKATTACK
-	waitmessage 0x40
+	waitmessage 1
 	orword gHitMarker, HITMARKER_ATTACKSTRING_PRINTED
 	return
 
@@ -4096,7 +4096,7 @@ BattleScript_MoveHPDrain::
 	healthbarupdate BS_TARGET
 	datahpupdate BS_TARGET
 	printstring STRINGID_PKMNRESTOREDHPUSING
-	waitmessage 0x40
+	waitmessage 1
 	orbyte gMoveResultFlags, MOVE_RESULT_DOESNT_AFFECT_FOE
 	goto BattleScript_MoveEnd
 
@@ -4106,7 +4106,7 @@ BattleScript_MonMadeMoveUseless::
 	attackstring
 	pause 0x20
 	printstring STRINGID_PKMNSXMADEYUSELESS
-	waitmessage 0x40
+	waitmessage 1
 	orbyte gMoveResultFlags, MOVE_RESULT_DOESNT_AFFECT_FOE
 	goto BattleScript_MoveEnd
 
@@ -4116,55 +4116,55 @@ BattleScript_FlashFireBoost::
 	attackstring
 	pause 0x20
 	printfromtable gFlashFireStringIds
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_AbilityPreventsPhasingOut::
 	pause 0x20
 	printstring STRINGID_PKMNANCHORSITSELFWITH
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_AbilityNoStatLoss::
 	pause 0x20
 	printstring STRINGID_PKMNPREVENTSSTATLOSSWITH
-	waitmessage 0x40
+	waitmessage 1
 	return
 
 BattleScript_BRNPrevention::
 	pause 0x20
 	printfromtable gBRNPreventionStringIds
-	waitmessage 0x40
+	waitmessage 1
 	return
 
 BattleScript_PRLZPrevention::
 	pause 0x20
 	printfromtable gPRLZPreventionStringIds
-	waitmessage 0x40
+	waitmessage 1
 	return
 
 BattleScript_PSNPrevention::
 	pause 0x20
 	printfromtable gPSNPreventionStringIds
-	waitmessage 0x40
+	waitmessage 1
 	return
 
 BattleScript_ObliviousPreventsAttraction::
 	pause 0x20
 	printstring STRINGID_PKMNPREVENTSROMANCEWITH
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_FlinchPrevention::
 	pause 0x20
 	printstring STRINGID_PKMNSXPREVENTSFLINCHING
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_OwnTempoPrevents::
 	pause 0x20
 	printstring STRINGID_PKMNPREVENTSCONFUSIONWITH
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_SoundproofProtected::
@@ -4172,25 +4172,25 @@ BattleScript_SoundproofProtected::
 	ppreduce
 	pause 0x20
 	printstring STRINGID_PKMNSXBLOCKSY
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_AbilityNoSpecificStatLoss::
 	pause 0x20
 	printstring STRINGID_PKMNSXPREVENTSYLOSS
-	waitmessage 0x40
+	waitmessage 1
 	setbyte cMULTISTRING_CHOOSER, 0x3
 	return
 
 BattleScript_StickyHoldActivates::
 	pause 0x20
 	printstring STRINGID_PKMNSXMADEYINEFFECTIVE
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_MoveEnd
 
 BattleScript_ColorChangeActivates::
 	printstring STRINGID_PKMNCHANGEDTYPEWITH
-	waitmessage 0x40
+	waitmessage 1
 	return
 
 BattleScript_RoughSkinActivates::
@@ -4198,14 +4198,14 @@ BattleScript_RoughSkinActivates::
 	healthbarupdate BS_ATTACKER
 	datahpupdate BS_ATTACKER
 	printstring STRINGID_PKMNHURTSWITH
-	waitmessage 0x40
+	waitmessage 1
 	tryfaintmon BS_ATTACKER, FALSE, NULL
 	return
 
 BattleScript_CuteCharmActivates::
 	status2animation BS_ATTACKER, STATUS2_INFATUATION
 	printstring STRINGID_PKMNSXINFATUATEDY
-	waitmessage 0x40
+	waitmessage 1
 	return
 
 BattleScript_ApplySecondaryEffect::
@@ -4221,24 +4221,24 @@ BattleScript_SynchronizeActivates::
 BattleScript_NoItemSteal::
 	pause 0x20
 	printstring STRINGID_PKMNSXMADEYINEFFECTIVE
-	waitmessage 0x40
+	waitmessage 1
 	return
 
 BattleScript_AbilityCuredStatus::
 	printstring STRINGID_PKMNSXCUREDITSYPROBLEM
-	waitmessage 0x40
+	waitmessage 1
 	updatestatusicon BS_SCRIPTING
 	return
 
 BattleScript_IgnoresWhileAsleep::
 	printstring STRINGID_PKMNIGNORESASLEEP
-	waitmessage 0x40
+	waitmessage 1
 	moveendto MOVEEND_NEXT_TARGET
 	end
 
 BattleScript_IgnoresAndUsesRandomMove::
 	printstring STRINGID_PKMNIGNOREDORDERS
-	waitmessage 0x40
+	waitmessage 1
 	jumptocalledmove FALSE
 
 BattleScript_MoveUsedLoafingAround::
@@ -4248,13 +4248,13 @@ BattleScript_MoveUsedLoafingAround::
 	setbyte cMULTISTRING_CHOOSER, 0x4
 BattleScript_82DB6C7::
 	printfromtable gInobedientStringIds
-	waitmessage 0x40
+	waitmessage 1
 	moveendto MOVEEND_NEXT_TARGET
 	end
 
 BattleScript_IgnoresAndFallsAsleep::
 	printstring STRINGID_PKMNBEGANTONAP
-	waitmessage 0x40
+	waitmessage 1
 	setmoveeffect MOVE_EFFECT_SLEEP | MOVE_EFFECT_AFFECTS_USER
 	seteffectprimary
 	moveendto MOVEEND_NEXT_TARGET
@@ -4262,7 +4262,7 @@ BattleScript_IgnoresAndFallsAsleep::
 
 BattleScript_IgnoresAndHitsItself::
 	printstring STRINGID_PKMNWONTOBEY
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_DoSelfConfusionDmg
 
 BattleScript_SubstituteFade::
@@ -4277,7 +4277,7 @@ BattleScript_BerryCurePrlzEnd2::
 BattleScript_BerryCureParRet::
 	playanimation BS_SCRIPTING, B_ANIM_HELD_ITEM_EFFECT, NULL
 	printstring STRINGID_PKMNSITEMCUREDPARALYSIS
-	waitmessage 0x40
+	waitmessage 1
 	updatestatusicon BS_SCRIPTING
 	removeitem BS_SCRIPTING
 	return
@@ -4289,7 +4289,7 @@ BattleScript_BerryCurePsnEnd2::
 BattleScript_BerryCurePsnRet::
 	playanimation BS_SCRIPTING, B_ANIM_HELD_ITEM_EFFECT, NULL
 	printstring STRINGID_PKMNSITEMCUREDPOISON
-	waitmessage 0x40
+	waitmessage 1
 	updatestatusicon BS_SCRIPTING
 	removeitem BS_SCRIPTING
 	return
@@ -4301,7 +4301,7 @@ BattleScript_BerryCureBrnEnd2::
 BattleScript_BerryCureBrnRet::
 	playanimation BS_SCRIPTING, B_ANIM_HELD_ITEM_EFFECT, NULL
 	printstring STRINGID_PKMNSITEMHEALEDBURN
-	waitmessage 0x40
+	waitmessage 1
 	updatestatusicon BS_SCRIPTING
 	removeitem BS_SCRIPTING
 	return
@@ -4313,7 +4313,7 @@ BattleScript_BerryCureFrzEnd2::
 BattleScript_BerryCureFrzRet::
 	playanimation BS_SCRIPTING, B_ANIM_HELD_ITEM_EFFECT, NULL
 	printstring STRINGID_PKMNSITEMDEFROSTEDIT
-	waitmessage 0x40
+	waitmessage 1
 	updatestatusicon BS_SCRIPTING
 	removeitem BS_SCRIPTING
 	return
@@ -4325,7 +4325,7 @@ BattleScript_BerryCureSlpEnd2::
 BattleScript_BerryCureSlpRet::
 	playanimation BS_SCRIPTING, B_ANIM_HELD_ITEM_EFFECT, NULL
 	printstring STRINGID_PKMNSITEMWOKEIT
-	waitmessage 0x40
+	waitmessage 1
 	updatestatusicon BS_SCRIPTING
 	removeitem BS_SCRIPTING
 	return
@@ -4337,7 +4337,7 @@ BattleScript_BerryCureConfusionEnd2::
 BattleScript_BerryCureConfusionRet::
 	playanimation BS_SCRIPTING, B_ANIM_HELD_ITEM_EFFECT, NULL
 	printstring STRINGID_PKMNSITEMSNAPPEDOUT
-	waitmessage 0x40
+	waitmessage 1
 	removeitem BS_SCRIPTING
 	return
 
@@ -4348,7 +4348,7 @@ BattleScript_BerryCureChosenStatusEnd2::
 BattleScript_BerryCureChosenStatusRet::
 	playanimation BS_SCRIPTING, B_ANIM_HELD_ITEM_EFFECT, NULL
 	printfromtable gBerryEffectStringIds
-	waitmessage 0x40
+	waitmessage 1
 	updatestatusicon BS_SCRIPTING
 	removeitem BS_SCRIPTING
 	return
@@ -4360,14 +4360,14 @@ BattleScript_WhiteHerbEnd2::
 BattleScript_WhiteHerbRet::
 	playanimation BS_SCRIPTING, B_ANIM_HELD_ITEM_EFFECT, NULL
 	printstring STRINGID_PKMNSITEMRESTOREDSTATUS
-	waitmessage 0x40
+	waitmessage 1
 	removeitem BS_SCRIPTING
 	return
 
 BattleScript_ItemHealHP_RemoveItem::
 	playanimation BS_ATTACKER, B_ANIM_HELD_ITEM_EFFECT, NULL
 	printstring STRINGID_PKMNSITEMRESTOREDHEALTH
-	waitmessage 0x40
+	waitmessage 1
 	orword gHitMarker, HITMARKER_IGNORE_SUBSTITUTE
 	healthbarupdate BS_ATTACKER
 	datahpupdate BS_ATTACKER
@@ -4377,7 +4377,7 @@ BattleScript_ItemHealHP_RemoveItem::
 BattleScript_BerryPPHealEnd2::
 	playanimation BS_ATTACKER, B_ANIM_HELD_ITEM_EFFECT, NULL
 	printstring STRINGID_PKMNSITEMRESTOREDPP
-	waitmessage 0x40
+	waitmessage 1
 	removeitem BS_ATTACKER
 	end2
 
@@ -4388,7 +4388,7 @@ BattleScript_ItemHealHP_End2::
 BattleScript_ItemHealHP_Ret::
 	playanimation BS_ATTACKER, B_ANIM_HELD_ITEM_EFFECT, NULL
 	printstring STRINGID_PKMNSITEMRESTOREDHPALITTLE
-	waitmessage 0x40
+	waitmessage 1
 	orword gHitMarker, HITMARKER_IGNORE_SUBSTITUTE
 	healthbarupdate BS_ATTACKER
 	datahpupdate BS_ATTACKER
@@ -4401,18 +4401,18 @@ BattleScript_SelectingNotAllowedMoveChoiceItem::
 BattleScript_FocusBandActivates::
 	playanimation BS_TARGET, B_ANIM_FOCUS_BAND, NULL
 	printstring STRINGID_PKMNHUNGONWITHX
-	waitmessage 0x40
+	waitmessage 1
 	return
 
 BattleScript_BerryConfuseHealEnd2::
 	playanimation BS_ATTACKER, B_ANIM_HELD_ITEM_EFFECT, NULL
 	printstring STRINGID_PKMNSITEMRESTOREDHEALTH
-	waitmessage 0x40
+	waitmessage 1
 	orword gHitMarker, HITMARKER_IGNORE_SUBSTITUTE
 	healthbarupdate BS_ATTACKER
 	datahpupdate BS_ATTACKER
 	printstring STRINGID_FORXCOMMAYZ
-	waitmessage 0x40
+	waitmessage 1
 	setmoveeffect MOVE_EFFECT_CONFUSION | MOVE_EFFECT_AFFECTS_USER
 	seteffectprimary
 	removeitem BS_ATTACKER
@@ -4430,7 +4430,7 @@ BattleScript_82DB85B::
 BattleScript_BerryFocusEnergyEnd2::
 	playanimation BS_ATTACKER, B_ANIM_HELD_ITEM_EFFECT, NULL
 	printstring STRINGID_PKMNUSEDXTOGETPUMPED
-	waitmessage 0x40
+	waitmessage 1
 	removeitem BS_ATTACKER
 	end2
 
@@ -4448,7 +4448,7 @@ BattleScript_PalaceTryBattlerFlavorText::
 	palaceflavortext BS_ATTACKER @ BS_ATTACKER here overwritten by gBattleCommunication + 1
 	jumpifbyte CMP_NOT_EQUAL, gBattleCommunication, TRUE, BattleScript_PalaceEndFlavorText
 	printfromtable gBattlePalaceFlavorTextTable
-	waitmessage 0x40
+	waitmessage 1
 BattleScript_PalaceEndFlavorText::
 	addbyte gBattleCommunication + 1, 1
 	jumpifbytenotequal gBattleCommunication + 1, gBattlersCount, BattleScript_PalaceTryBattlerFlavorText
@@ -4513,7 +4513,7 @@ BattleScript_ArenaDoJudgment::
 	arenajudgmentwindow
 	various15 BS_ATTACKER
 	printstring STRINGID_DEFEATEDOPPONENTBYREFEREE
-	waitmessage 0x40
+	waitmessage 1
 	playfaintcry BS_OPPONENT1
 	waitcry BS_ATTACKER
 	dofaintanimation BS_OPPONENT1
@@ -4527,7 +4527,7 @@ BattleScript_ArenaJudgmentPlayerLoses:
 	arenajudgmentwindow
 	various15 BS_ATTACKER
 	printstring STRINGID_LOSTTOOPPONENTBYREFEREE
-	waitmessage 0x40
+	waitmessage 1
 	playfaintcry BS_PLAYER1
 	waitcry BS_ATTACKER
 	dofaintanimation BS_PLAYER1
@@ -4541,7 +4541,7 @@ BattleScript_ArenaJudgmentDraw:
 	arenajudgmentwindow
 	various15 BS_ATTACKER
 	printstring STRINGID_TIEDOPPONENTBYREFEREE
-	waitmessage 0x40
+	waitmessage 1
 	playfaintcry BS_PLAYER1
 	waitcry BS_ATTACKER
 	dofaintanimation BS_PLAYER1
@@ -4560,12 +4560,12 @@ BattleScript_AskIfWantsToForfeitMatch::
 
 BattleScript_PrintPlayerForfeited::
 	printstring STRINGID_FORFEITEDMATCH
-	waitmessage 0x40
+	waitmessage 1
 	end2
 
 BattleScript_PrintPlayerForfeitedLinkBattle::
 	printstring STRINGID_FORFEITEDMATCH
-	waitmessage 0x40
+	waitmessage 1
 	atk57
-	waitmessage 0x40
+	waitmessage 1
 	end2
diff --git a/data/battle_scripts_2.s b/data/battle_scripts_2.s
index caa6cddac..dc4224094 100644
--- a/data/battle_scripts_2.s
+++ b/data/battle_scripts_2.s
@@ -78,7 +78,7 @@ BattleScript_TryNicknameCaughtMon::
 	trygivecaughtmonnick BattleScript_GiveCaughtMonEnd
 	givecaughtmon
 	printfromtable gCaughtMonStringIds
-	waitmessage 0x40
+	waitmessage 1
 	goto BattleScript_SuccessBallThrowEnd
 BattleScript_GiveCaughtMonEnd::
 	givecaughtmon
@@ -93,21 +93,21 @@ BattleScript_WallyBallThrow::
 
 BattleScript_ShakeBallThrow::
 	printfromtable gBallEscapeStringIds
-	waitmessage 0x40
+	waitmessage 1
 	jumpifword CMP_NO_COMMON_BITS, gBattleTypeFlags, BATTLE_TYPE_SAFARI, BattleScript_ShakeBallThrowEnd
 	jumpifbyte CMP_NOT_EQUAL, gNumSafariBalls, 0x0, BattleScript_ShakeBallThrowEnd
 	printstring STRINGID_OUTOFSAFARIBALLS
-	waitmessage 0x40
+	waitmessage 1
 	setbyte gBattleOutcome, B_OUTCOME_NO_SAFARI_BALLS
 BattleScript_ShakeBallThrowEnd::
 	finishaction
 
 BattleScript_TrainerBallBlock::
-	waitmessage 0x40
+	waitmessage 1
 	printstring STRINGID_TRAINERBLOCKEDBALL
-	waitmessage 0x40
+	waitmessage 1
 	printstring STRINGID_DONTBEATHIEF
-	waitmessage 0x40
+	waitmessage 1
 	finishaction
 
 BattleScript_PlayerUsesItem::
@@ -120,13 +120,13 @@ BattleScript_OpponentUsesHealItem::
 	pause 0x30
 	playse SE_USE_ITEM
 	printstring STRINGID_TRAINER1USEDITEM
-	waitmessage 0x40
+	waitmessage 1
 	useitemonopponent
 	orword gHitMarker, HITMARKER_IGNORE_SUBSTITUTE
 	healthbarupdate BS_ATTACKER
 	datahpupdate BS_ATTACKER
 	printstring STRINGID_PKMNSITEMRESTOREDHEALTH
-	waitmessage 0x40
+	waitmessage 1
 	updatestatusicon BS_ATTACKER
 	setbyte sMOVEEND_STATE, 0xF
 	moveend 0x1, 0x0
@@ -137,10 +137,10 @@ BattleScript_OpponentUsesStatusCureItem::
 	pause 0x30
 	playse SE_USE_ITEM
 	printstring STRINGID_TRAINER1USEDITEM
-	waitmessage 0x40
+	waitmessage 1
 	useitemonopponent
 	printfromtable gTrainerItemCuredStatusStringIds
-	waitmessage 0x40
+	waitmessage 1
 	updatestatusicon BS_ATTACKER
 	setbyte sMOVEEND_STATE, 0xF
 	moveend 0x1, 0x0
@@ -151,10 +151,10 @@ BattleScript_OpponentUsesXItem::
 	pause 0x30
 	playse SE_USE_ITEM
 	printstring STRINGID_TRAINER1USEDITEM
-	waitmessage 0x40
+	waitmessage 1
 	useitemonopponent
 	printfromtable gStatUpStringIds
-	waitmessage 0x40
+	waitmessage 1
 	setbyte sMOVEEND_STATE, 0xF
 	moveend 0x1, 0x0
 	finishaction
@@ -164,10 +164,10 @@ BattleScript_OpponentUsesGuardSpecs::
 	pause 0x30
 	playse SE_USE_ITEM
 	printstring STRINGID_TRAINER1USEDITEM
-	waitmessage 0x40
+	waitmessage 1
 	useitemonopponent
 	printfromtable gMistUsedStringIds
-	waitmessage 0x40
+	waitmessage 1
 	setbyte sMOVEEND_STATE, 0xF
 	moveend 0x1, 0x0
 	finishaction
@@ -179,29 +179,29 @@ BattleScript_RunByUsingItem::
 
 BattleScript_ActionWatchesCarefully:
 	printstring STRINGID_PKMNWATCHINGCAREFULLY
-	waitmessage 0x40
+	waitmessage 1
 	end2
 
 BattleScript_ActionGetNear:
 	printfromtable gSafariGetNearStringIds
-	waitmessage 0x40
+	waitmessage 1
 	end2
 
 BattleScript_ActionThrowPokeblock:
 	printstring STRINGID_THREWPOKEBLOCKATPKMN
-	waitmessage 0x40
+	waitmessage 1
 	playanimation BS_ATTACKER, B_ANIM_POKEBLOCK_THROW, NULL
 	printfromtable gSafariPokeblockResultStringIds
-	waitmessage 0x40
+	waitmessage 1
 	end2
 
 BattleScript_ActionWallyThrow:
 	printstring STRINGID_RETURNMON
-	waitmessage 0x40
+	waitmessage 1
 	returnatktoball
 	waitstate
 	trainerslidein BS_TARGET
 	waitstate
 	printstring STRINGID_YOUTHROWABALLNOWRIGHT
-	waitmessage 0x40
+	waitmessage 1
 	end2
diff --git a/data/event_scripts.s b/data/event_scripts.s
index 8039be687..3de159217 100644
--- a/data/event_scripts.s
+++ b/data/event_scripts.s
@@ -764,6 +764,8 @@ Movement_FerryDepart: @ 82721F0
 	step_end
 
 EventScript_HideMrBriney:: @ 82721F8
+	setflag FLAG_HIDE_SAFARI_ZONE_SOUTH_CONSTRUCTION_WORKERS
+	clearflag FLAG_HIDE_SAFARI_ZONE_SOUTH_EAST_EXPANSION
 	setflag FLAG_HIDE_MR_BRINEY_DEWFORD_TOWN
 	setflag FLAG_HIDE_MR_BRINEY_BOAT_DEWFORD_TOWN
 	setflag FLAG_HIDE_ROUTE_109_MR_BRINEY
@@ -1060,3 +1062,19 @@ Common_EventScript_LegendaryFlewAway:: @ 8273776
 	.include "data/text/frontier_brain.inc"
 	.include "data/text/save.inc"
 	.include "data/text/birch_speech.inc"
+
+	.include "data/maps/AlteringCave_Cave1/scripts.inc"
+
+	.include "data/maps/AlteringCave_Cave2/scripts.inc"
+
+	.include "data/maps/AlteringCave_Cave3/scripts.inc"
+
+	.include "data/maps/AlteringCave_Cave4/scripts.inc"
+
+	.include "data/maps/AlteringCave_Cave5/scripts.inc"
+
+	.include "data/maps/AlteringCave_Cave6/scripts.inc"
+
+	.include "data/maps/AlteringCave_Cave7/scripts.inc"
+
+	.include "data/maps/AlteringCave_Cave8/scripts.inc"
diff --git a/data/layouts/AlteringCave/map.bin b/data/layouts/AlteringCave/map.bin
index 38bec91fa..f495e744a 100644
Binary files a/data/layouts/AlteringCave/map.bin and b/data/layouts/AlteringCave/map.bin differ
diff --git a/data/layouts/AlteringCave_Cave1/border.bin b/data/layouts/AlteringCave_Cave1/border.bin
new file mode 100644
index 000000000..423a0732e
Binary files /dev/null and b/data/layouts/AlteringCave_Cave1/border.bin differ
diff --git a/data/layouts/AlteringCave_Cave1/map.bin b/data/layouts/AlteringCave_Cave1/map.bin
new file mode 100644
index 000000000..e424b8d11
Binary files /dev/null and b/data/layouts/AlteringCave_Cave1/map.bin differ
diff --git a/data/layouts/AlteringCave_Cave2/border.bin b/data/layouts/AlteringCave_Cave2/border.bin
new file mode 100644
index 000000000..423a0732e
Binary files /dev/null and b/data/layouts/AlteringCave_Cave2/border.bin differ
diff --git a/data/layouts/AlteringCave_Cave2/map.bin b/data/layouts/AlteringCave_Cave2/map.bin
new file mode 100644
index 000000000..e424b8d11
Binary files /dev/null and b/data/layouts/AlteringCave_Cave2/map.bin differ
diff --git a/data/layouts/AlteringCave_Cave3/border.bin b/data/layouts/AlteringCave_Cave3/border.bin
new file mode 100644
index 000000000..423a0732e
Binary files /dev/null and b/data/layouts/AlteringCave_Cave3/border.bin differ
diff --git a/data/layouts/AlteringCave_Cave3/map.bin b/data/layouts/AlteringCave_Cave3/map.bin
new file mode 100644
index 000000000..e424b8d11
Binary files /dev/null and b/data/layouts/AlteringCave_Cave3/map.bin differ
diff --git a/data/layouts/AlteringCave_Cave4/border.bin b/data/layouts/AlteringCave_Cave4/border.bin
new file mode 100644
index 000000000..423a0732e
Binary files /dev/null and b/data/layouts/AlteringCave_Cave4/border.bin differ
diff --git a/data/layouts/AlteringCave_Cave4/map.bin b/data/layouts/AlteringCave_Cave4/map.bin
new file mode 100644
index 000000000..e424b8d11
Binary files /dev/null and b/data/layouts/AlteringCave_Cave4/map.bin differ
diff --git a/data/layouts/AlteringCave_Cave5/border.bin b/data/layouts/AlteringCave_Cave5/border.bin
new file mode 100644
index 000000000..423a0732e
Binary files /dev/null and b/data/layouts/AlteringCave_Cave5/border.bin differ
diff --git a/data/layouts/AlteringCave_Cave5/map.bin b/data/layouts/AlteringCave_Cave5/map.bin
new file mode 100644
index 000000000..e424b8d11
Binary files /dev/null and b/data/layouts/AlteringCave_Cave5/map.bin differ
diff --git a/data/layouts/AlteringCave_Cave6/border.bin b/data/layouts/AlteringCave_Cave6/border.bin
new file mode 100644
index 000000000..423a0732e
Binary files /dev/null and b/data/layouts/AlteringCave_Cave6/border.bin differ
diff --git a/data/layouts/AlteringCave_Cave6/map.bin b/data/layouts/AlteringCave_Cave6/map.bin
new file mode 100644
index 000000000..e424b8d11
Binary files /dev/null and b/data/layouts/AlteringCave_Cave6/map.bin differ
diff --git a/data/layouts/AlteringCave_Cave7/border.bin b/data/layouts/AlteringCave_Cave7/border.bin
new file mode 100644
index 000000000..423a0732e
Binary files /dev/null and b/data/layouts/AlteringCave_Cave7/border.bin differ
diff --git a/data/layouts/AlteringCave_Cave7/map.bin b/data/layouts/AlteringCave_Cave7/map.bin
new file mode 100644
index 000000000..e424b8d11
Binary files /dev/null and b/data/layouts/AlteringCave_Cave7/map.bin differ
diff --git a/data/layouts/AlteringCave_Cave8/border.bin b/data/layouts/AlteringCave_Cave8/border.bin
new file mode 100644
index 000000000..423a0732e
Binary files /dev/null and b/data/layouts/AlteringCave_Cave8/border.bin differ
diff --git a/data/layouts/AlteringCave_Cave8/map.bin b/data/layouts/AlteringCave_Cave8/map.bin
new file mode 100644
index 000000000..e424b8d11
Binary files /dev/null and b/data/layouts/AlteringCave_Cave8/map.bin differ
diff --git a/data/layouts/CaveOfOrigin_UnusedRubySapphireMap1/map.bin b/data/layouts/CaveOfOrigin_UnusedRubySapphireMap1/map.bin
index 0ffbdaaa0..1b76963e1 100644
Binary files a/data/layouts/CaveOfOrigin_UnusedRubySapphireMap1/map.bin and b/data/layouts/CaveOfOrigin_UnusedRubySapphireMap1/map.bin differ
diff --git a/data/layouts/CaveOfOrigin_UnusedRubySapphireMap3/map.bin b/data/layouts/CaveOfOrigin_UnusedRubySapphireMap3/map.bin
index ea574b224..82e52693f 100644
Binary files a/data/layouts/CaveOfOrigin_UnusedRubySapphireMap3/map.bin and b/data/layouts/CaveOfOrigin_UnusedRubySapphireMap3/map.bin differ
diff --git a/data/layouts/SootopolisCity/map.bin b/data/layouts/SootopolisCity/map.bin
index ff03ebc3b..ba42266c3 100644
Binary files a/data/layouts/SootopolisCity/map.bin and b/data/layouts/SootopolisCity/map.bin differ
diff --git a/data/layouts/layouts.json b/data/layouts/layouts.json
index 9292e10af..19f8c2a44 100644
--- a/data/layouts/layouts.json
+++ b/data/layouts/layouts.json
@@ -4194,8 +4194,8 @@
     {
       "id": "LAYOUT_ALTERING_CAVE",
       "name": "AlteringCave_Layout",
-      "width": 32,
-      "height": 24,
+      "width": 34,
+      "height": 26,
       "primary_tileset": "gTileset_General",
       "secondary_tileset": "gTileset_Cave",
       "border_filepath": "data/layouts/AlteringCave/border.bin",
@@ -4410,6 +4410,86 @@
       "secondary_tileset": "gTileset_MysteryEventsHouse",
       "border_filepath": "data/layouts/SootopolisCity_MysteryEventsHouse_1F_StairsUnblocked/border.bin",
       "blockdata_filepath": "data/layouts/SootopolisCity_MysteryEventsHouse_1F_StairsUnblocked/map.bin"
+    },
+    {
+      "id": "LAYOUT_ALTERING_CAVE_CAVE1",
+      "name": "AlteringCave_Cave1_Layout",
+      "width": 20,
+      "height": 20,
+      "primary_tileset": "gTileset_General",
+      "secondary_tileset": "gTileset_Cave",
+      "border_filepath": "data/layouts/AlteringCave_Cave1/border.bin",
+      "blockdata_filepath": "data/layouts/AlteringCave_Cave1/map.bin"
+    },
+    {
+      "id": "LAYOUT_ALTERING_CAVE_CAVE2",
+      "name": "AlteringCave_Cave2_Layout",
+      "width": 20,
+      "height": 20,
+      "primary_tileset": "gTileset_General",
+      "secondary_tileset": "gTileset_Cave",
+      "border_filepath": "data/layouts/AlteringCave_Cave2/border.bin",
+      "blockdata_filepath": "data/layouts/AlteringCave_Cave2/map.bin"
+    },
+    {
+      "id": "LAYOUT_ALTERING_CAVE_CAVE3",
+      "name": "AlteringCave_Cave3_Layout",
+      "width": 20,
+      "height": 20,
+      "primary_tileset": "gTileset_General",
+      "secondary_tileset": "gTileset_Cave",
+      "border_filepath": "data/layouts/AlteringCave_Cave3/border.bin",
+      "blockdata_filepath": "data/layouts/AlteringCave_Cave3/map.bin"
+    },
+    {
+      "id": "LAYOUT_ALTERING_CAVE_CAVE4",
+      "name": "AlteringCave_Cave4_Layout",
+      "width": 20,
+      "height": 20,
+      "primary_tileset": "gTileset_General",
+      "secondary_tileset": "gTileset_Cave",
+      "border_filepath": "data/layouts/AlteringCave_Cave4/border.bin",
+      "blockdata_filepath": "data/layouts/AlteringCave_Cave4/map.bin"
+    },
+    {
+      "id": "LAYOUT_ALTERING_CAVE_CAVE5",
+      "name": "AlteringCave_Cave5_Layout",
+      "width": 20,
+      "height": 20,
+      "primary_tileset": "gTileset_General",
+      "secondary_tileset": "gTileset_Cave",
+      "border_filepath": "data/layouts/AlteringCave_Cave5/border.bin",
+      "blockdata_filepath": "data/layouts/AlteringCave_Cave5/map.bin"
+    },
+    {
+      "id": "LAYOUT_ALTERING_CAVE_CAVE6",
+      "name": "AlteringCave_Cave6_Layout",
+      "width": 20,
+      "height": 20,
+      "primary_tileset": "gTileset_General",
+      "secondary_tileset": "gTileset_Cave",
+      "border_filepath": "data/layouts/AlteringCave_Cave6/border.bin",
+      "blockdata_filepath": "data/layouts/AlteringCave_Cave6/map.bin"
+    },
+    {
+      "id": "LAYOUT_ALTERING_CAVE_CAVE7",
+      "name": "AlteringCave_Cave7_Layout",
+      "width": 20,
+      "height": 20,
+      "primary_tileset": "gTileset_General",
+      "secondary_tileset": "gTileset_Cave",
+      "border_filepath": "data/layouts/AlteringCave_Cave7/border.bin",
+      "blockdata_filepath": "data/layouts/AlteringCave_Cave7/map.bin"
+    },
+    {
+      "id": "LAYOUT_ALTERING_CAVE_CAVE8",
+      "name": "AlteringCave_Cave8_Layout",
+      "width": 20,
+      "height": 20,
+      "primary_tileset": "gTileset_General",
+      "secondary_tileset": "gTileset_Cave",
+      "border_filepath": "data/layouts/AlteringCave_Cave8/border.bin",
+      "blockdata_filepath": "data/layouts/AlteringCave_Cave8/map.bin"
     }
   ]
 }
diff --git a/data/maps/AlteringCave/map.json b/data/maps/AlteringCave/map.json
index f6b0acc10..af59f4433 100644
--- a/data/maps/AlteringCave/map.json
+++ b/data/maps/AlteringCave/map.json
@@ -12,17 +12,79 @@
   "allow_running": true,
   "show_map_name": true,
   "battle_scene": "MAP_BATTLE_SCENE_NORMAL",
-  "connections": null,
-  "object_events": [],
+  "connections": 0,
+  "object_events": [
+
+  ],
   "warp_events": [
     {
-      "x": 18,
-      "y": 22,
+      "x": 19,
+      "y": 23,
       "elevation": 0,
       "dest_map": "MAP_ROUTE103",
       "dest_warp_id": 0
+    },
+    {
+      "x": 6,
+      "y": 15,
+      "elevation": 0,
+      "dest_map": "MAP_ALTERING_CAVE_CAVE1",
+      "dest_warp_id": 0
+    },
+    {
+      "x": 5,
+      "y": 10,
+      "elevation": 0,
+      "dest_map": "MAP_ALTERING_CAVE_CAVE2",
+      "dest_warp_id": 0
+    },
+    {
+      "x": 9,
+      "y": 11,
+      "elevation": 0,
+      "dest_map": "MAP_ALTERING_CAVE_CAVE3",
+      "dest_warp_id": 3
+    },
+    {
+      "x": 8,
+      "y": 1,
+      "elevation": 0,
+      "dest_map": "MAP_ALTERING_CAVE_CAVE4",
+      "dest_warp_id": 0
+    },
+    {
+      "x": 14,
+      "y": 5,
+      "elevation": 0,
+      "dest_map": "MAP_ALTERING_CAVE_CAVE5",
+      "dest_warp_id": 0
+    },
+    {
+      "x": 17,
+      "y": 5,
+      "elevation": 0,
+      "dest_map": "MAP_ALTERING_CAVE_CAVE6",
+      "dest_warp_id": 0
+    },
+    {
+      "x": 21,
+      "y": 11,
+      "elevation": 0,
+      "dest_map": "MAP_ALTERING_CAVE_CAVE7",
+      "dest_warp_id": 0
+    },
+    {
+      "x": 27,
+      "y": 12,
+      "elevation": 0,
+      "dest_map": "MAP_ALTERING_CAVE_CAVE8",
+      "dest_warp_id": 0
     }
   ],
-  "coord_events": [],
-  "bg_events": []
+  "coord_events": [
+
+  ],
+  "bg_events": [
+
+  ]
 }
diff --git a/data/maps/AlteringCave_Cave1/map.json b/data/maps/AlteringCave_Cave1/map.json
new file mode 100644
index 000000000..1cbd1d63b
--- /dev/null
+++ b/data/maps/AlteringCave_Cave1/map.json
@@ -0,0 +1,34 @@
+{
+  "id": "MAP_ALTERING_CAVE_CAVE1",
+  "name": "AlteringCave_Cave1",
+  "layout": "LAYOUT_ALTERING_CAVE_CAVE1",
+  "music": "MUS_RG_SEVII_CAVE",
+  "region_map_section": "MAPSEC_ALTERING_CAVE",
+  "requires_flash": false,
+  "weather": "WEATHER_NONE",
+  "map_type": "MAP_TYPE_UNDERGROUND",
+  "allow_cycling": true,
+  "allow_escaping": true,
+  "allow_running": true,
+  "show_map_name": true,
+  "battle_scene": "MAP_BATTLE_SCENE_NORMAL",
+  "connections": 0,
+  "object_events": [
+
+  ],
+  "warp_events": [
+    {
+      "x": 9,
+      "y": 14,
+      "elevation": 0,
+      "dest_map": "MAP_ALTERING_CAVE",
+      "dest_warp_id": 1
+    }
+  ],
+  "coord_events": [
+
+  ],
+  "bg_events": [
+
+  ]
+}
diff --git a/data/maps/AlteringCave_Cave1/scripts.inc b/data/maps/AlteringCave_Cave1/scripts.inc
new file mode 100644
index 000000000..044e4d12f
--- /dev/null
+++ b/data/maps/AlteringCave_Cave1/scripts.inc
@@ -0,0 +1,2 @@
+AlteringCave_Cave1_MapScripts::
+	.byte 0
diff --git a/data/maps/AlteringCave_Cave2/map.json b/data/maps/AlteringCave_Cave2/map.json
new file mode 100644
index 000000000..1e6242335
--- /dev/null
+++ b/data/maps/AlteringCave_Cave2/map.json
@@ -0,0 +1,34 @@
+{
+  "id": "MAP_ALTERING_CAVE_CAVE2",
+  "name": "AlteringCave_Cave2",
+  "layout": "LAYOUT_ALTERING_CAVE_CAVE2",
+  "music": "MUS_RG_SEVII_CAVE",
+  "region_map_section": "MAPSEC_ALTERING_CAVE",
+  "requires_flash": false,
+  "weather": "WEATHER_NONE",
+  "map_type": "MAP_TYPE_UNDERGROUND",
+  "allow_cycling": true,
+  "allow_escaping": true,
+  "allow_running": true,
+  "show_map_name": true,
+  "battle_scene": "MAP_BATTLE_SCENE_NORMAL",
+  "connections": 0,
+  "object_events": [
+
+  ],
+  "warp_events": [
+    {
+      "x": 9,
+      "y": 14,
+      "elevation": 0,
+      "dest_map": "MAP_ALTERING_CAVE",
+      "dest_warp_id": 2
+    }
+  ],
+  "coord_events": [
+
+  ],
+  "bg_events": [
+
+  ]
+}
diff --git a/data/maps/AlteringCave_Cave2/scripts.inc b/data/maps/AlteringCave_Cave2/scripts.inc
new file mode 100644
index 000000000..4e5aeec8a
--- /dev/null
+++ b/data/maps/AlteringCave_Cave2/scripts.inc
@@ -0,0 +1,2 @@
+AlteringCave_Cave2_MapScripts::
+	.byte 0
diff --git a/data/maps/AlteringCave_Cave3/map.json b/data/maps/AlteringCave_Cave3/map.json
new file mode 100644
index 000000000..b6a6f3a5f
--- /dev/null
+++ b/data/maps/AlteringCave_Cave3/map.json
@@ -0,0 +1,34 @@
+{
+  "id": "MAP_ALTERING_CAVE_CAVE3",
+  "name": "AlteringCave_Cave3",
+  "layout": "LAYOUT_ALTERING_CAVE_CAVE3",
+  "music": "MUS_RG_SEVII_CAVE",
+  "region_map_section": "MAPSEC_ALTERING_CAVE",
+  "requires_flash": false,
+  "weather": "WEATHER_NONE",
+  "map_type": "MAP_TYPE_UNDERGROUND",
+  "allow_cycling": true,
+  "allow_escaping": true,
+  "allow_running": true,
+  "show_map_name": true,
+  "battle_scene": "MAP_BATTLE_SCENE_NORMAL",
+  "connections": 0,
+  "object_events": [
+
+  ],
+  "warp_events": [
+    {
+      "x": 9,
+      "y": 14,
+      "elevation": 0,
+      "dest_map": "MAP_ALTERING_CAVE",
+      "dest_warp_id": 3
+    }
+  ],
+  "coord_events": [
+
+  ],
+  "bg_events": [
+
+  ]
+}
diff --git a/data/maps/AlteringCave_Cave3/scripts.inc b/data/maps/AlteringCave_Cave3/scripts.inc
new file mode 100644
index 000000000..8333abfd4
--- /dev/null
+++ b/data/maps/AlteringCave_Cave3/scripts.inc
@@ -0,0 +1,2 @@
+AlteringCave_Cave3_MapScripts::
+	.byte 0
diff --git a/data/maps/AlteringCave_Cave4/map.json b/data/maps/AlteringCave_Cave4/map.json
new file mode 100644
index 000000000..8c7275145
--- /dev/null
+++ b/data/maps/AlteringCave_Cave4/map.json
@@ -0,0 +1,34 @@
+{
+  "id": "MAP_ALTERING_CAVE_CAVE4",
+  "name": "AlteringCave_Cave4",
+  "layout": "LAYOUT_ALTERING_CAVE_CAVE4",
+  "music": "MUS_RG_SEVII_CAVE",
+  "region_map_section": "MAPSEC_ALTERING_CAVE",
+  "requires_flash": false,
+  "weather": "WEATHER_NONE",
+  "map_type": "MAP_TYPE_UNDERGROUND",
+  "allow_cycling": true,
+  "allow_escaping": true,
+  "allow_running": true,
+  "show_map_name": true,
+  "battle_scene": "MAP_BATTLE_SCENE_NORMAL",
+  "connections": 0,
+  "object_events": [
+
+  ],
+  "warp_events": [
+    {
+      "x": 9,
+      "y": 14,
+      "elevation": 0,
+      "dest_map": "MAP_ALTERING_CAVE",
+      "dest_warp_id": 4
+    }
+  ],
+  "coord_events": [
+
+  ],
+  "bg_events": [
+
+  ]
+}
diff --git a/data/maps/AlteringCave_Cave4/scripts.inc b/data/maps/AlteringCave_Cave4/scripts.inc
new file mode 100644
index 000000000..73a8379b7
--- /dev/null
+++ b/data/maps/AlteringCave_Cave4/scripts.inc
@@ -0,0 +1,2 @@
+AlteringCave_Cave4_MapScripts::
+	.byte 0
diff --git a/data/maps/AlteringCave_Cave5/map.json b/data/maps/AlteringCave_Cave5/map.json
new file mode 100644
index 000000000..9d494fe0b
--- /dev/null
+++ b/data/maps/AlteringCave_Cave5/map.json
@@ -0,0 +1,34 @@
+{
+  "id": "MAP_ALTERING_CAVE_CAVE5",
+  "name": "AlteringCave_Cave5",
+  "layout": "LAYOUT_ALTERING_CAVE_CAVE5",
+  "music": "MUS_RG_SEVII_CAVE",
+  "region_map_section": "MAPSEC_ALTERING_CAVE",
+  "requires_flash": false,
+  "weather": "WEATHER_NONE",
+  "map_type": "MAP_TYPE_UNDERGROUND",
+  "allow_cycling": true,
+  "allow_escaping": true,
+  "allow_running": true,
+  "show_map_name": true,
+  "battle_scene": "MAP_BATTLE_SCENE_NORMAL",
+  "connections": 0,
+  "object_events": [
+
+  ],
+  "warp_events": [
+    {
+      "x": 9,
+      "y": 14,
+      "elevation": 0,
+      "dest_map": "MAP_ALTERING_CAVE",
+      "dest_warp_id": 5
+    }
+  ],
+  "coord_events": [
+
+  ],
+  "bg_events": [
+
+  ]
+}
diff --git a/data/maps/AlteringCave_Cave5/scripts.inc b/data/maps/AlteringCave_Cave5/scripts.inc
new file mode 100644
index 000000000..c9d7ea1c1
--- /dev/null
+++ b/data/maps/AlteringCave_Cave5/scripts.inc
@@ -0,0 +1,2 @@
+AlteringCave_Cave5_MapScripts::
+	.byte 0
diff --git a/data/maps/AlteringCave_Cave6/map.json b/data/maps/AlteringCave_Cave6/map.json
new file mode 100644
index 000000000..6ab6737b4
--- /dev/null
+++ b/data/maps/AlteringCave_Cave6/map.json
@@ -0,0 +1,34 @@
+{
+  "id": "MAP_ALTERING_CAVE_CAVE6",
+  "name": "AlteringCave_Cave6",
+  "layout": "LAYOUT_ALTERING_CAVE_CAVE6",
+  "music": "MUS_RG_SEVII_CAVE",
+  "region_map_section": "MAPSEC_ALTERING_CAVE",
+  "requires_flash": false,
+  "weather": "WEATHER_NONE",
+  "map_type": "MAP_TYPE_UNDERGROUND",
+  "allow_cycling": true,
+  "allow_escaping": true,
+  "allow_running": true,
+  "show_map_name": true,
+  "battle_scene": "MAP_BATTLE_SCENE_NORMAL",
+  "connections": 0,
+  "object_events": [
+
+  ],
+  "warp_events": [
+    {
+      "x": 9,
+      "y": 14,
+      "elevation": 0,
+      "dest_map": "MAP_ALTERING_CAVE",
+      "dest_warp_id": 6
+    }
+  ],
+  "coord_events": [
+
+  ],
+  "bg_events": [
+
+  ]
+}
diff --git a/data/maps/AlteringCave_Cave6/scripts.inc b/data/maps/AlteringCave_Cave6/scripts.inc
new file mode 100644
index 000000000..5dab48a2f
--- /dev/null
+++ b/data/maps/AlteringCave_Cave6/scripts.inc
@@ -0,0 +1,2 @@
+AlteringCave_Cave6_MapScripts::
+	.byte 0
diff --git a/data/maps/AlteringCave_Cave7/map.json b/data/maps/AlteringCave_Cave7/map.json
new file mode 100644
index 000000000..c386708d4
--- /dev/null
+++ b/data/maps/AlteringCave_Cave7/map.json
@@ -0,0 +1,34 @@
+{
+  "id": "MAP_ALTERING_CAVE_CAVE7",
+  "name": "AlteringCave_Cave7",
+  "layout": "LAYOUT_ALTERING_CAVE_CAVE7",
+  "music": "MUS_RG_SEVII_CAVE",
+  "region_map_section": "MAPSEC_ALTERING_CAVE",
+  "requires_flash": false,
+  "weather": "WEATHER_NONE",
+  "map_type": "MAP_TYPE_UNDERGROUND",
+  "allow_cycling": true,
+  "allow_escaping": true,
+  "allow_running": true,
+  "show_map_name": true,
+  "battle_scene": "MAP_BATTLE_SCENE_NORMAL",
+  "connections": 0,
+  "object_events": [
+
+  ],
+  "warp_events": [
+    {
+      "x": 9,
+      "y": 14,
+      "elevation": 0,
+      "dest_map": "MAP_ALTERING_CAVE",
+      "dest_warp_id": 7
+    }
+  ],
+  "coord_events": [
+
+  ],
+  "bg_events": [
+
+  ]
+}
diff --git a/data/maps/AlteringCave_Cave7/scripts.inc b/data/maps/AlteringCave_Cave7/scripts.inc
new file mode 100644
index 000000000..5b028cd5a
--- /dev/null
+++ b/data/maps/AlteringCave_Cave7/scripts.inc
@@ -0,0 +1,2 @@
+AlteringCave_Cave7_MapScripts::
+	.byte 0
diff --git a/data/maps/AlteringCave_Cave8/map.json b/data/maps/AlteringCave_Cave8/map.json
new file mode 100644
index 000000000..5e0c476f8
--- /dev/null
+++ b/data/maps/AlteringCave_Cave8/map.json
@@ -0,0 +1,34 @@
+{
+  "id": "MAP_ALTERING_CAVE_CAVE8",
+  "name": "AlteringCave_Cave8",
+  "layout": "LAYOUT_ALTERING_CAVE_CAVE8",
+  "music": "MUS_RG_SEVII_CAVE",
+  "region_map_section": "MAPSEC_ALTERING_CAVE",
+  "requires_flash": false,
+  "weather": "WEATHER_NONE",
+  "map_type": "MAP_TYPE_UNDERGROUND",
+  "allow_cycling": true,
+  "allow_escaping": true,
+  "allow_running": true,
+  "show_map_name": true,
+  "battle_scene": "MAP_BATTLE_SCENE_NORMAL",
+  "connections": 0,
+  "object_events": [
+
+  ],
+  "warp_events": [
+    {
+      "x": 9,
+      "y": 14,
+      "elevation": 0,
+      "dest_map": "MAP_ALTERING_CAVE",
+      "dest_warp_id": 8
+    }
+  ],
+  "coord_events": [
+
+  ],
+  "bg_events": [
+
+  ]
+}
diff --git a/data/maps/AlteringCave_Cave8/scripts.inc b/data/maps/AlteringCave_Cave8/scripts.inc
new file mode 100644
index 000000000..300132cc5
--- /dev/null
+++ b/data/maps/AlteringCave_Cave8/scripts.inc
@@ -0,0 +1,2 @@
+AlteringCave_Cave8_MapScripts::
+	.byte 0
diff --git a/data/maps/CaveOfOrigin_1F/map.json b/data/maps/CaveOfOrigin_1F/map.json
index 17da43907..7266387b8 100644
--- a/data/maps/CaveOfOrigin_1F/map.json
+++ b/data/maps/CaveOfOrigin_1F/map.json
@@ -12,8 +12,10 @@
   "allow_running": true,
   "show_map_name": true,
   "battle_scene": "MAP_BATTLE_SCENE_NORMAL",
-  "connections": null,
-  "object_events": [],
+  "connections": 0,
+  "object_events": [
+
+  ],
   "warp_events": [
     {
       "x": 11,
@@ -30,6 +32,10 @@
       "dest_warp_id": 0
     }
   ],
-  "coord_events": [],
-  "bg_events": []
+  "coord_events": [
+
+  ],
+  "bg_events": [
+
+  ]
 }
diff --git a/data/maps/CaveOfOrigin_B1F/map.json b/data/maps/CaveOfOrigin_B1F/map.json
index 690d26055..3312817ed 100644
--- a/data/maps/CaveOfOrigin_B1F/map.json
+++ b/data/maps/CaveOfOrigin_B1F/map.json
@@ -12,7 +12,7 @@
   "allow_running": true,
   "show_map_name": true,
   "battle_scene": "MAP_BATTLE_SCENE_NORMAL",
-  "connections": null,
+  "connections": 0,
   "object_events": [
     {
       "graphics_id": "OBJ_EVENT_GFX_WALLACE",
@@ -37,6 +37,10 @@
       "dest_warp_id": 1
     }
   ],
-  "coord_events": [],
-  "bg_events": []
+  "coord_events": [
+
+  ],
+  "bg_events": [
+
+  ]
 }
diff --git a/data/maps/CaveOfOrigin_UnusedRubySapphireMap1/map.json b/data/maps/CaveOfOrigin_UnusedRubySapphireMap1/map.json
index 8b05ac536..12d5ab121 100644
--- a/data/maps/CaveOfOrigin_UnusedRubySapphireMap1/map.json
+++ b/data/maps/CaveOfOrigin_UnusedRubySapphireMap1/map.json
@@ -3,33 +3,39 @@
   "name": "CaveOfOrigin_UnusedRubySapphireMap1",
   "layout": "LAYOUT_CAVE_OF_ORIGIN_UNUSED_RUBY_SAPPHIRE_MAP1",
   "music": "MUS_CAVE_OF_ORIGIN",
-  "region_map_section": "MAPSEC_CAVE_OF_ORIGIN",
-  "requires_flash": true,
-  "weather": "WEATHER_NONE",
+  "region_map_section": "MAPSEC_ANCIENT_CAVE",
+  "requires_flash": false,
+  "weather": "WEATHER_FOG_HORIZONTAL",
   "map_type": "MAP_TYPE_UNDERGROUND",
   "allow_cycling": true,
   "allow_escaping": true,
   "allow_running": true,
   "show_map_name": true,
   "battle_scene": "MAP_BATTLE_SCENE_NORMAL",
-  "connections": null,
-  "object_events": [],
+  "connections": 0,
+  "object_events": [
+
+  ],
   "warp_events": [
     {
       "x": 13,
       "y": 5,
       "elevation": 3,
-      "dest_map": "MAP_CAVE_OF_ORIGIN_1F",
-      "dest_warp_id": 1
-    },
-    {
-      "x": 5,
-      "y": 11,
-      "elevation": 3,
       "dest_map": "MAP_CAVE_OF_ORIGIN_UNUSED_RUBY_SAPPHIRE_MAP2",
       "dest_warp_id": 0
+    },
+    {
+      "x": 10,
+      "y": 17,
+      "elevation": 0,
+      "dest_map": "MAP_SOOTOPOLIS_CITY",
+      "dest_warp_id": 13
     }
   ],
-  "coord_events": [],
-  "bg_events": []
+  "coord_events": [
+
+  ],
+  "bg_events": [
+
+  ]
 }
diff --git a/data/maps/CaveOfOrigin_UnusedRubySapphireMap2/map.json b/data/maps/CaveOfOrigin_UnusedRubySapphireMap2/map.json
index 9a3d09810..3e429b492 100644
--- a/data/maps/CaveOfOrigin_UnusedRubySapphireMap2/map.json
+++ b/data/maps/CaveOfOrigin_UnusedRubySapphireMap2/map.json
@@ -3,8 +3,8 @@
   "name": "CaveOfOrigin_UnusedRubySapphireMap2",
   "layout": "LAYOUT_CAVE_OF_ORIGIN_UNUSED_RUBY_SAPPHIRE_MAP2",
   "music": "MUS_CAVE_OF_ORIGIN",
-  "region_map_section": "MAPSEC_CAVE_OF_ORIGIN",
-  "requires_flash": true,
+  "region_map_section": "MAPSEC_ANCIENT_CAVE",
+  "requires_flash": false,
   "weather": "WEATHER_FOG_HORIZONTAL",
   "map_type": "MAP_TYPE_UNDERGROUND",
   "allow_cycling": true,
@@ -12,8 +12,10 @@
   "allow_running": true,
   "show_map_name": true,
   "battle_scene": "MAP_BATTLE_SCENE_NORMAL",
-  "connections": null,
-  "object_events": [],
+  "connections": 0,
+  "object_events": [
+
+  ],
   "warp_events": [
     {
       "x": 5,
@@ -30,6 +32,10 @@
       "dest_warp_id": 0
     }
   ],
-  "coord_events": [],
-  "bg_events": []
+  "coord_events": [
+
+  ],
+  "bg_events": [
+
+  ]
 }
diff --git a/data/maps/CaveOfOrigin_UnusedRubySapphireMap3/map.json b/data/maps/CaveOfOrigin_UnusedRubySapphireMap3/map.json
index 9456f4012..ebdc948bf 100644
--- a/data/maps/CaveOfOrigin_UnusedRubySapphireMap3/map.json
+++ b/data/maps/CaveOfOrigin_UnusedRubySapphireMap3/map.json
@@ -3,8 +3,8 @@
   "name": "CaveOfOrigin_UnusedRubySapphireMap3",
   "layout": "LAYOUT_CAVE_OF_ORIGIN_UNUSED_RUBY_SAPPHIRE_MAP3",
   "music": "MUS_CAVE_OF_ORIGIN",
-  "region_map_section": "MAPSEC_CAVE_OF_ORIGIN",
-  "requires_flash": true,
+  "region_map_section": "MAPSEC_ANCIENT_CAVE",
+  "requires_flash": false,
   "weather": "WEATHER_FOG_HORIZONTAL",
   "map_type": "MAP_TYPE_UNDERGROUND",
   "allow_cycling": true,
@@ -12,8 +12,10 @@
   "allow_running": true,
   "show_map_name": true,
   "battle_scene": "MAP_BATTLE_SCENE_NORMAL",
-  "connections": null,
-  "object_events": [],
+  "connections": 0,
+  "object_events": [
+
+  ],
   "warp_events": [
     {
       "x": 7,
@@ -21,15 +23,12 @@
       "elevation": 3,
       "dest_map": "MAP_CAVE_OF_ORIGIN_UNUSED_RUBY_SAPPHIRE_MAP2",
       "dest_warp_id": 1
-    },
-    {
-      "x": 12,
-      "y": 6,
-      "elevation": 3,
-      "dest_map": "MAP_CAVE_OF_ORIGIN_B1F",
-      "dest_warp_id": 0
     }
   ],
-  "coord_events": [],
-  "bg_events": []
+  "coord_events": [
+
+  ],
+  "bg_events": [
+
+  ]
 }
diff --git a/data/maps/DewfordTown_Gym/scripts.inc b/data/maps/DewfordTown_Gym/scripts.inc
index f67184045..53997251b 100644
--- a/data/maps/DewfordTown_Gym/scripts.inc
+++ b/data/maps/DewfordTown_Gym/scripts.inc
@@ -184,6 +184,7 @@ DewfordTown_Gym_EventScript_GiveBulkUp:: @ 81FC855
 	giveitem ITEM_TM08
 	compare VAR_RESULT, 0
 	goto_if_eq Common_EventScript_BagIsFull
+gTMText_5::
 	msgbox DewfordTown_Gym_Text_ExplainBulkUp, MSGBOX_DEFAULT
 	setflag FLAG_RECEIVED_TM08
 	return
diff --git a/data/maps/FortreeCity/map.json b/data/maps/FortreeCity/map.json
index fd23e6ffd..39abc0fb4 100644
--- a/data/maps/FortreeCity/map.json
+++ b/data/maps/FortreeCity/map.json
@@ -182,7 +182,9 @@
       "dest_warp_id": 0
     }
   ],
-  "coord_events": [],
+  "coord_events": [
+
+  ],
   "bg_events": [
     {
       "type": "sign",
diff --git a/data/maps/FortreeCity_Gym/scripts.inc b/data/maps/FortreeCity_Gym/scripts.inc
index 688c11645..44b6ef533 100644
--- a/data/maps/FortreeCity_Gym/scripts.inc
+++ b/data/maps/FortreeCity_Gym/scripts.inc
@@ -52,6 +52,7 @@ FortreeCity_Gym_EventScript_GiveAerialAce2:: @ 8216646
 	giveitem ITEM_TM40
 	compare VAR_RESULT, FALSE
 	goto_if_eq Common_EventScript_ShowBagIsFull
+gTMText_11::
 	msgbox FortreeCity_Gym_Text_ExplainAerialAce, MSGBOX_DEFAULT
 	setflag FLAG_RECEIVED_TM40
 	release
diff --git a/data/maps/GraniteCave_StevensRoom/scripts.inc b/data/maps/GraniteCave_StevensRoom/scripts.inc
index 650177b95..2e51eef87 100644
--- a/data/maps/GraniteCave_StevensRoom/scripts.inc
+++ b/data/maps/GraniteCave_StevensRoom/scripts.inc
@@ -10,6 +10,7 @@ GraniteCave_StevensRoom_EventScript_Steven:: @ 822DC7B
 	setvar VAR_0x8004, ITEM_LETTER
 	call Common_EventScript_PlayerHandedOverTheItem
 	setflag FLAG_DELIVERED_STEVEN_LETTER
+gTMText_14::
 	msgbox GraniteCave_StevensRoom_Text_ThankYouTakeThis, MSGBOX_DEFAULT
 	giveitem ITEM_TM47
 	compare VAR_RESULT, FALSE
@@ -35,6 +36,20 @@ GraniteCave_StevensRoom_EventScript_Steven:: @ 822DC7B
 	call_if_eq GraniteCave_StevensRoom_EventScript_StevenExitWestEast
 	playse SE_EXIT
 	removeobject LOCALID_STEVEN
+	checkspeedchoice PLOTLESS, PLOT_KEEP
+	goto_if TRUE, StevenRoomEventEnd
+	checkspeedchoice PLOTLESS, PLOT_SEMI
+	goto_if TRUE, StevenRoomEventEnd
+	setflag FLAG_DOCK_REJECTED_DEVON_GOODS
+	setflag FLAG_HIDE_SLATEPORT_CITY_TEAM_AQUA
+	setflag FLAG_HIDE_SLATEPORT_CITY_OCEANIC_MUSEUM_AQUA_GRUNTS
+	setflag FLAG_HIDE_SLATEPORT_CITY_OCEANIC_MUSEUM_2F_CAPTAIN_STERN
+	setflag FLAG_HIDE_ROUTE_110_TEAM_AQUA
+	setflag FLAG_DELIVERED_DEVON_GOODS
+	clearflag FLAG_HIDE_ROUTE_116_DEVON_EMPLOYEE
+	setflag FLAG_HIDE_RUSTBORO_CITY_DEVON_CORP_3F_EMPLOYEE
+	setvar VAR_REGISTER_BIRCH_STATE, 1 @ fix for no Birch on Route 110
+StevenRoomEventEnd::
 	release
 	end
 
diff --git a/data/maps/LavaridgeTown/scripts.inc b/data/maps/LavaridgeTown/scripts.inc
index 1f9fe421d..7e58f8f10 100644
--- a/data/maps/LavaridgeTown/scripts.inc
+++ b/data/maps/LavaridgeTown/scripts.inc
@@ -261,7 +261,7 @@ LavaridgeTown_EventScript_EggWoman:: @ 81EA744
 	playfanfare MUS_OBTAIN_ITEM
 	message LavaridgeTown_Text_ReceivedTheEgg
 	waitfanfare
-	giveegg SPECIES_WYNAUT
+	giveegg SPECIES_DITTO
 	release
 	end
 
diff --git a/data/maps/LavaridgeTown_Gym_1F/scripts.inc b/data/maps/LavaridgeTown_Gym_1F/scripts.inc
index df95a0b4b..ed0230572 100644
--- a/data/maps/LavaridgeTown_Gym_1F/scripts.inc
+++ b/data/maps/LavaridgeTown_Gym_1F/scripts.inc
@@ -89,6 +89,7 @@ LavaridgeTown_Gym_1F_EventScript_GiveOverheat2:: @ 81FE81D
 	giveitem ITEM_TM50
 	compare VAR_RESULT, FALSE
 	goto_if_eq Common_EventScript_ShowBagIsFull
+gTMText_15::
 	msgbox LavaridgeTown_Gym_1F_Text_ExplainOverheat, MSGBOX_DEFAULT
 	setflag FLAG_RECEIVED_TM50
 	release
diff --git a/data/maps/LilycoveCity_Harbor/scripts.inc b/data/maps/LilycoveCity_Harbor/scripts.inc
index 1d9ae6a01..89e34dafd 100644
--- a/data/maps/LilycoveCity_Harbor/scripts.inc
+++ b/data/maps/LilycoveCity_Harbor/scripts.inc
@@ -14,7 +14,7 @@ LilycoveCity_Harbor_OnTransition: @ 821E006
 LilycoveCity_Harbor_EventScript_FerryAttendant:: @ 821E00F
 	lock
 	faceplayer
-	goto_if_unset FLAG_SYS_GAME_CLEAR, LilycoveCity_Harbor_EventScript_FerryUnavailable
+	@goto_if_unset FLAG_SYS_GAME_CLEAR, LilycoveCity_Harbor_EventScript_FerryUnavailable
 	call LilycoveCity_Harbor_EventScript_GetEonTicketState
 	call LilycoveCity_Harbor_EventScript_GetAuroraTicketState
 	call LilycoveCity_Harbor_EventScript_GetOldSeaMapState
diff --git a/data/maps/MauvilleCity/scripts.inc b/data/maps/MauvilleCity/scripts.inc
index 7107f4754..3944361db 100644
--- a/data/maps/MauvilleCity/scripts.inc
+++ b/data/maps/MauvilleCity/scripts.inc
@@ -441,6 +441,7 @@ MauvilleCity_EventScript_BegunNewMauville:: @ 81DF77A
 	end
 
 MauvilleCity_EventScript_CompletedNewMauville:: @ 81DF784
+gTMText_7::
 	msgbox MauvilleCity_Text_WattsonThanksTakeTM, MSGBOX_DEFAULT
 	giveitem ITEM_TM24
 	compare VAR_RESULT, FALSE
diff --git a/data/maps/MauvilleCity_Gym/scripts.inc b/data/maps/MauvilleCity_Gym/scripts.inc
index 3fa7dc8c9..28a6edb35 100644
--- a/data/maps/MauvilleCity_Gym/scripts.inc
+++ b/data/maps/MauvilleCity_Gym/scripts.inc
@@ -86,6 +86,27 @@ MauvilleCity_Gym_EventScript_Wattson:: @ 820DEEB
 	end
 
 MauvilleCity_Gym_EventScript_WattsonDefeated:: @ 820DF2B
+	checkspeedchoice PLOTLESS, PLOT_KEEP
+	goto_if TRUE, WattsonAfter
+	checkspeedchoice PLOTLESS, PLOT_SEMI
+	goto_if TRUE, WattsonAfter
+	setflag FLAG_HIDE_ROUTE_112_TEAM_MAGMA
+	setvar VAR_METEOR_FALLS_STATE, 1
+	setflag FLAG_HIDE_METEOR_FALLS_TEAM_AQUA
+	setflag FLAG_MET_PROF_COZMO
+	setflag FLAG_HIDE_MT_CHIMNEY_TEAM_AQUA
+	setflag FLAG_HIDE_MT_CHIMNEY_TEAM_MAGMA
+	setflag FLAG_DEFEATED_EVIL_TEAM_MT_CHIMNEY
+	clearflag FLAG_HIDE_FALLARBOR_HOUSE_PROF_COZMO
+	setflag FLAG_HIDE_METEOR_FALLS_1F_1R_COZMO
+	@ prevent weather institute from being required on Semi+Full and Early Surf since the player can surf there early. The other 3 instances of this were guards for older saves since I didn't feel like replaying the game for the 20th time.
+	checkspeedchoice PLOTLESS, PLOT_KEEP @ seems weird checking for keep since it was checked earlier, but im actually just checking for SEMI or FULL.
+	goto_if TRUE, WattsonAfter
+	setvar VAR_WEATHER_INSTITUTE_STATE, 2
+	setflag FLAG_HIDE_ROUTE_119_TEAM_AQUA
+	clearflag FLAG_HIDE_WEATHER_INSTITUTE_1F_WORKERS
+	setflag FLAG_HIDE_WEATHER_INSTITUTE_2F_WORKERS
+WattsonAfter::
 	message MauvilleCity_Gym_Text_ReceivedDynamoBadge
 	waitmessage
 	call Common_EventScript_PlayGymBadgeFanfare
@@ -118,6 +139,7 @@ MauvilleCity_Gym_EventScript_GiveShockWave2:: @ 820DF8D
 	giveitem ITEM_TM34
 	compare VAR_RESULT, FALSE
 	goto_if_eq Common_EventScript_ShowBagIsFull
+gTMText_9::
 	msgbox MauvilleCity_Gym_Text_ExplainShockWave, MSGBOX_DEFAULT
 	setflag FLAG_RECEIVED_TM34
 	release
diff --git a/data/maps/MauvilleCity_Mart/scripts.inc b/data/maps/MauvilleCity_Mart/scripts.inc
index b288d42b7..ff032abe0 100644
--- a/data/maps/MauvilleCity_Mart/scripts.inc
+++ b/data/maps/MauvilleCity_Mart/scripts.inc
@@ -6,7 +6,7 @@ MauvilleCity_Mart_EventScript_Clerk:: @ 82110E6
 	faceplayer
 	message gText_HowMayIServeYou
 	waitmessage
-	pokemart MauvilleCity_Mart_Pokemart
+	pokemart MauvilleCitySpeedchoice_Mart_Items
 	msgbox gText_PleaseComeAgain, MSGBOX_DEFAULT
 	release
 	end
@@ -29,6 +29,26 @@ MauvilleCity_Mart_Pokemart: @ 8211100
 	release
 	end
 
+	.align 2
+MauvilleCitySpeedchoice_Mart_Items:: @ 81573D8
+	.2byte ITEM_POKE_BALL
+	.2byte ITEM_GREAT_BALL
+	.2byte ITEM_SUPER_POTION
+	.2byte ITEM_ANTIDOTE
+	.2byte ITEM_PARALYZE_HEAL
+	.2byte ITEM_AWAKENING
+	.2byte ITEM_X_SPEED
+	.2byte ITEM_X_ATTACK
+	.2byte ITEM_X_DEFEND
+	.2byte ITEM_GUARD_SPEC
+	.2byte ITEM_DIRE_HIT
+	.2byte ITEM_X_ACCURACY
+	.2byte ITEM_REPEL
+	.2byte ITEM_SUPER_REPEL
+	.2byte ITEM_NONE
+	release
+	end
+
 MauvilleCity_Mart_EventScript_ExpertM:: @ 821111C
 	msgbox MauvilleCity_Mart_Text_ItemsToTemporarilyElevateStats, MSGBOX_NPC
 	end
diff --git a/data/maps/MeteorFalls_StevensCave/map.json b/data/maps/MeteorFalls_StevensCave/map.json
index 01b05d308..78c7c1980 100644
--- a/data/maps/MeteorFalls_StevensCave/map.json
+++ b/data/maps/MeteorFalls_StevensCave/map.json
@@ -12,7 +12,7 @@
   "allow_running": true,
   "show_map_name": true,
   "battle_scene": "MAP_BATTLE_SCENE_NORMAL",
-  "connections": null,
+  "connections": 0,
   "object_events": [
     {
       "graphics_id": "OBJ_EVENT_GFX_STEVEN",
@@ -37,6 +37,10 @@
       "dest_warp_id": 5
     }
   ],
-  "coord_events": [],
-  "bg_events": []
+  "coord_events": [
+
+  ],
+  "bg_events": [
+
+  ]
 }
diff --git a/data/maps/MossdeepCity_Gym/scripts.inc b/data/maps/MossdeepCity_Gym/scripts.inc
index 0e6487e16..e44bd1f34 100644
--- a/data/maps/MossdeepCity_Gym/scripts.inc
+++ b/data/maps/MossdeepCity_Gym/scripts.inc
@@ -70,6 +70,8 @@ MossdeepCity_Gym_EventScript_TateAndLizaDefeated:: @ 82208D1
 	clearflag FLAG_UNKNOWN_0x393
 	setvar VAR_0x8008, 7
 	call Common_EventScript_SetGymTrainers
+    checkspeedchoice PLOTLESS, PLOT_KEEP @ Execute plot on Semi and Full
+    goto_if FALSE, AfterMossdeepGymPlot
 	clearflag FLAG_HIDE_SLATEPORT_CITY_HARBOR_PATRONS
 	clearflag FLAG_HIDE_MOSSDEEP_CITY_TEAM_MAGMA
 	clearflag FLAG_HIDE_MOSSDEEP_CITY_SPACE_CENTER_1F_TEAM_MAGMA
@@ -78,6 +80,7 @@ MossdeepCity_Gym_EventScript_TateAndLizaDefeated:: @ 82208D1
 	setvar VAR_MOSSDEEP_CITY_STATE, 1
 	setflag FLAG_HIDE_MOSSDEEP_CITY_SPACE_CENTER_1F_STEVEN
 	setvar VAR_MOSSDEEP_SPACE_CENTER_STATE, 1
+AfterMossdeepGymPlot::
 	call MossdeepCity_Gym_EventScript_GiveCalmMind
 	closemessage
 	delay 30
@@ -94,6 +97,7 @@ MossdeepCity_Gym_EventScript_GiveCalmMind2:: @ 8220937
 	giveitem ITEM_TM04
 	compare VAR_RESULT, FALSE
 	goto_if_eq Common_EventScript_ShowBagIsFull
+gTMText_2::
 	msgbox MossdeepCity_Gym_Text_ExplainCalmMind, MSGBOX_DEFAULT
 	setflag FLAG_RECEIVED_TM04
 	release
diff --git a/data/maps/MossdeepCity_StevensHouse/scripts.inc b/data/maps/MossdeepCity_StevensHouse/scripts.inc
index 1d384efe1..4721229f4 100644
--- a/data/maps/MossdeepCity_StevensHouse/scripts.inc
+++ b/data/maps/MossdeepCity_StevensHouse/scripts.inc
@@ -43,6 +43,16 @@ MossdeepCity_StevensHouse_EventScript_StevenGivesDive:: @ 82227CA
 	msgbox MossdeepCity_StevensHouse_Text_YouveEarnedHMDive, MSGBOX_DEFAULT
 	giveitem ITEM_HM08
 	setflag FLAG_RECEIVED_HM08
+    @ speedchoice benefits regardless of settings
+    @ give the player the event items.
+	setflag FLAG_ENABLE_SHIP_SOUTHERN_ISLAND
+	giveitem ITEM_EON_TICKET
+	setflag FLAG_ENABLE_SHIP_BIRTH_ISLAND
+	giveitem ITEM_AURORA_TICKET
+	setflag FLAG_ENABLE_SHIP_FARAWAY_ISLAND
+	giveitem ITEM_OLD_SEA_MAP
+	setflag FLAG_ENABLE_SHIP_NAVEL_ROCK
+	giveitem ITEM_MYSTIC_TICKET
 	setflag FLAG_OMIT_DIVE_FROM_STEVEN_LETTER
 	msgbox MossdeepCity_StevensHouse_Text_ExplainDive, MSGBOX_DEFAULT
 	closemessage
@@ -52,6 +62,65 @@ MossdeepCity_StevensHouse_EventScript_StevenGivesDive:: @ 82227CA
 	setflag FLAG_HIDE_MOSSDEEP_CITY_SCOTT
 	setflag FLAG_HIDE_SEAFLOOR_CAVERN_ENTRANCE_AQUA_GRUNT
 	setvar VAR_STEVENS_HOUSE_STATE, 2
+
+	checkspeedchoice PLOTLESS, PLOT_KEEP
+	goto_if TRUE, AfterStevenDive
+	@ seafloor cavern
+	setvar VAR_ROUTE128_STATE, 1
+	setvar VAR_SOOTOPOLIS_CITY_STATE, 1
+	clearflag FLAG_HIDE_SOOTOPOLIS_CITY_STEVEN
+	clearflag FLAG_HIDE_SOOTOPOLIS_CITY_ARCHIE
+	clearflag FLAG_HIDE_SOOTOPOLIS_CITY_MAXIE
+	clearflag FLAG_HIDE_SOOTOPOLIS_CITY_RESIDENTS
+	clearflag FLAG_HIDE_SOOTOPOLIS_CITY_GROUDON
+	clearflag FLAG_HIDE_SOOTOPOLIS_CITY_KYOGRE
+	setflag FLAG_HIDE_SOOTOPOLIS_CITY_MAN_1
+	setflag FLAG_LEGENDARIES_IN_SOOTOPOLIS
+	clearflag FLAG_HIDE_ROUTE_128_ARCHIE
+	clearflag FLAG_HIDE_ROUTE_128_MAXIE
+	setflag FLAG_SYS_WEATHER_CTRL
+	setflag FLAG_KYOGRE_ESCAPED_SEAFLOOR_CAVERN
+	setflag FLAG_HIDE_MOSSDEEP_CITY_STEVENS_HOUSE_STEVEN
+	setvar VAR_STEVENS_HOUSE_STATE, 2
+	setvar VAR_SEAFLOOR_CAVERN_STATE, 1
+	setflag FLAG_HIDE_SEAFLOOR_CAVERN_ROOM_9_ARCHIE
+	setflag FLAG_HIDE_SEAFLOOR_CAVERN_ROOM_9_MAXIE
+	setflag FLAG_HIDE_SEAFLOOR_CAVERN_ROOM_9_MAGMA_GRUNTS
+	setflag FLAG_HIDE_SEAFLOOR_CAVERN_ROOM_9_KYOGRE_1
+	setflag FLAG_HIDE_SEAFLOOR_CAVERN_AQUA_GRUNTS
+	@ route 128
+	setvar VAR_ROUTE128_STATE, 2
+	@ cave of origin
+	setflag FLAG_WALLACE_GOES_TO_SKY_PILLAR @ sky pillar
+	setvar VAR_SOOTOPOLIS_CITY_STATE, 3
+	clearflag FLAG_HIDE_SKY_PILLAR_WALLACE
+	@ make rayquaza fly
+	setvar VAR_SOOTOPOLIS_CITY_STATE, 5
+	setvar VAR_SKY_PILLAR_STATE, 1
+	setvar VAR_SKY_PILLAR_RAQUAZA_CRY_DONE, 1
+	@ skip rayquaza scene
+	clearflag FLAG_SYS_WEATHER_CTRL
+	setvar VAR_SKY_PILLAR_STATE, 3
+	clearflag FLAG_LEGENDARIES_IN_SOOTOPOLIS
+	setflag FLAG_HIDE_SOOTOPOLIS_CITY_MAXIE
+	setflag FLAG_HIDE_SOOTOPOLIS_CITY_ARCHIE
+	clearflag FLAG_HIDE_MT_PYRE_SUMMIT_MAXIE
+	clearflag FLAG_HIDE_MT_PYRE_SUMMIT_ARCHIE
+	setvar VAR_MT_PYRE_STATE, 2
+	setflag FLAG_SOOTOPOLIS_ARCHIE_MAXIE_LEAVE @ post rayquaza scene state
+	setflag FLAG_STEVEN_GUIDES_TO_CAVE_OF_ORIGIN @ steven fix
+	clearflag FLAG_HIDE_SOOTOPOLIS_CITY_WALLACE @ make wallace visible so HM07 can be given
+	@ hide all the relevent objects
+	setflag FLAG_HIDE_SOOTOPOLIS_CITY_KYOGRE @ Kyogre
+	setflag FLAG_HIDE_SOOTOPOLIS_CITY_GROUDON @ Groudon
+	setflag FLAG_HIDE_ROUTE_128_ARCHIE @ Archie route 128
+	setflag FLAG_HIDE_ROUTE_128_MAXIE @ Maxie route 128
+	setflag FLAG_HIDE_SKY_PILLAR_WALLACE @ Wallace outside Sky Pillar
+	@ attempted fix for inability to catch Rayquaza
+	clearflag FLAG_HIDE_RAYQUAZA_SKY_TOWER_SUMMIT
+	setflag FLAG_HIDE_SKY_PILLAR_TOP_RAYQUAZA_2
+
+AfterStevenDive::
 	releaseall
 	end
 
diff --git a/data/maps/MtChimney/scripts.inc b/data/maps/MtChimney/scripts.inc
index c633d9313..fa4a7ba20 100644
--- a/data/maps/MtChimney/scripts.inc
+++ b/data/maps/MtChimney/scripts.inc
@@ -81,6 +81,22 @@ MtChimney_EventScript_Maxie:: @ 822EE0B
 	clearflag FLAG_HIDE_FALLARBOR_HOUSE_PROF_COZMO
 	setflag FLAG_HIDE_METEOR_FALLS_1F_1R_COZMO
 	clearflag FLAG_HIDE_MT_CHIMNEY_LAVA_COOKIE_LADY
+	@ we only need to do this for Semi, since the player can do gym 5 on Early Surf, and thus use the Weather Institute early.
+	checkspeedchoice PLOTLESS, PLOT_SEMI
+	goto_if FALSE, AfterChimney
+	setvar VAR_WEATHER_INSTITUTE_STATE, 2
+	setflag FLAG_HIDE_ROUTE_119_TEAM_AQUA
+	clearflag FLAG_HIDE_WEATHER_INSTITUTE_1F_WORKERS
+	setflag FLAG_HIDE_WEATHER_INSTITUTE_2F_WORKERS
+    @ magma chamber fix
+    setvar VAR_JAGGED_PASS_STATE, 2
+    setflag FLAG_HIDE_MAGMA_HIDEOUT_GRUNTS
+    setflag FLAG_HIDE_MAGMA_HIDEOUT_4F_GROUDON_1
+    setflag FLAG_HIDE_MAGMA_HIDEOUT_4F_GROUDON_2
+    setflag FLAG_HIDE_JAGGED_PASS_MAGMA_GUARD
+    @ make old man disappear for sootopolis
+    setflag FLAG_HIDE_CAVE_OF_ORIGIN_B1F_WALLACE @ also hides the expert as a hack
+AfterChimney::
 	releaseall
 	end
 
diff --git a/data/maps/OldaleTown_Mart/scripts.inc b/data/maps/OldaleTown_Mart/scripts.inc
index 33d26cbfb..19ca460e0 100644
--- a/data/maps/OldaleTown_Mart/scripts.inc
+++ b/data/maps/OldaleTown_Mart/scripts.inc
@@ -7,11 +7,12 @@ OldaleTown_Mart_EventScript_Clerk:: @ 81FC240
 	message gText_HowMayIServeYou
 	waitmessage
 	goto_if_set FLAG_ADVENTURE_STARTED, OldaleTown_Mart_ExpandedItems
-	pokemart OldaleTown_Mart_Pokemart_Basic
+	pokemart OldaleTownSpeedchoice_Mart_Items1
 	msgbox gText_PleaseComeAgain, MSGBOX_DEFAULT
 	release
 	end
 
+    .align 2
 OldaleTown_Mart_Pokemart_Basic: @ 81FC260
 	.2byte ITEM_POTION
 	.2byte ITEM_ANTIDOTE
@@ -21,8 +22,20 @@ OldaleTown_Mart_Pokemart_Basic: @ 81FC260
 	release
 	end
 
+	.align 2
+OldaleTownSpeedchoice_Mart_Items1:: @ 8152F9C
+	.2byte ITEM_POKE_BALL
+	.2byte ITEM_POTION
+	.2byte ITEM_ANTIDOTE
+	.2byte ITEM_PARALYZE_HEAL
+	.2byte ITEM_AWAKENING
+	.2byte ITEM_REPEL
+	.2byte ITEM_NONE
+	release
+	end
+
 OldaleTown_Mart_ExpandedItems:: @ 81FC26C
-	pokemart OldaleTown_Mart_Pokemart_Expanded
+	pokemart OldaleTownSpeedchoice_Mart_Items2
 	msgbox gText_PleaseComeAgain, MSGBOX_DEFAULT
 	release
 	end
@@ -38,6 +51,18 @@ OldaleTown_Mart_Pokemart_Expanded: @ 81FC27C
 	release
 	end
 
+	.align 2
+OldaleTownSpeedchoice_Mart_Items2:: @ 8152FB8
+	.2byte ITEM_POKE_BALL
+	.2byte ITEM_POTION
+	.2byte ITEM_ANTIDOTE
+	.2byte ITEM_PARALYZE_HEAL
+	.2byte ITEM_AWAKENING
+	.2byte ITEM_REPEL
+	.2byte ITEM_NONE
+	release
+	end
+
 OldaleTown_Mart_EventScript_Woman:: @ 81FC28A
 	lock
 	faceplayer
diff --git a/data/maps/PetalburgCity_Gym/scripts.inc b/data/maps/PetalburgCity_Gym/scripts.inc
index 2bdd5320f..ab27b42ee 100644
--- a/data/maps/PetalburgCity_Gym/scripts.inc
+++ b/data/maps/PetalburgCity_Gym/scripts.inc
@@ -99,6 +99,22 @@ PetalburgCity_Gym_EventScript_ReturnFromWallyTutorial:: @ 82049A4
 	waitmovement 0
 	msgbox PetalburgCity_Gym_Text_DadGoCollectBadges, MSGBOX_DEFAULT
 	setvar VAR_PETALBURG_GYM_STATE, 2
+	checkspeedchoice PLOTLESS, PLOT_KEEP
+	goto_if TRUE, EndOfWallyTutorial
+	checkspeedchoice PLOTLESS, PLOT_SEMI
+	goto_if TRUE, EndOfWallyTutorial
+	setvar VAR_PETALBURG_WOODS_STATE, 1
+	setflag FLAG_HIDE_PETALBURG_WOODS_DEVON_EMPLOYEE
+	setflag FLAG_HIDE_PETALBURG_WOODS_AQUA_GRUNT
+    @ magma chamber fix
+    setvar VAR_JAGGED_PASS_STATE, 2
+    setflag FLAG_HIDE_MAGMA_HIDEOUT_GRUNTS
+    setflag FLAG_HIDE_MAGMA_HIDEOUT_4F_GROUDON_1
+    setflag FLAG_HIDE_MAGMA_HIDEOUT_4F_GROUDON_2
+    setflag FLAG_HIDE_JAGGED_PASS_MAGMA_GUARD
+    @ make old man disappear for sootopolis
+    setflag FLAG_HIDE_CAVE_OF_ORIGIN_B1F_WALLACE @ also hides the expert as a hack
+EndOfWallyTutorial::
 	releaseall
 	end
 
@@ -410,6 +426,13 @@ PetalburgCity_Gym_EventScript_GiveEnigmaBerry:: @ 8204E1D
 PetalburgCity_Gym_EventScript_NormanBattle:: @ 8204E3B
 	msgbox PetalburgCity_Gym_Text_NormanIntro, MSGBOX_DEFAULT
 	trainerbattle_no_intro TRAINER_NORMAN_1, PetalburgCity_Gym_Text_NormanDefeat
+	checkspeedchoice PLOTLESS, PLOT_KEEP
+	goto_if TRUE, AfterNorman
+	setvar VAR_WEATHER_INSTITUTE_STATE, 2
+	setflag FLAG_HIDE_ROUTE_119_TEAM_AQUA
+	clearflag FLAG_HIDE_WEATHER_INSTITUTE_1F_WORKERS
+	setflag FLAG_HIDE_WEATHER_INSTITUTE_2F_WORKERS
+AfterNorman::
 	message PetalburgCity_Gym_Text_ReceivedBalanceBadge
 	waitmessage
 	call Common_EventScript_PlayGymBadgeFanfare
@@ -417,6 +440,7 @@ PetalburgCity_Gym_EventScript_NormanBattle:: @ 8204E3B
 	setflag FLAG_DEFEATED_PETALBURG_GYM
 	setvar VAR_PETALBURG_GYM_STATE, 7
 	setflag FLAG_BADGE05_GET
+    clearflag FLAG_HIDE_ROUTE_120_STEVEN @ SPEEDCHOICE (Steven object after Fortree)
 	special ResetHealLocationFromDewford
 	call EventScript_HideMrBriney
 	setflag FLAG_HIDE_MAUVILLE_GYM_WATTSON
@@ -445,6 +469,7 @@ PetalburgCity_Gym_EventScript_GiveFacade:: @ 8204ED2
 	compare VAR_RESULT, FALSE
 	goto_if_eq Common_EventScript_BagIsFull
 	setflag FLAG_RECEIVED_TM42
+gTMText_13::
 	msgbox PetalburgCity_Gym_Text_ExplainFacade, MSGBOX_DEFAULT
 	return
 
diff --git a/data/maps/PetalburgCity_WallysHouse/scripts.inc b/data/maps/PetalburgCity_WallysHouse/scripts.inc
index 1e4e75987..197a04d1e 100644
--- a/data/maps/PetalburgCity_WallysHouse/scripts.inc
+++ b/data/maps/PetalburgCity_WallysHouse/scripts.inc
@@ -21,8 +21,15 @@ PetalburgCity_WallysHouse_OnFrame: @ 8204247
 PetalburgCity_WallysHouse_EventScript_GiveHM03Surf:: @ 8204251
 	lockall
 	msgbox PetalburgCity_WallysHouse_Text_PleaseExcuseUs, MSGBOX_DEFAULT
+	checkspeedchoice EARLYSURF, SURF_ON
+	goto_if TRUE, Speedchoice_EarlySurf
 	giveitem ITEM_HM03
 	setflag FLAG_RECEIVED_HM03
+	goto AfterEarlySurf
+Speedchoice_EarlySurf::
+	giveitem ITEM_HM04
+	setflag FLAG_RECEIVED_HM04
+AfterEarlySurf::
 	msgbox PetalburgCity_WallysHouse_Text_SurfGoAllSortsOfPlaces, MSGBOX_DEFAULT
 	setvar VAR_PETALBURG_CITY_STATE, 5
 	releaseall
diff --git a/data/maps/Route101/map.json b/data/maps/Route101/map.json
index 34dc92841..de07206f4 100644
--- a/data/maps/Route101/map.json
+++ b/data/maps/Route101/map.json
@@ -104,7 +104,9 @@
       "flag": "FLAG_HIDE_ROUTE_101_BOY"
     }
   ],
-  "warp_events": [],
+  "warp_events": [
+
+  ],
   "coord_events": [
     {
       "type": "trigger",
diff --git a/data/maps/Route102/map.json b/data/maps/Route102/map.json
index fc9adee3b..4c6dc95f5 100644
--- a/data/maps/Route102/map.json
+++ b/data/maps/Route102/map.json
@@ -143,8 +143,12 @@
       "flag": "0"
     }
   ],
-  "warp_events": [],
-  "coord_events": [],
+  "warp_events": [
+
+  ],
+  "coord_events": [
+
+  ],
   "bg_events": [
     {
       "type": "sign",
diff --git a/data/maps/Route103/map.json b/data/maps/Route103/map.json
index 4b91f913b..82763776f 100644
--- a/data/maps/Route103/map.json
+++ b/data/maps/Route103/map.json
@@ -295,7 +295,9 @@
       "dest_warp_id": 0
     }
   ],
-  "coord_events": [],
+  "coord_events": [
+
+  ],
   "bg_events": [
     {
       "type": "sign",
diff --git a/data/maps/Route104/scripts.inc b/data/maps/Route104/scripts.inc
index d1faca53a..0c3c0d3d8 100644
--- a/data/maps/Route104/scripts.inc
+++ b/data/maps/Route104/scripts.inc
@@ -343,6 +343,7 @@ Route104_EventScript_Boy2:: @ 81ED057
 	lock
 	faceplayer
 	goto_if_set FLAG_RECEIVED_TM09, Route104_EventScript_ReceivedBulletSeed
+gTMText_6::
 	msgbox Route104_Text_LikeFillingMouthWithSeedsTakeThis, MSGBOX_DEFAULT
 	giveitem ITEM_TM09
 	compare VAR_RESULT, FALSE
diff --git a/data/maps/Route110/scripts.inc b/data/maps/Route110/scripts.inc
index 50f3d1f48..0afd84f59 100644
--- a/data/maps/Route110/scripts.inc
+++ b/data/maps/Route110/scripts.inc
@@ -442,7 +442,10 @@ Route110_EventScript_MayBattleMudkip:: @ 81EF83A
 
 Route110_EventScript_MayDefeated:: @ 81EF84A
 	msgbox Route110_Text_MayTakeThis, MSGBOX_DEFAULT
-	call Route110_EventScript_GiveItemfinder
+	checkspeedchoice EARLYFLY, FLY_YES
+	call_if TRUE, Speedchoice_GiveFly
+	checkspeedchoice EARLYFLY, FLY_NO
+	call_if TRUE, Route110_EventScript_GiveItemfinder @ im sure there's a better way to do this than a double check. i cannot be sure that the callif instructions don't modify callif conditional.
 	msgbox Route110_Text_MayExplainItemfinder, MSGBOX_DEFAULT
 	goto Route110_EventScript_RivalExit
 	end
@@ -472,7 +475,10 @@ Route110_EventScript_BrendanBattleMudkip:: @ 81EF8B4
 
 Route110_EventScript_BrendanDefeated:: @ 81EF8C4
 	msgbox Route110_Text_BrendanTakeThis, MSGBOX_DEFAULT
-	call Route110_EventScript_GiveItemfinder
+	checkspeedchoice EARLYFLY, FLY_YES
+	call_if TRUE, Speedchoice_GiveFly
+	checkspeedchoice EARLYFLY, FLY_NO
+	call_if TRUE, Route110_EventScript_GiveItemfinder @ im sure there's a better way to do this than a double check. i cannot be sure that the callif instructions don't modify callif conditional.
 	msgbox Route110_Text_BrendanExplainItemfinder, MSGBOX_DEFAULT
 	goto Route110_EventScript_RivalExit
 	end
@@ -481,6 +487,10 @@ Route110_EventScript_GiveItemfinder:: @ 81EF8DF
 	giveitem ITEM_ITEMFINDER
 	return
 
+Speedchoice_GiveFly::
+	giveitem ITEM_HM02
+	return
+
 Route110_EventScript_RivalExit:: @ 81EF8EC
 	closemessage
 	compare VAR_0x8008, 1
diff --git a/data/maps/Route114/scripts.inc b/data/maps/Route114/scripts.inc
index dda7f270d..ffa7c62ec 100644
--- a/data/maps/Route114/scripts.inc
+++ b/data/maps/Route114/scripts.inc
@@ -50,11 +50,13 @@ Route114_EventScript_RoarGentleman:: @ 81F25D1
 	lock
 	faceplayer
 	goto_if_set FLAG_RECEIVED_TM05, Route114_EventScript_ReceivedRoar
+gTMText_3::
 	msgbox Route114_Text_AllMyMonDoesIsRoarTakeThis, MSGBOX_DEFAULT
 	giveitem ITEM_TM05
 	compare VAR_RESULT, FALSE
 	goto_if_eq Common_EventScript_ShowBagIsFull
 	setflag FLAG_RECEIVED_TM05
+gTMText_4::
 	msgbox Route114_Text_ExplainRoar, MSGBOX_DEFAULT
 	release
 	end
diff --git a/data/maps/Route119/scripts.inc b/data/maps/Route119/scripts.inc
index 734934d17..fea8e18d1 100644
--- a/data/maps/Route119/scripts.inc
+++ b/data/maps/Route119/scripts.inc
@@ -106,7 +106,10 @@ Route119_EventScript_BattleMayMudkip:: @ 81F455A
 
 Route119_EventScript_DefeatedMay:: @ 81F456A
 	msgbox Route119_Text_MayPresentForYou, MSGBOX_DEFAULT
-	call Route119_EventScript_GiveFlyHM
+	checkspeedchoice EARLYFLY, FLY_YES
+	call_if TRUE, Speedchoice_GiveItemfinder
+	checkspeedchoice EARLYFLY, FLY_NO
+	call_if TRUE, Route119_EventScript_GiveFlyHM @ im still not sure if there's a better way to do this than a double check. i cannot be sure that the callif instructions don't modify callif conditional.
 	msgbox Route119_Text_MayExplainFly, MSGBOX_DEFAULT
 	goto Route119_EventScript_RivalExitScottArrive
 	end
@@ -136,7 +139,10 @@ Route119_EventScript_BattleBrendanMudkip:: @ 81F45D4
 
 Route119_EventScript_DefeatedBrendan:: @ 81F45E4
 	msgbox Route119_Text_BrendanIllGiveYouThis, MSGBOX_DEFAULT
-	call Route119_EventScript_GiveFlyHM
+	checkspeedchoice EARLYFLY, FLY_YES
+	call_if TRUE, Speedchoice_GiveItemfinder
+	checkspeedchoice EARLYFLY, FLY_NO
+	call_if TRUE, Route119_EventScript_GiveFlyHM @ im still not sure if there's a better way to do this than a double check. i cannot be sure that the callif instructions don't modify callif conditional.
 	msgbox Route119_Text_BrendanExplainFly, MSGBOX_DEFAULT
 	goto Route119_EventScript_RivalExitScottArrive
 	end
@@ -146,6 +152,11 @@ Route119_EventScript_GiveFlyHM:: @ 81F45FF
 	setflag FLAG_RECEIVED_HM02
 	return
 
+Speedchoice_GiveItemfinder::
+	giveitem ITEM_ITEMFINDER
+	setflag FLAG_RECEIVED_HM02
+	return
+
 Route119_EventScript_RivalExitScottArrive:: @ 81F460F
 	closemessage
 	compare VAR_TEMP_1, 1
diff --git a/data/maps/Route120/map.json b/data/maps/Route120/map.json
index 787f51361..fae1919a6 100644
--- a/data/maps/Route120/map.json
+++ b/data/maps/Route120/map.json
@@ -412,7 +412,7 @@
       "movement_range_y": 1,
       "trainer_type": "TRAINER_TYPE_NONE",
       "trainer_sight_or_berry_tree_id": "0",
-      "script": "Route120_EventScript_BridgeKecleon",
+      "script": "0",
       "flag": "FLAG_HIDE_ROUTE_120_KECLEON_BRIDGE"
     },
     {
@@ -596,6 +596,19 @@
       "trainer_sight_or_berry_tree_id": "0",
       "script": "Route120_EventScript_ItemRevive",
       "flag": "FLAG_ITEM_ROUTE_120_REVIVE"
+    },
+    {
+      "graphics_id": "OBJ_EVENT_GFX_KECLEON",
+      "x": 12,
+      "y": 15,
+      "elevation": 4,
+      "movement_type": "MOVEMENT_TYPE_INVISIBLE",
+      "movement_range_x": 1,
+      "movement_range_y": 1,
+      "trainer_type": "TRAINER_TYPE_NONE",
+      "trainer_sight_or_berry_tree_id": "0",
+      "script": "NULL",
+      "flag": "FLAG_HIDE_ROUTE_120_KECLEON_BRIDGE"
     }
   ],
   "warp_events": [
diff --git a/data/maps/Route120/scripts.inc b/data/maps/Route120/scripts.inc
index 0056acbd7..d358b03f3 100644
--- a/data/maps/Route120/scripts.inc
+++ b/data/maps/Route120/scripts.inc
@@ -258,6 +258,38 @@ Route120_EventScript_StevenGiveDeconScope:: @ 81F572C
 	setmetatile 12, 17, METATILE_General_ReflectiveWater, 0
 	setmetatile 13, 17, METATILE_General_ReflectiveWater, 0
 	special DrawWholeMapView
+
+	checkspeedchoice PLOTLESS, PLOT_KEEP
+	goto_if TRUE, AfterKekleon
+	setflag FLAG_HIDE_MT_PYRE_SUMMIT_ARCHIE
+	setflag FLAG_HIDE_MT_PYRE_SUMMIT_TEAM_AQUA
+	setflag FLAG_RECEIVED_RED_OR_BLUE_ORB
+	clearflag FLAG_HIDE_SLATEPORT_CITY_HARBOR_CAPTAIN_STERN
+	clearflag FLAG_HIDE_SLATEPORT_CITY_HARBOR_SUBMARINE_SHADOW
+	clearflag FLAG_HIDE_SLATEPORT_CITY_HARBOR_AQUA_GRUNT
+	clearflag FLAG_HIDE_SLATEPORT_CITY_HARBOR_ARCHIE
+	setflag FLAG_HIDE_ROUTE_121_TEAM_AQUA_GRUNTS
+	setvar VAR_MT_PYRE_STATE, 1
+	setvar VAR_ROUTE121_STATE, 1
+	setvar VAR_SLATEPORT_CITY_STATE, 2
+	setvar VAR_SLATEPORT_HARBOR_STATE, 2
+	setflag FLAG_HIDE_SLATEPORT_CITY_HARBOR_AQUA_GRUNT
+	setflag FLAG_HIDE_SLATEPORT_CITY_HARBOR_SUBMARINE_SHADOW
+	setflag FLAG_HIDE_AQUA_HIDEOUT_1F_GRUNT_1_BLOCKING_ENTRANCE
+	setflag FLAG_HIDE_AQUA_HIDEOUT_1F_GRUNT_2_BLOCKING_ENTRANCE
+	setflag FLAG_TEAM_AQUA_ESCAPED_IN_SUBMARINE
+	setflag FLAG_HIDE_LILYCOVE_CITY_AQUA_GRUNTS
+	setflag FLAG_HIDE_AQUA_HIDEOUT_GRUNTS
+	setflag FLAG_HIDE_AQUA_HIDEOUT_B2F_SUBMARINE_SHADOW
+	@ skip the space center and let the next plot point be Steven's House.
+	setflag FLAG_DEFEATED_MAGMA_SPACE_CENTER
+	setflag FLAG_HIDE_MOSSDEEP_CITY_STEVENS_HOUSE_STEVEN
+	removeobject 4
+	setflag FLAG_HIDE_MOSSDEEP_CITY_SPACE_CENTER_MAGMA_NOTE
+	clearflag FLAG_HIDE_MOSSDEEP_CITY_STEVENS_HOUSE_STEVEN
+	setvar VAR_STEVENS_HOUSE_STATE, 1
+	setflag FLAG_HIDE_MOSSDEEP_CITY_SCOTT
+AfterKekleon::
 	release
 	end
 
diff --git a/data/maps/RustboroCity_Gym/scripts.inc b/data/maps/RustboroCity_Gym/scripts.inc
index 6d9895fe5..f574d34d4 100644
--- a/data/maps/RustboroCity_Gym/scripts.inc
+++ b/data/maps/RustboroCity_Gym/scripts.inc
@@ -2,7 +2,7 @@ RustboroCity_Gym_MapScripts:: @ 8212F30
 	.byte 0
 
 RustboroCity_Gym_EventScript_Roxanne:: @ 8212F31
-	trainerbattle_single TRAINER_ROXANNE_1, RustboroCity_Gym_Text_RoxanneIntro, RustboroCity_Gym_Text_RoxanneDefeat, RustboroCity_Gym_EventScript_RoxanneDefeated, NO_MUSIC
+    trainerbattle_single TRAINER_ROXANNE_NERFED, RustboroCity_Gym_Text_RoxanneIntro, RustboroCity_Gym_Text_RoxanneDefeat, RustboroCity_Gym_EventScript_RoxanneDefeated, NO_MUSIC
 	specialvar VAR_RESULT, ShouldTryRematchBattle
 	compare VAR_RESULT, TRUE
 	goto_if_eq RustboroCity_Gym_EventScript_RoxanneRematch
@@ -28,10 +28,46 @@ RustboroCity_Gym_EventScript_RoxanneDefeated:: @ 8212F66
 	end
 
 RustboroCity_Gym_EventScript_GiveRockTomb:: @ 8212FA4
+	checkspeedchoice PLOTLESS, PLOT_KEEP
+	goto_if TRUE, RoxanneNoAqualess
+	checkspeedchoice PLOTLESS, PLOT_SEMI
+	goto_if TRUE, RoxanneNoAqualess
+	giveitem ITEM_LETTER
+	@ give pokenav
+	message RustboroCity_DevonCorp_3F_Text_ReceivedPokenav
+	waitfanfare
+	setflag FLAG_SYS_POKENAV_GET
+	setflag FLAG_RECEIVED_POKENAV
+	setflag FLAG_HIDE_RUSTBORO_CITY_POKEMON_SCHOOL_SCOTT
+	setflag FLAG_HAS_MATCH_CALL
+	setflag FLAG_ADDED_MATCH_CALL_TO_POKENAV
+	@ complete the pokenav tutorial
+	setflag FLAG_HIDE_RUSTBORO_CITY_SCIENTIST
+	setvar VAR_RUSTBORO_CITY_STATE, 7
+	@ move plot events up to the museum
+	setflag FLAG_RETURNED_DEVON_GOODS
+	setflag FLAG_HIDE_RUSTBORO_CITY_DEVON_EMPLOYEE_1
+	setvar VAR_RUSTBORO_CITY_STATE, 5 @ i forget why I initially set it to 7 then to 5...
+	setflag 2050 @ get rid of first roxanne rematch
+	setflag FLAG_RECEIVED_POKENAV
+	clearflag FLAG_DEVON_GOODS_STOLEN
+	setflag FLAG_RECOVERED_DEVON_GOODS
+	setvar VAR_BRINEY_HOUSE_STATE, 1
+	setflag FLAG_HIDE_ROUTE_116_WANDAS_BOYFRIEND
+	clearflag FLAG_HIDE_RUSTURF_TUNNEL_WANDAS_BOYFRIEND
+	clearflag FLAG_HIDE_RUSTURF_TUNNEL_WANDA
+	clearflag FLAG_HIDE_BRINEYS_HOUSE_MR_BRINEY	
+	clearflag FLAG_HIDE_BRINEYS_HOUSE_PEEKO
+	setvar VAR_BRINEY_LOCATION, 1
+	clearflag FLAG_HIDE_RUSTBORO_CITY_RIVAL
+	setvar VAR_DEVON_CORP_3F_STATE, 1
+
+RoxanneNoAqualess::
 	giveitem ITEM_TM39
 	compare VAR_RESULT, FALSE
 	goto_if_eq Common_EventScript_ShowBagIsFull
 	setflag FLAG_RECEIVED_TM39
+gTMText_10::
 	msgbox RustboroCity_Gym_Text_ExplainRockTomb, MSGBOX_DEFAULT
 	release
 	end
diff --git a/data/maps/RustboroCity_Mart/scripts.inc b/data/maps/RustboroCity_Mart/scripts.inc
index 063c5b64f..ecb91cda5 100644
--- a/data/maps/RustboroCity_Mart/scripts.inc
+++ b/data/maps/RustboroCity_Mart/scripts.inc
@@ -11,11 +11,12 @@ RustboroCity_Mart_EventScript_Clerk:: @ 8214F06
 	end
 
 RustboroCity_Mart_EventScript_PokemartBasic:: @ 8214F21
-	pokemart RustboroCity_Mart_Pokemart_Basic
+	pokemart RustboroCitySpeedchoice_Mart_Items1
 	msgbox gText_PleaseComeAgain, MSGBOX_DEFAULT
 	release
 	end
 
+	.align 2
 RustboroCity_Mart_Pokemart_Basic: @ 8214F30
 	.2byte ITEM_POKE_BALL
 	.2byte ITEM_POTION
@@ -31,8 +32,25 @@ RustboroCity_Mart_Pokemart_Basic: @ 8214F30
 	release
 	end
 
+	.align 2
+RustboroCitySpeedchoice_Mart_Items1:: @ 8157C00
+	.2byte ITEM_POKE_BALL
+	.2byte ITEM_POTION
+	.2byte ITEM_SUPER_POTION
+	.2byte ITEM_ANTIDOTE
+	.2byte ITEM_PARALYZE_HEAL
+	.2byte ITEM_ESCAPE_ROPE
+	.2byte ITEM_REPEL
+	.2byte ITEM_X_SPEED
+	.2byte ITEM_X_ATTACK
+	.2byte ITEM_X_DEFEND
+	.2byte ITEM_X_SPECIAL
    .2byte ITEM_SUN_STONE
    .2byte ITEM_MOON_STONE
    .2byte ITEM_FIRE_STONE
    .2byte ITEM_THUNDER_STONE
    .2byte ITEM_WATER_STONE
    .2byte ITEM_LEAF_STONE
    .2byte ITEM_DAWN_STONE
    .2byte ITEM_DUSK_STONE
    .2byte ITEM_LEAF_STONE
    .2byte ITEM_SHINY_STONE
    .2byte ITEM_ICE_STONE
	.2byte ITEM_UP_GRADE
    .2byte ITEM_DUBIOUS_DISC
    .2byte ITEM_DRAGON_SCALE
    .2byte ITEM_DEEP_SEA_TOOTH
    .2byte ITEM_DEEP_SEA_SCALE
    .2byte ITEM_METAL_COAT
    .2byte ITEM_KINGS_ROCK
    .2byte ITEM_ELECTIRIZER
    .2byte ITEM_MAGMARIZER
    .2byte ITEM_OVAL_STONE
    .2byte ITEM_PROTECTOR
    .2byte ITEM_RAZOR_CLAW
    .2byte ITEM_RAZOR_FANG
    .2byte ITEM_REAPER_CLOTH
    .2byte ITEM_PRISM_SCALE
+	.2byte ITEM_NONE
+	release
+	end
+
 RustboroCity_Mart_EventScript_PokemartExpanded:: @ 8214F48
-	pokemart RustboroCity_Mart_Pokemart_Expanded
+	pokemart RustboroCitySpeedchoice_Mart_Items2
 	msgbox gText_PleaseComeAgain, MSGBOX_DEFAULT
 	release
 	end
@@ -55,6 +73,25 @@ RustboroCity_Mart_Pokemart_Expanded: @ 8214F58
 	release
 	end
 
+	.align 2
+RustboroCitySpeedchoice_Mart_Items2:: @ 8157C28
+	.2byte ITEM_POKE_BALL
+	.2byte ITEM_TIMER_BALL
+	.2byte ITEM_REPEAT_BALL
+	.2byte ITEM_POTION
+	.2byte ITEM_SUPER_POTION
+	.2byte ITEM_ANTIDOTE
+	.2byte ITEM_PARALYZE_HEAL
+	.2byte ITEM_ESCAPE_ROPE
+	.2byte ITEM_REPEL
+	.2byte ITEM_X_SPEED
+	.2byte ITEM_X_ATTACK
+	.2byte ITEM_X_DEFEND
+	.2byte ITEM_X_SPECIAL
    .2byte ITEM_SUN_STONE
    .2byte ITEM_MOON_STONE
    .2byte ITEM_FIRE_STONE
    .2byte ITEM_THUNDER_STONE
    .2byte ITEM_WATER_STONE
    .2byte ITEM_LEAF_STONE
    .2byte ITEM_DAWN_STONE
    .2byte ITEM_DUSK_STONE
    .2byte ITEM_LEAF_STONE
    .2byte ITEM_SHINY_STONE
    .2byte ITEM_ICE_STONE
	.2byte ITEM_UP_GRADE
    .2byte ITEM_DUBIOUS_DISC
    .2byte ITEM_DRAGON_SCALE
    .2byte ITEM_DEEP_SEA_TOOTH
    .2byte ITEM_DEEP_SEA_SCALE
    .2byte ITEM_METAL_COAT
    .2byte ITEM_KINGS_ROCK
    .2byte ITEM_ELECTIRIZER
    .2byte ITEM_MAGMARIZER
    .2byte ITEM_OVAL_STONE
    .2byte ITEM_PROTECTOR
    .2byte ITEM_RAZOR_CLAW
    .2byte ITEM_RAZOR_FANG
    .2byte ITEM_REAPER_CLOTH
    .2byte ITEM_PRISM_SCALE
+	.2byte ITEM_NONE
+	release
+	end
+
 RustboroCity_Mart_EventScript_PokefanF:: @ 8214F74
 	msgbox RustboroCity_Mart_Text_BuyingHealsInCaseOfShroomish, MSGBOX_NPC
 	end
diff --git a/data/maps/RusturfTunnel/scripts.inc b/data/maps/RusturfTunnel/scripts.inc
index 17a229ab5..a25fbb079 100644
--- a/data/maps/RusturfTunnel/scripts.inc
+++ b/data/maps/RusturfTunnel/scripts.inc
@@ -68,8 +68,15 @@ RusturfTunnel_EventScript_ClearTunnelScene:: @ 822CEAE
 	call_if_eq RusturfTunnel_EventScript_WandasBoyfriendApproachPlayer
 	compare VAR_TEMP_1, 3
 	call_if_eq RusturfTunnel_EventScript_WandasBoyfriendApproachPlayer
+	checkspeedchoice EARLYSURF, SURF_ON
+	goto_if TRUE, Speedchoice_EarlySurf2
 	giveitem ITEM_HM04
 	setflag FLAG_RECEIVED_HM04
+	goto AfterEarlySurf2
+Speedchoice_EarlySurf2::
+	giveitem ITEM_HM03
+	setflag FLAG_RECEIVED_HM03
+AfterEarlySurf2::
 	msgbox RusturfTunnel_Text_ExplainStrength, MSGBOX_DEFAULT
 	closemessage
 	compare VAR_TEMP_1, 1
diff --git a/data/maps/SkyPillar_Outside/scripts.inc b/data/maps/SkyPillar_Outside/scripts.inc
index 2e0495bca..b00caa912 100644
--- a/data/maps/SkyPillar_Outside/scripts.inc
+++ b/data/maps/SkyPillar_Outside/scripts.inc
@@ -35,6 +35,8 @@ SkyPillar_Outside_OnFrame: @ 82392FA
 	.2byte 0
 
 SkyPillar_Outside_EventScript_WallaceScene:: @ 8239304
+	checkspeedchoice PLOTLESS, PLOT_KEEP
+	goto_if FALSE, AfterSkyPillar1
 	lockall
 	applymovement LOCALID_WALLACE, SkyPillar_Outside_Movement_WallaceApproachPlayer
 	waitmovement 0
@@ -89,6 +91,7 @@ SkyPillar_Outside_EventScript_WallaceScene:: @ 8239304
 	clearflag FLAG_HIDE_SOOTOPOLIS_CITY_WALLACE
 	fadescreenswapbuffers FADE_FROM_BLACK
 	releaseall
+AfterSkyPillar1::
 	end
 
 SkyPillar_Outside_Movement_WallaceApproachPlayer: @ 82393D3
diff --git a/data/maps/SlateportCity/scripts.inc b/data/maps/SlateportCity/scripts.inc
index 983ce9796..0b6c2a71d 100644
--- a/data/maps/SlateportCity/scripts.inc
+++ b/data/maps/SlateportCity/scripts.inc
@@ -567,7 +567,7 @@ SlateportCity_EventScript_PowerTMClerk:: @ 81DD1D8
 	faceplayer
 	message gText_HowMayIServeYou
 	waitmessage
-	pokemart SlateportCity_Pokemart_PowerTMs
+	pokemart SlateportCity_Pokemart_Speedchoice
 	msgbox gText_PleaseComeAgain, MSGBOX_DEFAULT
 	release
 	end
@@ -580,6 +580,22 @@ SlateportCity_Pokemart_PowerTMs: @ 81DD1F0
 	release
 	end
 
+    .align 2
+SlateportCity_Pokemart_Speedchoice: @ 81DD1F0
+    .2byte ITEM_TM10
+    .2byte ITEM_TM43
+    .2byte ITEM_SUN_STONE
+    .2byte ITEM_MOON_STONE
+    .2byte ITEM_FIRE_STONE
+    .2byte ITEM_THUNDER_STONE
+    .2byte ITEM_WATER_STONE
+    .2byte ITEM_LEAF_STONE
+    .2byte ITEM_SEA_INCENSE
+    .2byte ITEM_LAX_INCENSE
+    .2byte ITEM_NONE
+    release
+    end
+
 @ Scene with Capt Sterns interview and Team Aqua announcing plans to steal Submarine
 SlateportCity_EventScript_CaptStern:: @ 81DD1F8
 	lockall
diff --git a/data/maps/SlateportCity_BattleTentLobby/scripts.inc b/data/maps/SlateportCity_BattleTentLobby/scripts.inc
index bdc8eb05f..196d7b2b9 100644
--- a/data/maps/SlateportCity_BattleTentLobby/scripts.inc
+++ b/data/maps/SlateportCity_BattleTentLobby/scripts.inc
@@ -207,6 +207,7 @@ SlateportCity_BattleTentLobby_EventScript_TormentGiver:: @ 8208A3D
 	compare VAR_RESULT, FALSE
 	goto_if_eq Common_EventScript_ShowBagIsFull
 	setflag FLAG_RECEIVED_TM41
+gTMText_12::
 	msgbox SlateportCity_BattleTentLobby_Text_ExplainTorment, MSGBOX_DEFAULT
 	release
 	end
diff --git a/data/maps/SootopolisCity/map.json b/data/maps/SootopolisCity/map.json
index d4c71db61..1df3632d9 100644
--- a/data/maps/SootopolisCity/map.json
+++ b/data/maps/SootopolisCity/map.json
@@ -12,7 +12,7 @@
   "allow_running": true,
   "show_map_name": true,
   "battle_scene": "MAP_BATTLE_SCENE_NORMAL",
-  "connections": [],
+  "connections": 0,
   "object_events": [
     {
       "graphics_id": "OBJ_EVENT_GFX_EXPERT_M",
@@ -25,7 +25,7 @@
       "trainer_type": "TRAINER_TYPE_NONE",
       "trainer_sight_or_berry_tree_id": "0",
       "script": "SootopolisCity_EventScript_CaveOfOriginExpert",
-      "flag": "0"
+      "flag": "FLAG_HIDE_SOOTOPOLIS_CITY_OLD_MAN_EXPERT"
     },
     {
       "graphics_id": "OBJ_EVENT_GFX_WOMAN_4",
@@ -340,9 +340,18 @@
       "elevation": 0,
       "dest_map": "MAP_SOOTOPOLIS_CITY_MYSTERY_EVENTS_HOUSE_1F",
       "dest_warp_id": 0
+    },
+    {
+      "x": 36,
+      "y": 18,
+      "elevation": 0,
+      "dest_map": "MAP_CAVE_OF_ORIGIN_UNUSED_RUBY_SAPPHIRE_MAP1",
+      "dest_warp_id": 1
     }
   ],
-  "coord_events": [],
+  "coord_events": [
+
+  ],
   "bg_events": [
     {
       "type": "sign",
diff --git a/data/maps/SootopolisCity_Gym_1F/scripts.inc b/data/maps/SootopolisCity_Gym_1F/scripts.inc
index ae5bfd108..a3820894c 100644
--- a/data/maps/SootopolisCity_Gym_1F/scripts.inc
+++ b/data/maps/SootopolisCity_Gym_1F/scripts.inc
@@ -94,35 +94,37 @@ SootopolisCity_Gym_1F_EventScript_Juan:: @ 8224F44
 	end
 
 SootopolisCity_Gym_1F_EventScript_JuanDefeated:: @ 8224F82
-	message SootopolisCity_Gym_1F_Text_ReceivedRainBadge
-	waitmessage
-	call Common_EventScript_PlayGymBadgeFanfare
-	msgbox SootopolisCity_Gym_1F_Text_ExplainRainBadgeTakeThis, MSGBOX_DEFAULT
-	setflag FLAG_DEFEATED_SOOTOPOLIS_GYM
-	setflag FLAG_BADGE08_GET
-	setflag FLAG_HIDE_SOOTOPOLIS_CITY_RESIDENTS
-	setflag FLAG_HIDE_SOOTOPOLIS_CITY_STEVEN
-	setflag FLAG_HIDE_SOOTOPOLIS_CITY_WALLACE
-	setvar VAR_SOOTOPOLIS_CITY_STATE, 6
-	clearflag FLAG_HIDE_SOOTOPOLIS_CITY_MAN_1
-	setvar VAR_0x8008, 8
-	call Common_EventScript_SetGymTrainers
-	call SootopolisCity_Gym_1F_EventScript_GiveWaterPulse
-	closemessage
-	delay 30
-	playfanfare MUS_REGISTER_MATCH_CALL
-	msgbox SootopolisCity_Gym_1F_Text_RegisteredJuan, MSGBOX_DEFAULT
-	waitfanfare
-	closemessage
-	delay 30
-	setflag FLAG_ENABLE_JUAN_MATCH_CALL
-	release
-	end
+    message SootopolisCity_Gym_1F_Text_ReceivedRainBadge
+    waitmessage
+    call Common_EventScript_PlayGymBadgeFanfare
+    msgbox SootopolisCity_Gym_1F_Text_ExplainRainBadgeTakeThis, MSGBOX_DEFAULT
+    setflag FLAG_DEFEATED_SOOTOPOLIS_GYM
+    setflag FLAG_BADGE08_GET
+    setflag FLAG_HIDE_SOOTOPOLIS_CITY_RESIDENTS
+    setflag FLAG_HIDE_SOOTOPOLIS_CITY_STEVEN
+    setflag FLAG_HIDE_SOOTOPOLIS_CITY_WALLACE
+    setflag FLAG_HIDE_SOOTOPOLIS_CITY_OLD_MAN_EXPERT @ SPEEDCHOICE (Hide old man blocking Cave of Origin after Juan defeat.)
+    setvar VAR_SOOTOPOLIS_CITY_STATE, 6
+    clearflag FLAG_HIDE_SOOTOPOLIS_CITY_MAN_1
+    setvar VAR_0x8008, 8
+    call Common_EventScript_SetGymTrainers
+    call SootopolisCity_Gym_1F_EventScript_GiveWaterPulse
+    closemessage
+    delay 30
+    playfanfare MUS_REGISTER_MATCH_CALL
+    msgbox SootopolisCity_Gym_1F_Text_RegisteredJuan, MSGBOX_DEFAULT
+    waitfanfare
+    closemessage
+    delay 30
+    setflag FLAG_ENABLE_JUAN_MATCH_CALL
+    release
+    end
 
 SootopolisCity_Gym_1F_EventScript_GiveWaterPulse:: @ 8224FD4
 	giveitem ITEM_TM03
 	compare VAR_RESULT, FALSE
 	goto_if_eq Common_EventScript_BagIsFull
+gTMText_1::
 	msgbox SootopolisCity_Gym_1F_Text_ExplainWaterPulse, MSGBOX_DEFAULT
 	setflag FLAG_RECEIVED_TM03
 	return
diff --git a/data/maps/SootopolisCity_House1/scripts.inc b/data/maps/SootopolisCity_House1/scripts.inc
index 90a429c2c..286d68c8a 100644
--- a/data/maps/SootopolisCity_House1/scripts.inc
+++ b/data/maps/SootopolisCity_House1/scripts.inc
@@ -10,6 +10,7 @@ SootopolisCity_House1_EventScript_BrickBreakBlackBelt:: @ 822694D
 	compare VAR_RESULT, FALSE
 	goto_if_eq Common_EventScript_ShowBagIsFull
 	setflag FLAG_RECEIVED_TM31
+gTMText_8::
 	msgbox SootopolisCity_House1_Text_ExplainBrickBreak, MSGBOX_DEFAULT
 	release
 	end
diff --git a/data/maps/map_groups.json b/data/maps/map_groups.json
index 4201e814f..d37464d53 100644
--- a/data/maps/map_groups.json
+++ b/data/maps/map_groups.json
@@ -1,4 +1,5 @@
 {
+  "layouts_table_label": "gMapLayouts",
   "group_order": [
     "gMapGroup0",
     "gMapGroup1",
@@ -429,7 +430,15 @@
     "TerraCave_Entrance",
     "TerraCave_End",
     "AlteringCave",
-    "MeteorFalls_StevensCave"
+    "MeteorFalls_StevensCave",
+    "AlteringCave_Cave1",
+    "AlteringCave_Cave2",
+    "AlteringCave_Cave3",
+    "AlteringCave_Cave4",
+    "AlteringCave_Cave5",
+    "AlteringCave_Cave6",
+    "AlteringCave_Cave7",
+    "AlteringCave_Cave8"
   ],
   "gMapGroup25": [
     "SecretBase_RedCave1",
@@ -620,72 +629,5 @@
   ],
   "gMapGroup33": [
     "Route124_DivingTreasureHuntersHouse"
-  ],
-  "connections_include_order": [
-    "LittlerootTown",
-    "OldaleTown",
-    "DewfordTown",
-    "LavaridgeTown",
-    "FallarborTown",
-    "VerdanturfTown",
-    "PacifidlogTown",
-    "PetalburgCity",
-    "SlateportCity",
-    "MauvilleCity",
-    "RustboroCity",
-    "FortreeCity",
-    "LilycoveCity",
-    "MossdeepCity",
-    "SootopolisCity",
-    "EverGrandeCity",
-    "Route101",
-    "Route102",
-    "Route103",
-    "Route104",
-    "Route105",
-    "Route106",
-    "Route107",
-    "Route108",
-    "Route109",
-    "Route110",
-    "Route111",
-    "Route112",
-    "Route113",
-    "Route114",
-    "Route115",
-    "Route116",
-    "Route117",
-    "Route118",
-    "Route119",
-    "Route120",
-    "Route121",
-    "Route122",
-    "Route123",
-    "Route124",
-    "Route125",
-    "Route126",
-    "Route127",
-    "Route128",
-    "Route129",
-    "Route130",
-    "Route131",
-    "Route132",
-    "Route133",
-    "Route134",
-    "Underwater_Route105",
-    "Underwater_Route124",
-    "Underwater_Route125",
-    "Underwater_Route126",
-    "Underwater_Route127",
-    "Underwater_Route128",
-    "Underwater_Route129",
-    "SafariZone_Northwest",
-    "SafariZone_North",
-    "SafariZone_Southwest",
-    "SafariZone_South",
-    "SafariZone_Northeast",
-    "SafariZone_Southeast",
-    "BattleFrontier_OutsideWest",
-    "BattleFrontier_OutsideEast"
   ]
 }
diff --git a/data/rando_cv.s b/data/rando_cv.s
new file mode 100644
index 000000000..dbe937cee
--- /dev/null
+++ b/data/rando_cv.s
@@ -0,0 +1,8 @@
+	.include "asm/macros.inc"
+	.include "constants/constants.inc"
+
+	.section .rodata
+
+    .align 4
+gRandomizerCheckValue::
+    .4byte 0
diff --git a/data/script_cmd_table.inc b/data/script_cmd_table.inc
index 7edb5c4b7..5d39cb05f 100644
--- a/data/script_cmd_table.inc
+++ b/data/script_cmd_table.inc
@@ -227,6 +227,7 @@ gScriptCmdTable:: @ 81DB67C
 	.4byte ScrCmd_warpsootopolislegend      @ 0xe0
 	.4byte ScrCmd_buffercontesttype         @ 0xe1
 	.4byte ScrCmd_bufferitemnameplural      @ 0xe2
+    .4byte ScrCmd_checkspeedchoice          @ 0xe3 speedchoice addition
 
 gScriptCmdTableEnd:: @ 81DBA08
 	.4byte ScrCmd_nop
diff --git a/data/scripts/hall_of_fame.inc b/data/scripts/hall_of_fame.inc
index 91a88f348..c2680bac6 100644
--- a/data/scripts/hall_of_fame.inc
+++ b/data/scripts/hall_of_fame.inc
@@ -14,8 +14,6 @@ EverGrandeCity_HallOfFame_EventScript_SetGameClearFlags:: @ 82717C1
 	clearflag FLAG_HIDE_VICTORY_ROAD_EXIT_WALLY
 	clearflag FLAG_HIDE_SLATEPORT_CITY_HARBOR_SS_TIDAL
 	clearflag FLAG_HIDE_LILYCOVE_HARBOR_SSTIDAL
-	setflag FLAG_HIDE_SAFARI_ZONE_SOUTH_CONSTRUCTION_WORKERS
-	clearflag FLAG_HIDE_SAFARI_ZONE_SOUTH_EAST_EXPANSION
 	setflag FLAG_HIDE_LILYCOVE_CITY_RIVAL
 	special UpdateTrainerFanClubGameClear
 	call_if_unset FLAG_RECEIVED_SS_TICKET, EverGrandeCity_HallOfFame_EventScript_ReadyReceiveSSTicketEvent
diff --git a/data/scripts/move_tutors.inc b/data/scripts/move_tutors.inc
index a7807ce51..788ef0a5a 100644
--- a/data/scripts/move_tutors.inc
+++ b/data/scripts/move_tutors.inc
@@ -1,13 +1,17 @@
 SlateportCity_PokemonFanClub_EventScript_SwaggerTutor:: @ 82C7F16
 	lock
 	faceplayer
+	checkspeedchoice EASY_FALSE_SWIPE, EASY_FALSE_SWIPE_TUTOR
+	goto_if TRUE, SpeedchoiceSlateportEasyFalseSwipe
 	goto_if_set FLAG_MOVE_TUTOR_TAUGHT_SWAGGER, MoveTutor_EventScript_SwaggerTaught
+gMoveTutorText_20::
 	msgbox MoveTutor_Text_SwaggerTeach, MSGBOX_YESNO
 	compare VAR_RESULT, NO
 	goto_if_eq MoveTutor_EventScript_SwaggerDeclined
 	call MoveTutor_EventScript_CanOnlyBeLearnedOnce
 	compare VAR_RESULT, NO
 	goto_if_eq MoveTutor_EventScript_SwaggerDeclined
+gMoveTutorText_21::
 	msgbox MoveTutor_Text_SwaggerWhichMon, MSGBOX_DEFAULT
 	setvar VAR_0x8005, TUTOR_MOVE_SWAGGER
 	call MoveTutor_EventScript_OpenPartyMenu
@@ -17,12 +21,26 @@ SlateportCity_PokemonFanClub_EventScript_SwaggerTutor:: @ 82C7F16
 	goto MoveTutor_EventScript_SwaggerTaught
 	end
 
+SpeedchoiceSlateportEasyFalseSwipe:: @ SPEEDCHOICE
+	msgbox SlateportCity_PokemonFanClub_Text_SPEEDCHOICE_FALSE_SWIPE, MSGBOX_YESNO
+	compare VAR_RESULT, 0
+	goto_if_eq MoveTutor_EventScript_SwaggerDeclined
+	msgbox SlateportCity_PokemonFanClub_Text_SPEEDCHOICE_FALSE_SWIPE2, MSGBOX_DEFAULT
+	setvar VAR_0x8005, TUTOR_MOVE_FALSE_SWIPE
+	call MoveTutor_EventScript_OpenPartyMenu
+	compare VAR_RESULT, 0
+	goto_if_eq MoveTutor_EventScript_SwaggerDeclined
+	msgbox SlateportCity_PokemonFanClub_Text_SPEEDCHOICE_FALSE_SWIPE3, MSGBOX_DEFAULT
+	release
+	end
+
 MoveTutor_EventScript_SwaggerDeclined:: @ 82C7F6A
 	msgbox MoveTutor_Text_SwaggerDeclined, MSGBOX_DEFAULT
 	release
 	end
 
 MoveTutor_EventScript_SwaggerTaught:: @ 82C7F74
+gMoveTutorText_22::
 	msgbox MoveTutor_Text_SwaggerTaught, MSGBOX_DEFAULT
 	release
 	end
@@ -31,6 +49,7 @@ MauvilleCity_EventScript_RolloutTutor:: @ 82C7F7E
 	lock
 	faceplayer
 	goto_if_set FLAG_MOVE_TUTOR_TAUGHT_ROLLOUT, MoveTutor_EventScript_RolloutTaught
+gMoveTutorText_14::
 	msgbox MoveTutor_Text_RolloutTeach, MSGBOX_YESNO
 	compare VAR_RESULT, NO
 	goto_if_eq MoveTutor_EventScript_RolloutDeclined
@@ -60,6 +79,7 @@ VerdanturfTown_PokemonCenter_1F_EventScript_FuryCutterTutor:: @ 82C7FE6
 	lock
 	faceplayer
 	goto_if_set FLAG_MOVE_TUTOR_TAUGHT_FURY_CUTTER, MoveTutor_EventScript_FuryCutterTaught
+gMoveTutorText_8::
 	msgbox MoveTutor_Text_FuryCutterTeach, MSGBOX_YESNO
 	compare VAR_RESULT, NO
 	goto_if_eq MoveTutor_EventScript_FuryCutterDeclined
@@ -89,6 +109,7 @@ LavaridgeTown_House_EventScript_MimicTutor:: @ 82C804E
 	lock
 	faceplayer
 	goto_if_set FLAG_MOVE_TUTOR_TAUGHT_MIMIC, MoveTutor_EventScript_MimicTaught
+gMoveTutorText_11::
 	msgbox MoveTutor_MimicTeach, MSGBOX_YESNO
 	compare VAR_RESULT, NO
 	goto_if_eq MoveTutor_EventScript_MimicDeclined
@@ -105,11 +126,13 @@ LavaridgeTown_House_EventScript_MimicTutor:: @ 82C804E
 	end
 
 MoveTutor_EventScript_MimicDeclined:: @ 82C80A2
+gMoveTutorText_13::
 	msgbox MoveTutor_MimicDeclined, MSGBOX_DEFAULT
 	release
 	end
 
 MoveTutor_EventScript_MimicTaught:: @ 82C80AC
+gMoveTutorText_12::
 	msgbox MoveTutor_Text_MimicTaught, MSGBOX_DEFAULT
 	release
 	end
@@ -118,6 +141,7 @@ FallarborTown_Mart_EventScript_MetronomeTutor:: @ 82C80B6
 	lock
 	faceplayer
 	goto_if_set FLAG_MOVE_TUTOR_TAUGHT_METRONOME, MoveTutor_EventScript_MetronomeTaught
+gMoveTutorText_9::
 	msgbox MoveTutor_Text_MetronomeTeach, MSGBOX_YESNO
 	compare VAR_RESULT, NO
 	goto_if_eq MoveTutor_EventScript_MetronomeDeclined
@@ -139,6 +163,7 @@ MoveTutor_EventScript_MetronomeDeclined:: @ 82C810A
 	end
 
 MoveTutor_EventScript_MetronomeTaught:: @ 82C8114
+gMoveTutorText_10::
 	msgbox MoveTutor_Text_MetronomeTaught, MSGBOX_DEFAULT
 	release
 	end
@@ -147,6 +172,7 @@ FortreeCity_House2_EventScript_SleepTalkTutor:: @ 82C811E
 	lock
 	faceplayer
 	goto_if_set FLAG_MOVE_TUTOR_TAUGHT_SLEEP_TALK, MoveTutor_EventScript_SleepTalkTaught
+gMoveTutorText_15::
 	msgbox MoveTutor_Text_SleepTalkTeach, MSGBOX_YESNO
 	compare VAR_RESULT, NO
 	goto_if_eq MoveTutor_EventScript_SleepTalkDeclined
@@ -168,6 +194,7 @@ MoveTutor_EventScript_SleepTalkDeclined:: @ 82C8172
 	end
 
 MoveTutor_EventScript_SleepTalkTaught:: @ 82C817C
+gMoveTutorText_16::
 	msgbox MoveTutor_Text_SleepTalkTaught, MSGBOX_DEFAULT
 	release
 	end
@@ -176,12 +203,14 @@ LilycoveCity_DepartmentStoreRooftop_EventScript_SubstituteTutor:: @ 82C8186
 	lock
 	faceplayer
 	goto_if_set FLAG_MOVE_TUTOR_TAUGHT_SUBSTITUTE, MoveTutor_EventScript_SubstituteTaught
+gMoveTutorText_17::
 	msgbox MoveTutor_Text_SubstituteTeach, MSGBOX_YESNO
 	compare VAR_RESULT, NO
 	goto_if_eq MoveTutor_EventScript_SubstituteDeclined
 	call MoveTutor_EventScript_CanOnlyBeLearnedOnce
 	compare VAR_RESULT, NO
 	goto_if_eq MoveTutor_EventScript_SubstituteDeclined
+gMoveTutorText_18::
 	msgbox MoveTutor_Text_SubstituteWhichMon, MSGBOX_DEFAULT
 	setvar VAR_0x8005, TUTOR_MOVE_SUBSTITUTE
 	call MoveTutor_EventScript_OpenPartyMenu
@@ -192,6 +221,7 @@ LilycoveCity_DepartmentStoreRooftop_EventScript_SubstituteTutor:: @ 82C8186
 	end
 
 MoveTutor_EventScript_SubstituteDeclined:: @ 82C81DA
+gMoveTutorText_19::
 	msgbox MoveTutor_Text_SubstituteDeclined, MSGBOX_DEFAULT
 	release
 	end
@@ -205,6 +235,7 @@ MossdeepCity_EventScript_DynamicPunchTutor:: @ 82C81EE
 	lock
 	faceplayer
 	goto_if_set FLAG_MOVE_TUTOR_TAUGHT_DYNAMICPUNCH, MoveTutor_EventScript_DynamicPunchTaught
+gMoveTutorText_3::
 	msgbox MoveTutor_Text_DynamicPunchTeach, MSGBOX_YESNO
 	compare VAR_RESULT, NO
 	goto_if_eq MoveTutor_EventScript_DynamicPunchDeclined
@@ -226,6 +257,7 @@ MoveTutor_EventScript_DynamicPunchDeclined:: @ 82C8242
 	end
 
 MoveTutor_EventScript_DynamicPunchTaught:: @ 82C824C
+gMoveTutorText_4::
 	msgbox MoveTutor_Text_DynamicPunchTaught, MSGBOX_DEFAULT
 	release
 	end
@@ -234,12 +266,14 @@ SootopolisCity_PokemonCenter_1F_EventScript_DoubleEdgeTutor:: @ 82C8256
 	lock
 	faceplayer
 	goto_if_set FLAG_MOVE_TUTOR_TAUGHT_DOUBLE_EDGE, MoveTutor_EventScript_DoubleEdgeTaught
+gMoveTutorText_1::
 	msgbox MoveTutor_Text_DoubleEdgeTeach, MSGBOX_YESNO
 	compare VAR_RESULT, NO
 	goto_if_eq MoveTutor_EventScript_DoubleEdgeDeclined
 	call MoveTutor_EventScript_CanOnlyBeLearnedOnce
 	compare VAR_RESULT, NO
 	goto_if_eq MoveTutor_EventScript_DoubleEdgeDeclined
+gMoveTutorText_2::
 	msgbox MoveTutor_Text_DoubleEdgeWhichMon, MSGBOX_DEFAULT
 	setvar VAR_0x8005, TUTOR_MOVE_DOUBLE_EDGE
 	call MoveTutor_EventScript_OpenPartyMenu
@@ -263,12 +297,14 @@ PacifidlogTown_PokemonCenter_1F_EventScript_ExplosionTutor:: @ 82C82BE
 	lock
 	faceplayer
 	goto_if_set FLAG_MOVE_TUTOR_TAUGHT_EXPLOSION, MoveTutor_EventScript_ExplosionTaught
+gMoveTutorText_5::
 	msgbox MoveTutor_Text_ExplosionTeach, MSGBOX_YESNO
 	compare VAR_RESULT, NO
 	goto_if_eq MoveTutor_EventScript_ExplosionDeclined
 	call MoveTutor_EventScript_CanOnlyBeLearnedOnce
 	compare VAR_RESULT, NO
 	goto_if_eq MoveTutor_EventScript_ExplosionDeclined
+gMoveTutorText_6::
 	msgbox MoveTutor_Text_ExplosionWhichMon, MSGBOX_DEFAULT
 	setvar VAR_0x8005, TUTOR_MOVE_EXPLOSION
 	call MoveTutor_EventScript_OpenPartyMenu
@@ -284,6 +320,7 @@ MoveTutor_EventScript_ExplosionDeclined:: @ 82C8312
 	end
 
 MoveTutor_EventScript_ExplosionTaught:: @ 82C831C
+gMoveTutorText_7::
 	msgbox MoveTutor_Text_ExplosionTaught, MSGBOX_DEFAULT
 	release
 	end
@@ -298,3 +335,13 @@ MoveTutor_EventScript_OpenPartyMenu:: @ 82C8326
 MoveTutor_EventScript_CanOnlyBeLearnedOnce:: @ 82C832D
 	msgbox MoveTutor_Text_ThisMoveCanOnlyBeLearnedOnce, MSGBOX_YESNO
 	return
+
+SlateportCity_PokemonFanClub_Text_SPEEDCHOICE_FALSE_SWIPE: @ SPEEDCHOICE
+	.string "Want me to teach you FALSE SWIPE?$"
+
+SlateportCity_PokemonFanClub_Text_SPEEDCHOICE_FALSE_SWIPE2: @ SPEEDCHOICE
+	.string "All right, which POKéMON wants to\n"
+	.string "learn how to FALSE SWIPE?$"
+
+SlateportCity_PokemonFanClub_Text_SPEEDCHOICE_FALSE_SWIPE3: @ SPEECHOICE
+	.string "Time for some easy catching.$"
diff --git a/data/scripts/new_game.inc b/data/scripts/new_game.inc
index 77102a001..493a7dfac 100644
--- a/data/scripts/new_game.inc
+++ b/data/scripts/new_game.inc
@@ -272,5 +272,6 @@ EventScript_ResetAllMapFlags:: @ 82715DE
 	setflag FLAG_HIDE_EVER_GRANDE_POKEMON_CENTER_1F_SCOTT
 	setflag FLAG_HIDE_SKY_PILLAR_WALLACE
 	setflag FLAG_HIDE_RAYQUAZA_SKY_TOWER_SUMMIT
+    setflag FLAG_HIDE_ROUTE_120_STEVEN @ SPEEDCHOICE (Steven object after Fortree)
 	call EventScript_ResetAllBerries
 	end
diff --git a/gflib/text.c b/gflib/text.c
index 4cbad1376..10b3e962c 100644
--- a/gflib/text.c
+++ b/gflib/text.c
@@ -11,6 +11,7 @@
 #include "blit.h"
 #include "menu.h"
 #include "dynamic_placeholder_text_util.h"
+#include "speedchoice.h"
 
 EWRAM_DATA struct TextPrinter gTempTextPrinter = {0};
 EWRAM_DATA struct TextPrinter gTextPrinters[NUM_TEXT_PRINTERS] = {0};
@@ -50,7 +51,7 @@ const u8 gDarkDownArrowTiles[] = INCBIN_U8("graphics/fonts/down_arrow_RS.4bpp");
 const u8 gUnusedFRLGBlankedDownArrow[] = INCBIN_U8("graphics/fonts/unused_frlg_blanked_down_arrow.4bpp");
 const u8 gUnusedFRLGDownArrow[] = INCBIN_U8("graphics/fonts/unused_frlg_down_arrow.4bpp");
 const u8 gDownArrowYCoords[] = { 0x0, 0x1, 0x2, 0x1 };
-const u8 gWindowVerticalScrollSpeeds[] = { 0x1, 0x2, 0x4, 0x0 };
+const u8 gWindowVerticalScrollSpeeds[] = { 0x1, 0x2, 0x4, 0x4 };
 
 const struct GlyphWidthFunc gGlyphWidthFuncs[] =
 {
@@ -209,32 +210,53 @@ bool16 AddTextPrinter(struct TextPrinterTemplate *printerTemplate, u8 speed, voi
     return TRUE;
 }
 
+EWRAM_DATA u32 gMyDebugTextVal = 0;
+
+// -----------------------------------------
+// SPEEDCHOICE CHANGE
+// -----------------------------------------
+// Change: Instant Text used to be checked here, but is default.
 void RunTextPrinters(void)
 {
     int i;
+    u16 temp;
+    bool32 isInstantText = (gSaveBlock2Ptr->optionsTextSpeed == OPTIONS_TEXT_SPEED_INST); // force correct result. this is dumb, i know.
 
-    if (gUnknown_03002F84 == 0)
+    do
     {
-        for (i = 0; i < NUM_TEXT_PRINTERS; ++i)
+    	int numEmpty = 0;
+        if (gUnknown_03002F84 == 0)
         {
-            if (gTextPrinters[i].active)
+            for (i = 0; i < 0x20; ++i)
             {
-                u16 temp = RenderFont(&gTextPrinters[i]);
-                switch (temp)
+                if (gTextPrinters[i].active)
                 {
-                case 0:
-                    CopyWindowToVram(gTextPrinters[i].printerTemplate.windowId, 2);
-                case 3:
-                    if (gTextPrinters[i].callback != 0)
-                        gTextPrinters[i].callback(&gTextPrinters[i].printerTemplate, temp);
-                    break;
-                case 1:
-                    gTextPrinters[i].active = 0;
-                    break;
+                    u16 temp = RenderFont(&gTextPrinters[i]);
+                    switch (temp)
+                    {
+                    case 0:
+                        CopyWindowToVram(gTextPrinters[i].printerTemplate.windowId, 2);
+                        if (gTextPrinters[i].callback != 0)
+                            gTextPrinters[i].callback(&gTextPrinters[i].printerTemplate, temp);
+                        break;
+                    case 3:
+                        if (gTextPrinters[i].callback != 0)
+                            gTextPrinters[i].callback(&gTextPrinters[i].printerTemplate, temp);
+                        isInstantText = FALSE; break;
+                    case 1:
+                        gTextPrinters[i].active = 0;
+                        return;
+                    }
+                }
+                else
+                {
+                    numEmpty++;
                 }
             }
+            if(numEmpty == 0x20)
+                return;
         }
-    }
+    } while(isInstantText);
 }
 
 bool16 IsTextPrinterActive(u8 id)
@@ -765,7 +787,7 @@ bool16 TextPrinterWaitWithDownArrow(struct TextPrinter *textPrinter)
     else
     {
         TextPrinterDrawDownArrow(textPrinter);
-        if (JOY_NEW(A_BUTTON | B_BUTTON))
+        if ((JOY_HELD(A_BUTTON | B_BUTTON) && 1 /*CheckSpeedchoiceOption(INSTANTTEXT, IT_ON) == TRUE*/) || JOY_NEW(A_BUTTON | B_BUTTON))
         {
             result = TRUE;
             PlaySE(SE_SELECT);
@@ -783,7 +805,7 @@ bool16 TextPrinterWait(struct TextPrinter *textPrinter)
     }
     else
     {
-        if (JOY_NEW(A_BUTTON | B_BUTTON))
+        if ((JOY_HELD(A_BUTTON | B_BUTTON) && 1 /*CheckSpeedchoiceOption(INSTANTTEXT, IT_ON) == TRUE*/) || JOY_NEW(A_BUTTON | B_BUTTON))
         {
             result = TRUE;
             PlaySE(SE_SELECT);
diff --git a/graphics/items/icon_palettes/done_button.pal b/graphics/items/icon_palettes/done_button.pal
new file mode 100644
index 000000000..c204ffb37
--- /dev/null
+++ b/graphics/items/icon_palettes/done_button.pal
@@ -0,0 +1,19 @@
+JASC-PAL
+0100
+16
+255 255 255
+57 57 57
+189 189 189
+127 127 127
+254 254 254
+255 65 41
+0 0 0
+0 0 0
+0 0 0
+0 0 0
+0 0 0
+0 0 0
+0 0 0
+0 0 0
+0 0 0
+0 0 0
diff --git a/graphics/items/icons/done_button.png b/graphics/items/icons/done_button.png
new file mode 100644
index 000000000..11592bb6b
Binary files /dev/null and b/graphics/items/icons/done_button.png differ
diff --git a/graphics/title_screen/emerald_version.png b/graphics/title_screen/emerald_version.png
index 2e8b32da9..1de94ba37 100644
Binary files a/graphics/title_screen/emerald_version.png and b/graphics/title_screen/emerald_version.png differ
diff --git a/include/constants/flags.h b/include/constants/flags.h
index 9be269105..0fbc96a79 100644
--- a/include/constants/flags.h
+++ b/include/constants/flags.h
@@ -1216,7 +1216,7 @@
 #define FLAG_ITEM_SAFARI_ZONE_NORTH_EAST_NUGGET                     0x491
 #define FLAG_ITEM_SAFARI_ZONE_SOUTH_EAST_BIG_PEARL                  0x492
 
-#define FLAG_UNUSED_0x493                                           0x493 // Unused Flag
+#define FLAG_HIDE_SOOTOPOLIS_CITY_OLD_MAN_EXPERT                    0x493 // SPEEDCHOICE (previously unused flag, repurposed to hide the old man blocking the Cave of Origin entrance after Juan.)
 #define FLAG_UNUSED_0x494                                           0x494 // Unused Flag
 #define FLAG_UNUSED_0x495                                           0x495 // Unused Flag
 #define FLAG_UNUSED_0x496                                           0x496 // Unused Flag
diff --git a/include/constants/global.h b/include/constants/global.h
index 55830ae8b..de96ca319 100644
--- a/include/constants/global.h
+++ b/include/constants/global.h
@@ -100,6 +100,7 @@
 #define OPTIONS_TEXT_SPEED_SLOW 0
 #define OPTIONS_TEXT_SPEED_MID 1
 #define OPTIONS_TEXT_SPEED_FAST 2
+#define OPTIONS_TEXT_SPEED_INST 3
 
 #define OPTIONS_SOUND_MONO 0
 #define OPTIONS_SOUND_STEREO 1
diff --git a/include/constants/items.h b/include/constants/items.h
index 95c6aacfe..e51d3e7cf 100644
--- a/include/constants/items.h
+++ b/include/constants/items.h
@@ -463,8 +463,9 @@
 // Emerald
 #define ITEM_MAGMA_EMBLEM 375
 #define ITEM_OLD_SEA_MAP 376
+#define ITEM_DONE_BUTTON 377
 
-#define ITEMS_COUNT 377
+#define ITEMS_COUNT 378
 #define ITEM_FIELD_ARROW ITEMS_COUNT
 
 #define FIRST_BERRY_INDEX             ITEM_CHERI_BERRY
diff --git a/include/constants/layouts.h b/include/constants/layouts.h
index 9d5e877b0..abe8f1c30 100755
--- a/include/constants/layouts.h
+++ b/include/constants/layouts.h
@@ -446,5 +446,13 @@
 #define LAYOUT_SOOTOPOLIS_CITY_MYSTERY_EVENTS_HOUSE_1F 439
 #define LAYOUT_SOOTOPOLIS_CITY_MYSTERY_EVENTS_HOUSE_B1F 440
 #define LAYOUT_SOOTOPOLIS_CITY_MYSTERY_EVENTS_HOUSE_1F_STAIRS_UNBLOCKED 441
+#define LAYOUT_ALTERING_CAVE_CAVE1 442
+#define LAYOUT_ALTERING_CAVE_CAVE2 443
+#define LAYOUT_ALTERING_CAVE_CAVE3 444
+#define LAYOUT_ALTERING_CAVE_CAVE4 445
+#define LAYOUT_ALTERING_CAVE_CAVE5 446
+#define LAYOUT_ALTERING_CAVE_CAVE6 447
+#define LAYOUT_ALTERING_CAVE_CAVE7 448
+#define LAYOUT_ALTERING_CAVE_CAVE8 449
 
 #endif // GUARD_CONSTANTS_LAYOUTS_H
diff --git a/include/constants/map_groups.h b/include/constants/map_groups.h
index 69355635b..a18add557 100755
--- a/include/constants/map_groups.h
+++ b/include/constants/map_groups.h
@@ -400,6 +400,14 @@
 #define MAP_TERRA_CAVE_END                           (105 | (24 << 8))
 #define MAP_ALTERING_CAVE                            (106 | (24 << 8))
 #define MAP_METEOR_FALLS_STEVENS_CAVE                (107 | (24 << 8))
+#define MAP_ALTERING_CAVE_CAVE1                      (108 | (24 << 8))
+#define MAP_ALTERING_CAVE_CAVE2                      (109 | (24 << 8))
+#define MAP_ALTERING_CAVE_CAVE3                      (110 | (24 << 8))
+#define MAP_ALTERING_CAVE_CAVE4                      (111 | (24 << 8))
+#define MAP_ALTERING_CAVE_CAVE5                      (112 | (24 << 8))
+#define MAP_ALTERING_CAVE_CAVE6                      (113 | (24 << 8))
+#define MAP_ALTERING_CAVE_CAVE7                      (114 | (24 << 8))
+#define MAP_ALTERING_CAVE_CAVE8                      (115 | (24 << 8))
 
 // Map Group 25
 #define MAP_SECRET_BASE_RED_CAVE1           (0 | (25 << 8))
diff --git a/include/constants/opponents.h b/include/constants/opponents.h
index c9cf9239d..6c1cf5805 100644
--- a/include/constants/opponents.h
+++ b/include/constants/opponents.h
@@ -856,6 +856,7 @@
 #define TRAINER_LEAF                        852
 #define TRAINER_BRENDAN_PLACEHOLDER         853
 #define TRAINER_MAY_PLACEHOLDER             854
+#define TRAINER_ROXANNE_NERFED              855
 
 // NOTE: Because each Trainer uses a flag to determine when they are defeated, there is only space for 9 additional trainers before trainer flag space overflows
 //       More space can be made by shifting flags around in constants/flags.h or changing how trainer flags are handled
diff --git a/include/constants/party_menu.h b/include/constants/party_menu.h
index 7953967ed..0ec1378a5 100644
--- a/include/constants/party_menu.h
+++ b/include/constants/party_menu.h
@@ -42,6 +42,9 @@
 #define TUTOR_MOVE_FURY_CUTTER     29
 #define TUTOR_MOVE_COUNT           30
 
+// SPEEDCHOICE
+#define TUTOR_MOVE_FALSE_SWIPE     69
+
 #define PARTY_LAYOUT_SINGLE          0
 #define PARTY_LAYOUT_DOUBLE          1
 #define PARTY_LAYOUT_MULTI           2
diff --git a/include/constants/region_map_sections.h b/include/constants/region_map_sections.h
index 65aa3e1ca..5a35bcd66 100644
--- a/include/constants/region_map_sections.h
+++ b/include/constants/region_map_sections.h
@@ -214,7 +214,8 @@
 #define MAPSEC_ALTERING_CAVE                0xD2
 #define MAPSEC_NAVEL_ROCK                   0xD3
 #define MAPSEC_TRAINER_HILL                 0xD4
-#define MAPSEC_NONE                         0xD5
+#define MAPSEC_ANCIENT_CAVE                 0xD5
+#define MAPSEC_NONE                         0xD6
 
 #define METLOC_SPECIAL_EGG                  0xFD
 #define METLOC_IN_GAME_TRADE                0xFE
diff --git a/include/constants/trainers.h b/include/constants/trainers.h
index 3f22c7cef..ae3980f13 100644
--- a/include/constants/trainers.h
+++ b/include/constants/trainers.h
@@ -351,6 +351,9 @@
 #define TRAINER_CLASS_PYRAMID_KING   0x40
 #define TRAINER_CLASS_RS_PROTAG      0x41
 
+// SPEEDCHOICE (for inigen)
+#define TRAINER_CLASS_COUNT          0x42
+
 #define TRAINER_ENCOUNTER_MUSIC_MALE         0 // standard male encounter music
 #define TRAINER_ENCOUNTER_MUSIC_FEMALE       1 // standard female encounter music
 #define TRAINER_ENCOUNTER_MUSIC_GIRL         2 // used for male Tubers and Young Couples too
diff --git a/include/done_button.h b/include/done_button.h
new file mode 100644
index 000000000..491dd1638
--- /dev/null
+++ b/include/done_button.h
@@ -0,0 +1,88 @@
+#ifndef _GUARD_DONE_BUTTON_H
+#define _GUARD_DONE_BUTTON_H
+
+// The done stat fields are defined in global.h.
+
+// This is kept seperate and then loaded when the save is loaded.
+struct FrameTimers
+{
+    u32 frameCount;  
+    u32 owFrameCount;
+    u32 battleFrameCount;
+    u32 menuFrameCount;
+    u32 introsFrameCount;
+};
+
+enum DoneButtonStat
+{
+    // DoneButtonStats1
+    // These frame counters are accounted for by a seperate struct.
+    DB_NO_STAT, // used for struct definitions.
+    /*accounted*/ DB_FRAME_COUNT_TOTAL,
+    /*accounted*/ DB_FRAME_COUNT_OW,
+    /*accounted*/ DB_FRAME_COUNT_BATTLE,
+    /*accounted*/ DB_FRAME_COUNT_MENU, // count start menu + PC
+    /*accounted*/ DB_FRAME_COUNT_INTROS,
+    /*accounted*/ DB_SAVE_COUNT,
+    /*accounted*/ DB_RELOAD_COUNT,
+    /*accounted*/ DB_CLOCK_RESET_COUNT,
+    /*accounted*/ DB_STEP_COUNT,
+    /*accounted*/ DB_STEP_COUNT_WALK,
+    /*accounted*/ DB_STEP_COUNT_SURF,
+    /*accounted*/ DB_STEP_COUNT_BIKE,
+    /*accounted*/ DB_STEP_COUNT_RUN, // Gen 3 exclusive
+    /*accounted*/ DB_BONKS,
+    /*accounted*/ DB_TOTAL_DAMAGE_DEALT, 
+    /*accounted*/ DB_ACTUAL_DAMAGE_DEALT, // regardless of max
+    /*accounted*/ DB_TOTAL_DAMAGE_TAKEN,
+    /*accounted*/ DB_ACTUAL_DAMAGE_TAKEN, // regardless of max
+    /*accounted*/ DB_OWN_MOVES_HIT,
+    /*accounted*/ DB_OWN_MOVES_MISSED,
+    /*accounted*/ DB_ENEMY_MOVES_HIT,
+    /*accounted*/ DB_ENEMY_MOVES_MISSED,
+    // DoneButtonStats2
+    /*accounted*/ DB_OWN_MOVES_SE,
+    /*accounted*/ DB_OWN_MOVES_NVE,
+    /*accounted*/ DB_ENEMY_MOVES_SE,
+    /*accounted*/ DB_ENEMY_MOVES_NVE,
+    /*accounted*/ DB_CRITS_DEALT,
+    /*accounted*/ DB_OHKOS_DEALT,
+    /*accounted*/ DB_CRITS_TAKEN,
+    /*accounted*/ DB_OHKOS_TAKEN,
+    /*accounted*/ DB_PLAYER_HP_HEALED,
+    /*accounted*/ DB_ENEMY_HP_HEALED,
+    /*accounted*/ DB_PLAYER_POKEMON_FAINTED,
+    /*accounted*/ DB_ENEMY_POKEMON_FAINTED,
+    /*accounted*/ DB_EXP_GAINED,
+    /*accounted*/ DB_SWITCHOUTS,
+    /*accounted*/ DB_BATTLES,
+    /*accounted*/ DB_TRAINER_BATTLES,
+    /*accounted*/ DB_WILD_BATTLES,
+    /*accounted*/ DB_BATTLES_FLED,
+    /*accounted*/ DB_FAILED_RUNS,
+    /*accounted*/ DB_MONEY_MADE,
+    /*accounted*/ DB_MONEY_SPENT,
+    /*accounted*/ DB_MONEY_LOST,
+    /*accounted*/ DB_ITEMS_PICKED_UP,
+    /*accounted*/ DB_ITEMS_BOUGHT,
+    /*accounted*/ DB_ITEMS_SOLD,
+    /*accounted*/ DB_MOVES_LEARNT,
+    /*accounted*/ DB_BALLS_THROWN,
+    /*accounted*/ DB_POKEMON_CAUGHT_IN_BALLS,
+    /*accounted*/ DB_EVOLUTIONS_ATTEMPTED,
+    /*accounted*/ DB_EVOLUTIONS_COMPLETED,
+    /*accounted*/ DB_EVOLUTIONS_CANCELLED
+};
+
+void TryIncrementButtonStat(enum DoneButtonStat stat);
+void TryAddButtonStatBy(enum DoneButtonStat stat, u32 add);
+u32 GetDoneButtonStat(enum DoneButtonStat stat);
+void Task_InitDoneButtonMenu(u8 taskId);
+
+extern struct FrameTimers gFrameTimers;
+extern bool8 sInSubMenu;
+extern bool8 sInBattle;
+extern bool8 sInField;
+extern bool8 sInIntro;
+
+#endif // _GUARD_DONE_BUTTON_H
diff --git a/include/global.h b/include/global.h
index 4ccd2be50..77a8c3c3b 100644
--- a/include/global.h
+++ b/include/global.h
@@ -451,6 +451,93 @@ struct RankingHall2P
     u8 language;
 };
 
+struct SpeedchoiceSaveOptions
+{
+    u8 expsystem:2;
+    u8 plotless:2;
+    //u8 instantText:1;
+    u8 spinners:2;
+    u8 maxVision:2;
+    //u8 nerfRoxanne:1;
+    //u8 superbike:1;
+    //u8 newwildencounters:1;
+    u8 earlyfly:1;
+    //u8 runEverywhere:1;
+    //u8 memeIsland:1;
+    //u8 betterMarts:1;
+    u8 goodEarlyWilds:2;
+    u8 earlysurf:1;
+    u8 niceMenuOrder:1;
+    u8 easyFalseSwipe:2;
+    u8 fastCatch:1;
+    //u8 earlyBike:1;
+    //u8 fastEggHatch:1;
+    u8 gen7XItems:1;
+    u8 evoEveryLevel:1;
+};
+
+// The struct has to be split in two because neither chunk of block 1 and 2 has enough room left for the full struct.
+struct DoneButtonStats1
+{
+    u32 frameCount;
+    u32 owFrameCount;
+    u32 battleFrameCount;
+    u32 menuFrameCount;
+    u32 introsFrameCount;
+    u16 saveCount;
+    u16 reloadCount;
+    u16 clockResetCount;
+    u32 stepCount;
+    u32 stepCountWalk;
+    u32 stepCountSurf;
+    u32 stepCountBike;
+    u32 stepCountRun; // Gen 3 exclusive
+    u16 bonks;
+    u32 totalDamageDealt;
+    u32 actualDamageDealt;
+    u32 totalDamageTaken;
+    u32 actualDamageTaken;
+    u16 ownMovesHit;
+    u16 ownMovesMissed;
+    u16 enemyMovesHit;
+    u16 enemyMovesMissed;
+};
+
+struct DoneButtonStats2
+{
+    u16 ownMovesSE;
+    u16 ownMovesNVE;
+    u16 enemyMovesSE;
+    u16 enemyMovesNVE;
+    u16 critsDealt;
+    u16 OHKOsDealt;
+    u16 critsTaken;
+    u16 OHKOsTaken;
+    u32 playerHPHealed;
+    u32 enemyHPHealed;
+    u16 playerPokemonFainted;
+    u16 enemyPokemonFainted;
+    u32 expGained;
+    u16 switchouts;
+    u16 battles;
+    u16 trainerBattles;
+    u16 wildBattles;
+    u16 battlesFled;
+    u16 failedRuns;
+    u32 moneyMade;
+    u32 moneySpent;
+    u32 moneyLost;
+    u16 itemsPickedUp;
+    u16 itemsBought;
+    u16 itemsSold;
+    u16 movesLearnt;
+    u16 ballsThrown;
+    u16 pokemonCaughtInBalls;
+    u32 evosAttempted;
+    u32 evosCompleted;
+    u32 evosCancelled;
+};
+
 struct SaveBlock2
 {
     /*0x00*/ u8 playerName[PLAYER_NAME_LENGTH + 1];
@@ -483,6 +570,8 @@ struct SaveBlock2
     /*0x57C*/ struct RankingHall2P hallRecords2P[2][3]; // From record mixing.
     /*0x624*/ u16 contestLinkResults[CONTEST_CATEGORIES_COUNT][CONTESTANT_COUNT];
     /*0x64C*/ struct BattleFrontier frontier;
+    struct SpeedchoiceSaveOptions speedchoiceConfig;
+    struct DoneButtonStats2 doneButtonStats;
 }; // sizeof=0xF2C
 
 extern struct SaveBlock2 *gSaveBlock2Ptr;
@@ -986,6 +1075,7 @@ struct SaveBlock1
     /*0x3D64*/ struct SaveTrainerHill trainerHill;
     /*0x3D70*/ struct WaldaPhrase waldaPhrase;
     // sizeof: 0x3D88
+    struct DoneButtonStats1 doneButtonStats;
 };
 
 extern struct SaveBlock1* gSaveBlock1Ptr;
diff --git a/include/graphics.h b/include/graphics.h
index d3d01bc57..67ce7e0a5 100644
--- a/include/graphics.h
+++ b/include/graphics.h
@@ -5025,4 +5025,7 @@ extern const u16 gObjectEventPal_May[];
 extern const u16 gObjectEventPal_RubySapphireBrendan[];
 extern const u16 gObjectEventPal_RubySapphireMay[];
 
+extern const u32 gItemIcon_DoneButton[];
+extern const u32 gItemIconPalette_DoneButton[];
+
 #endif //GUARD_GRAPHICS_H
diff --git a/include/item_use.h b/include/item_use.h
index f577f8d46..5ff24c41e 100644
--- a/include/item_use.h
+++ b/include/item_use.h
@@ -31,6 +31,7 @@ void ItemUseInBattle_PPRecovery(u8);
 void ItemUseInBattle_Escape(u8);
 void ItemUseInBattle_EnigmaBerry(u8);
 void Task_UseDigEscapeRopeOnField(u8 taskId);
+void ItemUseOutOfBattle_DoneButton(u8 taskId);
 u8 CanUseDigOrEscapeRopeOnCurMap(void);
 u8 CheckIfItemIsTMHMOrEvolutionStone(u16 itemId);
 
diff --git a/include/speedchoice.h b/include/speedchoice.h
new file mode 100644
index 000000000..af0ae5441
--- /dev/null
+++ b/include/speedchoice.h
@@ -0,0 +1,414 @@
+#ifndef _GUARD_SPEEDCHOICE_H
+#define _GUARD_SPEEDCHOICE_H
+
+// =======================================
+// Global Speedchoice Configuration
+// =======================================
+
+// The current total number of selectable options. Be sure to count preset too and
+// player name.
+#define CURRENT_OPTIONS_NUM 14
+
+// Maximum number of possible selectable options per option.
+#define MAX_CHOICES 6
+
+// Maximum number of options to print per page besides Start Game and Page.
+#define OPTIONS_PER_PAGE 5
+
+// Maximum number of options including Page and Start Game.
+#define ALLOPTIONS_PER_PAGE OPTIONS_PER_PAGE + 2
+
+// Number of defined pages.
+#define MAX_PAGES 3
+
+// Deprecated macro. May have been in use for Sapphire Speedchoice when the window system
+// was different back then.
+#define MENUOPTIONCOORDS(i) (5 + (2 * i)) // DEPRECATED
+
+// Deprecated macro. Using Random() formula for spinner timer: this define isnt used to
+// check Spinner timing anymore.
+#define SPINNER_HELL_TIMER 4 // DEPRECATED
+
+// Maximum number of tile vision trainers have when Max Vision is set.
+#define MAX_VISION_RANGE 8
+
+// Number of frames per spinner iteration in Purge setting for Spinners.
+#define PURGE_SPINNER_TIMER 48
+
+// Deprecated macro. I think battle speed is defined seperately now in the battle_main file
+// somewhere.
+#define BATTLE_SPEED_FRACTION 4 // DEPRECATED
+
+// Reserved macros for a future version for a wild encounter queue system.
+// Not implemented yet.
+#define GRASS_QUEUE_SIZE 20
+#define WATER_QUEUE_SIZE 15
+#define ROCKSMASH_QUEUE_SIZE 15
+#define FISHING_QUEUE_SIZE 5
+
+// To Avoid breaking stuff, we used old min/max macros. I'm too lazy to correct this.
+#define oldmin(a, b) (a < b ? a : b)
+#define oldmax(a, b) (a > b ? a : b)
+
+// The chosen font ID for Speedchoice.
+#define SPEEDCHOICE_FONT_ID 1
+
+// Enumeration for Speedchoice Options. Used for CheckSpeedchoiceOption. These options
+// MUST match the order of the save data struct in global.h!
+
+/**
+ * The following Speedchoice options have been deprecated:
+ *
+ * Instant Text (moved to Options)
+ * Nerf Roxanne (made default)
+ * Super Bike (made default)
+ * New Wild Encounters (made default)
+ * Run Everywhere (made default)
+ * Meme Island (made default)
+ * Better Marts (made default)
+ * Early Bike (made default)
+ * Fast Egg Hatch (made default)
+ *
+ * Please ensure when rebasing these are readded per implementation.
+ */
+enum
+{
+    // ----------------------
+    // NORMAL OPTIONS
+    // ----------------------
+    PRESET,
+    PLAYER_NAME_SET,
+    EXPMATH,
+    PLOTLESS,
+    //INSTANTTEXT, // DEPRECATED (default)
+    SPINNERS,
+    MAXVISION,
+    //NERFROXANNE, // DEPRECATED (default)
+    //SUPERBIKE, // DEPRECATED (default)
+    //NEWWILDENC, // DEPRECATED (default)
+    EARLYFLY,
+    //RUN_EVERYWHERE, // DEPRECATED (default)
+    //MEME_ISLAND, // DEPRECATED (default)
+    //BETTER_MARTS, // DEPRECATED (default)
+    GOOD_EARLY_WILDS,
+    EARLYSURF,
+    NICE_MENU_ORDER,
+    EASY_FALSE_SWIPE,
+    FAST_CATCH,
+    //EARLY_BIKE, // DEPRECATED (default)
+    //FAST_EGG_HATCH, // DEPRECATED (default)
+    GEN_7_X_ITEMS,
+    EVO_EVERY_LEVEL,
+
+    // ----------------------
+    // STATIC OPTIONS
+    // ----------------------
+    PAGE,
+    START_GAME
+};
+
+/*
+ * Enumerations for GetPageOptionTrueIndex. When passing this, the function will
+ * return the true index from that page given whether you are specifying the first
+ * option of the page or the last one.
+ */
+enum
+{
+    FIRST,
+    LAST
+};
+
+// We used to share the enums for options, but we don't anymore because it's confusing
+// as fuck. Please define enums for each option and have them match the option config.
+
+// ----------------------
+// EXP ENUM
+// ----------------------
+enum
+{
+    EXP_KEEP,
+    EXP_BW,
+    EXP_NONE
+};
+
+// ----------------------
+// PLOTLESS ENUM
+// ----------------------
+enum
+{
+    PLOT_SEMI,
+    PLOT_KEEP,
+    PLOT_FULL
+};
+
+// ----------------------
+// INSTANT TEXT ENUM (DEPRECATED)
+// ----------------------
+enum
+{
+    IT_ON,
+    IT_OFF
+};
+
+// ----------------------
+// SPINNERS ENUM
+// ----------------------
+enum
+{
+    SPIN_NERF,
+    SPIN_KEEP,
+    SPIN_HELL,
+    SPIN_WHY
+};
+
+// ----------------------
+// MAX VISION ENUM
+// ----------------------
+enum
+{
+    MAX_OFF,
+    MAX_SANE,
+    MAX_HELL
+};
+
+// ----------------------
+// NERF ROXANNE ENUM (DEPRECATED)
+// ----------------------
+enum
+{
+    NERF_YES,
+    NERF_NO
+};
+
+// ----------------------
+// SUPER BIKE ENUM (DEPRECATED)
+// ----------------------
+enum
+{
+    BIKE_ON,
+    BIKE_OFF
+};
+
+// ----------------------
+// NEW WILD ENC ENUM (DEPRECATED)
+// ----------------------
+enum
+{
+    NEW_ON,
+    NEW_OFF
+};
+
+// ----------------------
+// EARLY FLY ENUM
+// ----------------------
+enum
+{
+    FLY_YES,
+    FLY_NO
+};
+
+// ----------------------
+// RUN EVERYWHERE ENUM (DEPRECATED)
+// ----------------------
+enum
+{
+    RUN_ON,
+    RUN_OFF
+};
+
+// ----------------------
+// MEME ISLAND ENUM (DEPRECATED)
+// ----------------------
+enum
+{
+    MEME_BIG, // dot net
+    MEME_SMALL // you're banned
+};
+
+// ----------------------
+// BETTER MARTS ENUM (DEPRECATED)
+// ----------------------
+enum
+{
+    MARTS_ON,
+    MARTS_OFF
+};
+
+// ----------------------
+// GOOD EARLY WILDS ENUM
+// ----------------------
+enum
+{
+    GOOD_OFF,
+    GOOD_STATIC,
+    GOOD_RAND
+};
+
+// ----------------------
+// EARLY SURF ENUM
+// ----------------------
+enum
+{
+    SURF_ON,
+    SURF_OFF
+};
+
+// ----------------------
+// PARTY MENU ENUM
+// ----------------------
+enum
+{
+    NICE_MENU_ORDER_ON,
+    NICE_MENU_ORDER_OFF
+};
+
+// ----------------------
+// EASY FALSE SWIPE ENUM
+// ----------------------
+enum
+{
+    EASY_FALSE_SWIPE_OFF,
+    EASY_FALSE_SWIPE_TUTOR,
+    EASY_FALSE_SWIPE_HM05
+};
+
+// ----------------------
+// FAST CATCH ENUM
+// ----------------------
+enum
+{
+    FAST_CATCH_ON,
+    FAST_CATCH_OFF
+};
+
+// ----------------------
+// EARLY BIKE ENUM (DEPRECATED)
+// ----------------------
+enum
+{
+    EARLY_BIKE_YES,
+    EARLY_BIKE_NO
+};
+
+// ----------------------
+// FAST EGG HATCHING ENUM (DEPRECATED)
+// ----------------------
+enum
+{
+    FAST_EGG_HATCH_YES,
+    FAST_EGG_HATCH_NO
+};
+// ----------------------
+// GEN 7 X ITEMS ENUM
+// ----------------------
+enum
+{
+    GEN_7_X_ITEMS_ON,
+    GEN_7_X_ITEMS_OFF
+};
+
+// ----------------------
+// EVO_EVERY_LEVEL ENUM
+// ----------------------
+enum
+{
+    EVO_EV_OFF,
+    EVO_EV_ON // STATIC
+};
+
+// Enumeration for optionType in the Speedchoice struct below.
+enum
+{
+    NORMAL,
+    ARROW,
+    PLAYER_NAME
+};
+
+/*
+ * Every Speedchoice option uses a configuration to determine how to render it's options.
+ * For example (Yes/No), (On/Off), etc. These Configurations determine each option's coordinate
+ * to use and the string to use. Ideally I could probably do lots of fancy math to determine
+ * the X as well but I'd rather just hardcode it for detailing.
+ */
+struct OptionChoiceConfig
+{
+    s16 x; // do not store the Y coordinate. Y is automatically calculated depending on the row the option is placed and therefore is not necessary.
+    u8 *string; // can be null
+};
+
+/*
+ * To define an option, this global configuration struct is used to define every option that is
+ * selectable or togglable.
+ */
+struct SpeedchoiceOption
+{
+    // Number of options. (2 = On/Off, etc)
+    u8 optionCount;
+    
+    // see option type enumeration above.
+    u8 optionType;
+    
+    // Pointer to the name of the option.
+    const u8 *string;
+    
+    // Pointer to the array of Option configuration array. An array of MAX_CHOICES since no
+    // need to define more than that. Use NULL for static options.
+    const struct OptionChoiceConfig *options;
+    
+    // Pointer to Tooltip string. Printed when SELECT is pressed on the option.
+    const u8 *tooltip;
+    
+    // Determines if the option is enabled or not. This was used during Speedchoice development.
+    bool8 enabled;
+}; 
+
+/*
+ * Before writing to the Save Block, we store the configuration in RAM temporarily before
+ * flushing it to the Save Block.
+ */
+struct SpeedchoiceConfigStruct
+{
+    // The currently stored selected options per Speedchoice option. These are written
+    // to the save block at the end.
+    u8 optionConfig[CURRENT_OPTIONS_NUM];
+    
+    // The true ID of the selected page. This takes into account number of pages, etc.
+    // If you're on Page 2, the trueIndex of the first option is 8. (7+1)
+    u8 trueIndex;
+    
+    // The page ID of the option on the current page. 2nd option on page 2 is 2, etc.
+    u8 pageIndex;
+    
+    // Current page number.
+    u8 pageNum;
+};
+
+/*
+ * In Gen 3, there is an oversight by Game Freak where upon going to a sub menu and returning
+ * the spinner timers are reset due to reloading the field. Since spinners dont start trying
+ * to spin until later, this oversight can be used to run past spinners safely without
+ * encountering them. Because this trivializes Spinner Hell, we fix this when Hell/Why is
+ * toggled by backing up the NPC timers and restoring them upon returning to the field. We skip
+ * the player object's timer to avoid sprite issues.
+ */
+struct MapObjectTimerBackup
+{
+    bool8 backedUp;
+    s16 spriteId;
+    s16 timer;
+};
+
+/*
+ * we need to extern the randomizer check value. If the ROM could see the value assigned
+ * here (which is 0 by default), then it would be optimized out, but we need this location
+ * to be externally written to by the randomizer.
+ */
+extern u32 gRandomizerCheckValue;
+
+// ----------------------
+// Prototypes
+// ----------------------
+void CB2_InitSpeedchoiceMenu(void);
+bool8 CheckSpeedchoiceOption(u8, u8);
+
+#endif // _GUARD_SPEEDCHOICE_H
diff --git a/ld_script.txt b/ld_script.txt
index 0b8702d96..d7aacfaef 100644
--- a/ld_script.txt
+++ b/ld_script.txt
@@ -333,6 +333,8 @@ SECTIONS {
         src/gym_leader_rematch.o(.text);
         src/battle_transition_frontier.o(.text);
         src/international_string_util.o(.text);
+        src/speedchoice.o(.text);
+        src/done_button.o(.text);
     } =0
 
     script_data :
@@ -690,6 +692,9 @@ SECTIONS {
         data/fonts.o(.rodata);
         src/mystery_event_msg.o(.rodata);
         data/mystery_event.o(.rodata);
+        src/speedchoice.o(.rodata);
+        src/done_button.o(.rodata);
+        data/rando_cv.o(.rodata);
         src/m4a_tables.o(.rodata);
         data/sound_data.o(.rodata);
     } =0
diff --git a/src/battle_anim_throw.c b/src/battle_anim_throw.c
index fef301326..b93de8b7b 100755
--- a/src/battle_anim_throw.c
+++ b/src/battle_anim_throw.c
@@ -1235,7 +1235,7 @@ static void SpriteCB_Ball_Wobble_Step(struct Sprite *sprite)
         }
         else
         {
-            if (gBattleSpritesDataPtr->animationData->ballThrowCaseId == BALL_3_SHAKES_SUCCESS && shakes == 3)
+            if (gBattleSpritesDataPtr->animationData->ballThrowCaseId == BALL_3_SHAKES_SUCCESS && shakes == 2) // SPEEDCHOICE (2 shakes instead of 3).
             {
                 sprite->callback = SpriteCB_Ball_Capture;
                 sprite->affineAnimPaused = TRUE;
diff --git a/src/battle_controller_opponent.c b/src/battle_controller_opponent.c
index 9fe8caf63..073794e03 100644
--- a/src/battle_controller_opponent.c
+++ b/src/battle_controller_opponent.c
@@ -61,7 +61,7 @@ static void OpponentHandleChooseMove(void);
 static void OpponentHandleChooseItem(void);
 static void OpponentHandleChoosePokemon(void);
 static void OpponentHandleCmd23(void);
-static void OpponentHandleHealthBarUpdate(void);
+void OpponentHandleHealthBarUpdate(void);
 static void OpponentHandleExpUpdate(void);
 static void OpponentHandleStatusIconUpdate(void);
 static void OpponentHandleStatusAnimation(void);
@@ -395,7 +395,7 @@ static void sub_805F994(void)
     }
 }
 
-static void CompleteOnHealthbarDone(void)
+void CompleteOnHealthbarDone(void)
 {
     s16 hpValue = MoveBattleBar(gActiveBattler, gHealthboxSpriteIds[gActiveBattler], HEALTH_BAR, 0);
     SetHealthboxSpriteVisible(gHealthboxSpriteIds[gActiveBattler]);
@@ -1672,7 +1672,7 @@ static void OpponentHandleCmd23(void)
     OpponentBufferExecCompleted();
 }
 
-static void OpponentHandleHealthBarUpdate(void)
+void OpponentHandleHealthBarUpdate(void)
 {
     s16 hpVal;
 
diff --git a/src/battle_controller_player.c b/src/battle_controller_player.c
index c1d7fc2a4..d1cfb4461 100644
--- a/src/battle_controller_player.c
+++ b/src/battle_controller_player.c
@@ -62,7 +62,7 @@ static void PlayerHandleChooseMove(void);
 static void PlayerHandleChooseItem(void);
 static void PlayerHandleChoosePokemon(void);
 static void PlayerHandleCmd23(void);
-static void PlayerHandleHealthBarUpdate(void);
+void PlayerHandleHealthBarUpdate(void);
 static void PlayerHandleExpUpdate(void);
 static void PlayerHandleStatusIconUpdate(void);
 static void PlayerHandleStatusAnimation(void);
@@ -1106,7 +1106,7 @@ void c3_0802FDF4(u8 taskId)
     }
 }
 
-static void CompleteOnHealthbarDone(void)
+void CompleteOnHealthbarDone2(void)
 {
     s16 hpValue = MoveBattleBar(gActiveBattler, gHealthboxSpriteIds[gActiveBattler], HEALTH_BAR, 0);
 
@@ -2666,7 +2666,7 @@ static void PlayerHandleCmd23(void)
     PlayerBufferExecCompleted();
 }
 
-static void PlayerHandleHealthBarUpdate(void)
+void PlayerHandleHealthBarUpdate(void)
 {
     s16 hpVal;
 
@@ -2692,7 +2692,7 @@ static void PlayerHandleHealthBarUpdate(void)
         UpdateHpTextInHealthbox(gHealthboxSpriteIds[gActiveBattler], 0, HP_CURRENT);
     }
 
-    gBattlerControllerFuncs[gActiveBattler] = CompleteOnHealthbarDone;
+    gBattlerControllerFuncs[gActiveBattler] = CompleteOnHealthbarDone2;
 }
 
 static void PlayerHandleExpUpdate(void)
diff --git a/src/battle_gfx_sfx_util.c b/src/battle_gfx_sfx_util.c
index 77b91f1f4..06da5ea1d 100644
--- a/src/battle_gfx_sfx_util.c
+++ b/src/battle_gfx_sfx_util.c
@@ -374,6 +374,7 @@ void sub_805D7AC(struct Sprite *sprite)
     if (!(gIntroSlideFlags & 1))
     {
         sprite->pos2.x += sprite->data[0];
+        sprite->pos2.x += sprite->data[0] / 2; // x1.5x SPEEDCHOICE
         if (sprite->pos2.x == 0)
         {
             if (sprite->pos2.y != 0)
diff --git a/src/battle_intro.c b/src/battle_intro.c
index 36ff325f5..77478d6aa 100644
--- a/src/battle_intro.c
+++ b/src/battle_intro.c
@@ -16,10 +16,10 @@ static EWRAM_DATA u16 sBgCnt = 0;
 extern const u8 gUnknown_0859741A[];
 extern const u8 gUnknown_0859741E[];
 
-static void BattleIntroSlide1(u8);
-static void BattleIntroSlide2(u8);
-static void BattleIntroSlide3(u8);
-static void BattleIntroSlideLink(u8);
+void BattleIntroSlide1(u8);
+void BattleIntroSlide2(u8);
+void BattleIntroSlide3(u8);
+void BattleIntroSlideLink(u8);
 static void BattleIntroSlidePartner(u8);
 
 static const TaskFunc sBattleIntroSlideFuncs[] =
@@ -148,7 +148,7 @@ void sub_811828C(u8 taskId)
     SetGpuReg(REG_OFFSET_WINOUT, WINOUT_WIN01_BG_ALL | WINOUT_WIN01_OBJ | WINOUT_WIN01_CLR | WINOUT_WINOBJ_BG_ALL | WINOUT_WINOBJ_OBJ | WINOUT_WINOBJ_CLR);
 }
 
-static void BattleIntroSlide1(u8 taskId)
+void BattleIntroSlide1(u8 taskId)
 {
     int i;
 
@@ -233,7 +233,7 @@ static void BattleIntroSlide1(u8 taskId)
     }
 }
 
-static void BattleIntroSlide2(u8 taskId)
+void BattleIntroSlide2(u8 taskId)
 {
     int i;
 
@@ -345,7 +345,7 @@ static void BattleIntroSlide2(u8 taskId)
         SetGpuReg(REG_OFFSET_BLDALPHA, BLDALPHA_BLEND(gTasks[taskId].data[4], 0));
 }
 
-static void BattleIntroSlide3(u8 taskId)
+void BattleIntroSlide3(u8 taskId)
 {
     int i;
 
@@ -433,7 +433,7 @@ static void BattleIntroSlide3(u8 taskId)
         SetGpuReg(REG_OFFSET_BLDALPHA, BLDALPHA_BLEND(gTasks[taskId].data[4], 0));
 }
 
-static void BattleIntroSlideLink(u8 taskId)
+void BattleIntroSlideLink(u8 taskId)
 {
     int i;
 
diff --git a/src/battle_main.c b/src/battle_main.c
index df56dccf9..677b059ed 100644
--- a/src/battle_main.c
+++ b/src/battle_main.c
@@ -60,6 +60,8 @@
 #include "constants/songs.h"
 #include "constants/trainers.h"
 #include "cable_club.h"
+#include "done_button.h"
+#include "speedchoice.h"
 
 extern struct MusicPlayerInfo gMPlayInfo_SE1;
 extern struct MusicPlayerInfo gMPlayInfo_SE2;
@@ -580,6 +582,9 @@ void CB2_InitBattle(void)
     AllocateBattleSpritesData();
     AllocateMonSpritesGfx();
     sub_8185F84();
+    sInSubMenu = FALSE;
+    sInField = FALSE;
+    sInBattle = TRUE;
 
     if (gBattleTypeFlags & BATTLE_TYPE_MULTI)
     {
@@ -2646,7 +2651,7 @@ static void SpriteCb_MoveWildMonToRight(struct Sprite *sprite)
 {
     if ((gIntroSlideFlags & 1) == 0)
     {
-        sprite->pos2.x += 2;
+        sprite->pos2.x += 3; // x1.5x SPEEDCHOICE
         if (sprite->pos2.x == 0)
         {
             sprite->callback = SpriteCb_WildMonShowHealthbox;
@@ -2979,12 +2984,30 @@ void BeginBattleIntro(void)
     gBattleMainFunc = BattleIntroGetMonsData;
 }
 
+#define BATTLE_SPEED 3
+extern void OpponentHandleHealthBarUpdate(void); // opponent HP Bar (battle_7)
+extern void PlayerHandleHealthBarUpdate(void); // player HP bar
+extern void CompleteOnHealthbarDone(void);
+extern void CompleteOnHealthbarDone2(void);
+
 static void BattleMainCB1(void)
 {
+    u8 i;
     gBattleMainFunc();
 
     for (gActiveBattler = 0; gActiveBattler < gBattlersCount; gActiveBattler++)
-        gBattlerControllerFuncs[gActiveBattler]();
+	{
+		if(gBattlerControllerFuncs[gActiveBattler] == OpponentHandleHealthBarUpdate ||
+		gBattlerControllerFuncs[gActiveBattler] == PlayerHandleHealthBarUpdate || 
+		gBattlerControllerFuncs[gActiveBattler] == CompleteOnHealthbarDone || 
+		gBattlerControllerFuncs[gActiveBattler] == CompleteOnHealthbarDone2)
+		{
+			for(i = 0; i < BATTLE_SPEED; i++)
+				gBattlerControllerFuncs[gActiveBattler]();
+		}
+		else
+			gBattlerControllerFuncs[gActiveBattler]();
+	}
 }
 
 static void BattleStartClearSetData(void)
@@ -5111,6 +5134,7 @@ static void FreeResetData_ReturnToOvOrDoEvolutions(void)
 static void TryEvolvePokemon(void)
 {
     s32 i;
+    bool8 canStopEvo = TRUE;
 
     while (gLeveledUpInBattle != 0)
     {
@@ -5125,11 +5149,18 @@ static void TryEvolvePokemon(void)
                 gLeveledUpInBattle = levelUpBits;
 
                 species = GetEvolutionTargetSpecies(&gPlayerParty[i], 0, levelUpBits);
+
+                // handle forcing evo for speedchoice.
+                if(CheckSpeedchoiceOption(EVO_EVERY_LEVEL, EVO_EV_OFF) == FALSE)
+                    canStopEvo = FALSE;
+                else
+                    canStopEvo = TRUE;
+
                 if (species != SPECIES_NONE)
                 {
                     FreeAllWindowBuffers();
                     gBattleMainFunc = WaitForEvoSceneToFinish;
-                    EvolutionScene(&gPlayerParty[i], species, TRUE, i);
+                    EvolutionScene(&gPlayerParty[i], species, canStopEvo, i);
                     return;
                 }
             }
diff --git a/src/battle_script_commands.c b/src/battle_script_commands.c
index 6ec9d16b1..e0674e959 100644
--- a/src/battle_script_commands.c
+++ b/src/battle_script_commands.c
@@ -52,6 +52,8 @@
 #include "constants/rgb.h"
 #include "data.h"
 #include "constants/party_menu.h"
+#include "speedchoice.h"
+#include "done_button.h"
 
 extern struct MusicPlayerInfo gMPlayInfo_BGM;
 
@@ -1272,7 +1274,18 @@ static void Cmd_critcalc(void)
      && !(gStatuses3[gBattlerAttacker] & STATUS3_CANT_SCORE_A_CRIT)
      && !(gBattleTypeFlags & (BATTLE_TYPE_WALLY_TUTORIAL | BATTLE_TYPE_FIRST_BATTLE))
      && !(Random() % sCriticalHitChance[critChance]))
+    {
         gCritMultiplier = 2;
+        switch(gBattlerTarget)
+        {
+            case B_SIDE_OPPONENT:
+                TryIncrementButtonStat(DB_CRITS_DEALT);
+                break;
+            case B_SIDE_PLAYER:
+                TryIncrementButtonStat(DB_CRITS_TAKEN);
+                break;
+        }
+    }
     else
         gCritMultiplier = 1;
 
@@ -1876,7 +1889,15 @@ static void Cmd_datahpupdate(void)
                 gBattleMons[gActiveBattler].hp -= gBattleMoveDamage;
                 if (gBattleMons[gActiveBattler].hp > gBattleMons[gActiveBattler].maxHP)
                     gBattleMons[gActiveBattler].hp = gBattleMons[gActiveBattler].maxHP;
-
+                switch(GetBattlerSide(gActiveBattler))
+                {
+                    case B_SIDE_PLAYER:
+                        TryAddButtonStatBy(DB_PLAYER_HP_HEALED, -gBattleMoveDamage);
+                        break;
+                    case B_SIDE_OPPONENT:
+                        TryAddButtonStatBy(DB_ENEMY_HP_HEALED, -gBattleMoveDamage);
+                        break;
+                }
             }
             else // hp goes down
             {
@@ -1900,10 +1921,36 @@ static void Cmd_datahpupdate(void)
                 }
                 else
                 {
+                    // OHKO
+                    if(gBattleMons[gActiveBattler].hp == gBattleMons[gActiveBattler].maxHP)
+                    {
+                        // Whos getting OHKO'd?
+                        switch(GetBattlerSide(gActiveBattler))
+                        {
+                            case B_SIDE_PLAYER:
+                                TryIncrementButtonStat(DB_OHKOS_TAKEN);
+                                break;
+                            case B_SIDE_OPPONENT:
+                                TryIncrementButtonStat(DB_OHKOS_DEALT);
+                                break;
+                        }
+                    }
                     gHpDealt = gBattleMons[gActiveBattler].hp;
                     gBattleMons[gActiveBattler].hp = 0;
                 }
 
+                switch(GetBattlerSide(gActiveBattler))
+                {
+                    case B_SIDE_PLAYER:
+                        TryAddButtonStatBy(DB_TOTAL_DAMAGE_TAKEN, gHpDealt);
+                        TryAddButtonStatBy(DB_ACTUAL_DAMAGE_TAKEN, gBattleMoveDamage);
+                        break;
+                    case B_SIDE_OPPONENT:
+                        TryAddButtonStatBy(DB_TOTAL_DAMAGE_DEALT, gHpDealt);
+                        TryAddButtonStatBy(DB_ACTUAL_DAMAGE_DEALT, gBattleMoveDamage);
+                        break;
+                }
+
                 if (!gSpecialStatuses[gActiveBattler].dmg && !(gHitMarker & HITMARKER_x100000))
                     gSpecialStatuses[gActiveBattler].dmg = gHpDealt;
 
@@ -1978,10 +2025,30 @@ static void Cmd_effectivenesssound(void)
         case MOVE_RESULT_SUPER_EFFECTIVE:
             BtlController_EmitPlaySE(0, SE_SUPER_EFFECTIVE);
             MarkBattlerForControllerExec(gActiveBattler);
+            // the active battler is the subject of these moves, so invert the logic.
+            switch(gActiveBattler)
+            {
+                case B_SIDE_PLAYER:
+                    TryIncrementButtonStat(DB_ENEMY_MOVES_SE);
+                    break;
+                case B_SIDE_OPPONENT:
+                    TryIncrementButtonStat(DB_OWN_MOVES_SE);
+                    break;
+            }
             break;
         case MOVE_RESULT_NOT_VERY_EFFECTIVE:
             BtlController_EmitPlaySE(0, SE_NOT_EFFECTIVE);
             MarkBattlerForControllerExec(gActiveBattler);
+            // same thing here.
+            switch(gActiveBattler)
+            {
+                case B_SIDE_PLAYER:
+                    TryIncrementButtonStat(DB_ENEMY_MOVES_NVE);
+                    break;
+                case B_SIDE_OPPONENT:
+                    TryIncrementButtonStat(DB_OWN_MOVES_NVE);
+                    break;
+            }
             break;
         case MOVE_RESULT_DOESNT_AFFECT_FOE:
         case MOVE_RESULT_FAILED:
@@ -2974,12 +3041,14 @@ static void Cmd_tryfaintmon(void)
                 gHitMarker |= HITMARKER_x400000;
                 if (gBattleResults.playerFaintCounter < 0xFF)
                     gBattleResults.playerFaintCounter++;
+                TryIncrementButtonStat(DB_PLAYER_POKEMON_FAINTED);
                 AdjustFriendshipOnBattleFaint(gActiveBattler);
             }
             else
             {
                 if (gBattleResults.opponentFaintCounter < 0xFF)
                     gBattleResults.opponentFaintCounter++;
+                TryIncrementButtonStat(DB_ENEMY_POKEMON_FAINTED);
                 gBattleResults.lastOpponentSpecies = GetMonData(&gEnemyParty[gBattlerPartyIndexes[gActiveBattler]], MON_DATA_SPECIES, NULL);
             }
             if ((gHitMarker & HITMARKER_DESTINYBOND) && gBattleMons[gBattlerAttacker].hp != 0)
@@ -3307,7 +3376,7 @@ static void Cmd_getexp(void)
                 gBattleScripting.getexpState = 5;
                 gBattleMoveDamage = 0; // used for exp
             }
-            else if (GetMonData(&gPlayerParty[gBattleStruct->expGetterMonId], MON_DATA_LEVEL) == MAX_LEVEL)
+            else if (GetMonData(&gPlayerParty[gBattleStruct->expGetterMonId], MON_DATA_LEVEL) == MAX_LEVEL || CheckSpeedchoiceOption(EXPMATH, EXP_NONE) == TRUE)
             {
                 *(&gBattleStruct->sentInPokes) >>= 1;
                 gBattleScripting.getexpState = 5;
@@ -3330,30 +3399,31 @@ static void Cmd_getexp(void)
                     else
                         gBattleMoveDamage = 0;
 
-                    if (holdEffect == HOLD_EFFECT_EXP_SHARE)
-                        gBattleMoveDamage += gExpShareExp;
-                    if (holdEffect == HOLD_EFFECT_LUCKY_EGG)
-                        gBattleMoveDamage = (gBattleMoveDamage * 150) / 100;
-                    if (gBattleTypeFlags & BATTLE_TYPE_TRAINER)
-                        gBattleMoveDamage = (gBattleMoveDamage * 150) / 100;
-
-                    if (IsTradedMon(&gPlayerParty[gBattleStruct->expGetterMonId]))
-                    {
-                        // check if the pokemon doesn't belong to the player
-                        if (gBattleTypeFlags & BATTLE_TYPE_INGAME_PARTNER && gBattleStruct->expGetterMonId >= 3)
-                        {
-                            i = STRINGID_EMPTYSTRING4;
-                        }
-                        else
-                        {
-                            gBattleMoveDamage = (gBattleMoveDamage * 150) / 100;
-                            i = STRINGID_ABOOSTED;
-                        }
-                    }
-                    else
-                    {
-                        i = STRINGID_EMPTYSTRING4;
-                    }
+                    // moved to below if/else because of gen 5 experience calculation.
+                    //if (holdEffect == HOLD_EFFECT_EXP_SHARE)
+                    //    gBattleMoveDamage += gExpShareExp;
+                    //if (holdEffect == HOLD_EFFECT_LUCKY_EGG)
+                    //    gBattleMoveDamage = (gBattleMoveDamage * 150) / 100;
+                    //if (gBattleTypeFlags & BATTLE_TYPE_TRAINER)
+                    //    gBattleMoveDamage = (gBattleMoveDamage * 150) / 100;
+                    //
+                    //if (IsTradedMon(&gPlayerParty[gBattleStruct->expGetterMonId]))
+                    //{
+                    //    // check if the pokemon doesn't belong to the player
+                    //    if (gBattleTypeFlags & BATTLE_TYPE_INGAME_PARTNER && gBattleStruct->expGetterMonId >= 3)
+                    //    {
+                    //        i = STRINGID_EMPTYSTRING4;
+                    //    }
+                    //    else
+                    //    {
+                    //        gBattleMoveDamage = (gBattleMoveDamage * 150) / 100;
+                    //        i = STRINGID_ABOOSTED;
+                    //    }
+                    //}
+                    //else
+                    //{
+                    //    i = STRINGID_EMPTYSTRING4;
+                    //}
 
                     // get exp getter battlerId
                     if (gBattleTypeFlags & BATTLE_TYPE_DOUBLE)
@@ -3373,6 +3443,72 @@ static void Cmd_getexp(void)
                         gBattleStruct->expGetterBattlerId = 0;
                     }
 
+                    if(CheckSpeedchoiceOption(EXPMATH, EXP_BW) == TRUE)
+                    {
+                        u32 upperRatio;
+                        u32 lowerRatio;
+                        
+                        if (holdEffect == HOLD_EFFECT_EXP_SHARE)
+                            gBattleMoveDamage += gExpShareExp; // add exp share FIRST, other wise it wont transform
+
+                        if (gBattleTypeFlags & BATTLE_TYPE_TRAINER)
+                            gBattleMoveDamage = (gBattleMoveDamage * 150) / 100; // x 1.5
+
+                        // step 2, calculate ratio
+                        upperRatio = ((gBattleMons[gBattlerFainted].level * 2) + 10);
+                        upperRatio *= upperRatio * Sqrt(upperRatio);
+                        lowerRatio = (gBattleMons[gBattlerFainted].level + gPlayerParty[gBattleStruct->expGetterMonId].level + 10);
+                        lowerRatio *= lowerRatio * Sqrt(lowerRatio);
+
+                        // step 3, calculate ratio product and multiply rest.
+                        gBattleMoveDamage = max(gBattleMoveDamage, gBattleMoveDamage * upperRatio / lowerRatio) + 1;
+                        if (IsTradedMon(&gPlayerParty[gBattleStruct->expGetterMonId]))
+                        {
+                            // check if the pokemon doesn't belong to the player
+                            if (gBattleTypeFlags & BATTLE_TYPE_INGAME_PARTNER && gBattleStruct->expGetterMonId >= 3)
+                            {
+                                i = STRINGID_EMPTYSTRING4;
+                            }
+                            else
+                            {
+                                gBattleMoveDamage = (gBattleMoveDamage * 150) / 100;
+                                i = STRINGID_ABOOSTED;
+                            }
+                        }
+                        else
+                            i = 0x149;
+                        if (holdEffect == HOLD_EFFECT_LUCKY_EGG)
+                            gBattleMoveDamage = (gBattleMoveDamage * 150) / 100; // x 1.5
+                    }
+                    else if(CheckSpeedchoiceOption(EXPMATH, EXP_KEEP) == TRUE) // normal handling
+                    {
+                        if (holdEffect == HOLD_EFFECT_EXP_SHARE)
+                            gBattleMoveDamage += gExpShareExp;
+                        if (holdEffect == HOLD_EFFECT_LUCKY_EGG)
+                            gBattleMoveDamage = (gBattleMoveDamage * 150) / 100;
+                        if (gBattleTypeFlags & BATTLE_TYPE_TRAINER)
+                            gBattleMoveDamage = (gBattleMoveDamage * 150) / 100;
+
+                        if (IsTradedMon(&gPlayerParty[gBattleStruct->expGetterMonId]))
+                        {
+                            // check if the pokemon doesn't belong to the player
+                            if (gBattleTypeFlags & BATTLE_TYPE_INGAME_PARTNER && gBattleStruct->expGetterMonId >= 3)
+                            {
+                                i = STRINGID_EMPTYSTRING4;
+                            }
+                            else
+                            {
+                                gBattleMoveDamage = (gBattleMoveDamage * 150) / 100;
+                                i = STRINGID_ABOOSTED;
+                            }
+                        }
+                        else
+                            i = 0x149;
+                    }
+
+                    // gBattleMoveDamage is used as exp.
+                    TryAddButtonStatBy(DB_EXP_GAINED, gBattleMoveDamage);
+                    
                     PREPARE_MON_NICK_WITH_PREFIX_BUFFER(gBattleTextBuff1, gBattleStruct->expGetterBattlerId, gBattleStruct->expGetterMonId);
                     // buffer 'gained' or 'gained a boosted'
                     PREPARE_STRING_BUFFER(gBattleTextBuff2, i);
@@ -3390,7 +3526,7 @@ static void Cmd_getexp(void)
         if (gBattleControllerExecFlags == 0)
         {
             gBattleBufferB[gBattleStruct->expGetterBattlerId][0] = 0;
-            if (GetMonData(&gPlayerParty[gBattleStruct->expGetterMonId], MON_DATA_HP) && GetMonData(&gPlayerParty[gBattleStruct->expGetterMonId], MON_DATA_LEVEL) != MAX_LEVEL)
+            if (GetMonData(&gPlayerParty[gBattleStruct->expGetterMonId], MON_DATA_HP) && GetMonData(&gPlayerParty[gBattleStruct->expGetterMonId], MON_DATA_LEVEL) != MAX_LEVEL && CheckSpeedchoiceOption(EXPMATH, EXP_NONE) == FALSE)
             {
                 gBattleResources->beforeLvlUp->stats[STAT_HP]    = GetMonData(&gPlayerParty[gBattleStruct->expGetterMonId], MON_DATA_MAX_HP);
                 gBattleResources->beforeLvlUp->stats[STAT_ATK]   = GetMonData(&gPlayerParty[gBattleStruct->expGetterMonId], MON_DATA_ATK);
@@ -4408,6 +4544,18 @@ static void Cmd_moveend(void)
                 attacker = gBattlerAttacker;
                 *(attacker * 2 + target * 8 + (u8*)(gBattleStruct->lastTakenMoveFrom) + 1) = gChosenMove >> 8;
             }
+            if(!(gMoveResultFlags & MOVE_RESULT_MISSED))
+            {
+                switch(GetBattlerSide(gBattlerAttacker))
+                {
+                    case B_SIDE_PLAYER:
+                        TryIncrementButtonStat(DB_OWN_MOVES_HIT);
+                        break;
+                    case B_SIDE_OPPONENT:
+                        TryIncrementButtonStat(DB_ENEMY_MOVES_HIT);
+                        break;
+                }
+            }
             gBattleScripting.moveendState++;
             break;
         case MOVEEND_NEXT_TARGET: // For moves hitting two opposing Pokemon.
@@ -4551,6 +4699,9 @@ static void Cmd_returnatktoball(void)
         BtlController_EmitReturnMonToBall(0, 0);
         MarkBattlerForControllerExec(gActiveBattler);
     }
+    // check switchouts here?
+    if(GetBattlerSide(gActiveBattler) == B_SIDE_PLAYER)
+        TryIncrementButtonStat(DB_SWITCHOUTS);
     gBattlescriptCurrInstr++;
 }
 
@@ -5580,6 +5731,7 @@ static u32 GetTrainerMoneyToGive(u16 trainerId)
             moneyReward = 4 * lastMonLevel * gBattleStruct->moneyMultiplier * gTrainerMoneyTable[i].value;
     }
 
+    TryAddButtonStatBy(DB_MONEY_MADE, moneyReward);
     return moneyReward;
 }
 
@@ -7342,6 +7494,7 @@ static void Cmd_givepaydaymoney(void)
         u32 bonusMoney = gPaydayMoney * gBattleStruct->moneyMultiplier;
         AddMoney(&gSaveBlock1Ptr->money, bonusMoney);
 
+        TryAddButtonStatBy(DB_MONEY_MADE, bonusMoney);
         PREPARE_HWORD_NUMBER_BUFFER(gBattleTextBuff1, 5, bonusMoney)
 
         BattleScriptPush(gBattlescriptCurrInstr + 1);
@@ -9751,6 +9904,8 @@ static void Cmd_handleballthrow(void)
     gActiveBattler = gBattlerAttacker;
     gBattlerTarget = gBattlerAttacker ^ BIT_SIDE;
 
+    TryIncrementButtonStat(DB_BALLS_THROWN);
+
     if (gBattleTypeFlags & BATTLE_TYPE_TRAINER)
     {
         BtlController_EmitBallThrowAnim(0, BALL_TRAINER_BLOCK);
@@ -9843,7 +9998,7 @@ static void Cmd_handleballthrow(void)
             }
         }
 
-        if (odds > 254) // mon caught
+        if (CheckSpeedchoiceOption(FAST_CATCH, FAST_CATCH_ON) || odds > 254) // mon caught
         {
             BtlController_EmitBallThrowAnim(0, BALL_3_SHAKES_SUCCESS);
             MarkBattlerForControllerExec(gActiveBattler);
@@ -9867,6 +10022,15 @@ static void Cmd_handleballthrow(void)
             if (gLastUsedItem == ITEM_MASTER_BALL)
                 shakes = BALL_3_SHAKES_SUCCESS; // why calculate the shakes before that check?
 
+            // SPEEDCHOICE CHANGE (2 shakes is max)
+            switch(shakes)
+            {
+                case BALL_3_SHAKES_FAIL:
+                case BALL_2_SHAKES:
+                    shakes = BALL_1_SHAKE;
+                    break;
+            }
+
             BtlController_EmitBallThrowAnim(0, shakes);
             MarkBattlerForControllerExec(gActiveBattler);
 
@@ -9874,6 +10038,7 @@ static void Cmd_handleballthrow(void)
             {
                 gBattlescriptCurrInstr = BattleScript_SuccessBallThrow;
                 SetMonData(&gEnemyParty[gBattlerPartyIndexes[gBattlerTarget]], MON_DATA_POKEBALL, &gLastUsedItem);
+                TryIncrementButtonStat(DB_POKEMON_CAUGHT_IN_BALLS);
 
                 if (CalculatePlayerPartyCount() == PARTY_SIZE)
                     gBattleCommunication[MULTISTRING_CHOOSER] = 0;
diff --git a/src/battle_setup.c b/src/battle_setup.c
index 0a5e7e8b4..002ace4bd 100644
--- a/src/battle_setup.c
+++ b/src/battle_setup.c
@@ -46,6 +46,7 @@
 #include "constants/maps.h"
 #include "constants/trainers.h"
 #include "constants/trainer_hill.h"
+#include "done_button.h"
 
 enum
 {
@@ -408,6 +409,8 @@ static void DoStandardWildBattle(void)
         gBattleTypeFlags |= BATTLE_TYPE_PYRAMID;
     }
     CreateBattleStartTask(GetWildBattleTransition(), 0);
+    TryIncrementButtonStat(DB_BATTLES);
+    TryIncrementButtonStat(DB_WILD_BATTLES);
     IncrementGameStat(GAME_STAT_TOTAL_BATTLES);
     IncrementGameStat(GAME_STAT_WILD_BATTLES);
     IncrementDailyWildBattles();
@@ -422,6 +425,8 @@ void BattleSetup_StartRoamerBattle(void)
     gMain.savedCallback = CB2_EndWildBattle;
     gBattleTypeFlags = BATTLE_TYPE_ROAMER;
     CreateBattleStartTask(GetWildBattleTransition(), 0);
+    TryIncrementButtonStat(DB_BATTLES);
+    TryIncrementButtonStat(DB_WILD_BATTLES);
     IncrementGameStat(GAME_STAT_TOTAL_BATTLES);
     IncrementGameStat(GAME_STAT_WILD_BATTLES);
     IncrementDailyWildBattles();
@@ -446,6 +451,8 @@ static void DoBattlePikeWildBattle(void)
     gMain.savedCallback = CB2_EndWildBattle;
     gBattleTypeFlags = BATTLE_TYPE_PIKE;
     CreateBattleStartTask(GetWildBattleTransition(), 0);
+    TryIncrementButtonStat(DB_BATTLES);
+    TryIncrementButtonStat(DB_WILD_BATTLES);
     IncrementGameStat(GAME_STAT_TOTAL_BATTLES);
     IncrementGameStat(GAME_STAT_WILD_BATTLES);
     IncrementDailyWildBattles();
@@ -455,6 +462,8 @@ static void DoBattlePikeWildBattle(void)
 static void DoTrainerBattle(void)
 {
     CreateBattleStartTask(GetTrainerBattleTransition(), 0);
+    TryIncrementButtonStat(DB_BATTLES);
+    TryIncrementButtonStat(DB_TRAINER_BATTLES);
     IncrementGameStat(GAME_STAT_TOTAL_BATTLES);
     IncrementGameStat(GAME_STAT_TRAINER_BATTLES);
     TryUpdateGymLeaderRematchFromTrainer();
@@ -467,6 +476,8 @@ static void sub_80B0828(void)
     else
         CreateBattleStartTask(GetSpecialBattleTransition(11), 0);
 
+    TryIncrementButtonStat(DB_BATTLES);
+    TryIncrementButtonStat(DB_TRAINER_BATTLES);
     IncrementGameStat(GAME_STAT_TOTAL_BATTLES);
     IncrementGameStat(GAME_STAT_TRAINER_BATTLES);
     TryUpdateGymLeaderRematchFromTrainer();
@@ -488,6 +499,8 @@ void BattleSetup_StartScriptedWildBattle(void)
     gMain.savedCallback = CB2_EndScriptedWildBattle;
     gBattleTypeFlags = 0;
     CreateBattleStartTask(GetWildBattleTransition(), 0);
+    TryIncrementButtonStat(DB_BATTLES);
+    TryIncrementButtonStat(DB_WILD_BATTLES);
     IncrementGameStat(GAME_STAT_TOTAL_BATTLES);
     IncrementGameStat(GAME_STAT_WILD_BATTLES);
     IncrementDailyWildBattles();
@@ -500,6 +513,8 @@ void BattleSetup_StartLatiBattle(void)
     gMain.savedCallback = CB2_EndScriptedWildBattle;
     gBattleTypeFlags = BATTLE_TYPE_LEGENDARY;
     CreateBattleStartTask(GetWildBattleTransition(), 0);
+    TryIncrementButtonStat(DB_BATTLES);
+    TryIncrementButtonStat(DB_WILD_BATTLES);
     IncrementGameStat(GAME_STAT_TOTAL_BATTLES);
     IncrementGameStat(GAME_STAT_WILD_BATTLES);
     IncrementDailyWildBattles();
@@ -538,7 +553,8 @@ void BattleSetup_StartLegendaryBattle(void)
         CreateBattleStartTask(B_TRANSITION_GRID_SQUARES, MUS_VS_MEW);
         break;
     }
-
+    TryIncrementButtonStat(DB_BATTLES);
+    TryIncrementButtonStat(DB_WILD_BATTLES);
     IncrementGameStat(GAME_STAT_TOTAL_BATTLES);
     IncrementGameStat(GAME_STAT_WILD_BATTLES);
     IncrementDailyWildBattles();
@@ -556,6 +572,8 @@ void StartGroudonKyogreBattle(void)
     else
         CreateBattleStartTask(B_TRANSITION_RIPPLE, MUS_VS_KYOGRE_GROUDON); // KYOGRE
 
+    TryIncrementButtonStat(DB_BATTLES);
+    TryIncrementButtonStat(DB_WILD_BATTLES);
     IncrementGameStat(GAME_STAT_TOTAL_BATTLES);
     IncrementGameStat(GAME_STAT_WILD_BATTLES);
     IncrementDailyWildBattles();
@@ -589,6 +607,8 @@ void StartRegiBattle(void)
     }
     CreateBattleStartTask(transitionId, MUS_VS_REGI);
 
+    TryIncrementButtonStat(DB_BATTLES);
+    TryIncrementButtonStat(DB_WILD_BATTLES);
     IncrementGameStat(GAME_STAT_TOTAL_BATTLES);
     IncrementGameStat(GAME_STAT_WILD_BATTLES);
     IncrementDailyWildBattles();
@@ -599,6 +619,9 @@ static void CB2_EndWildBattle(void)
 {
     CpuFill16(0, (void*)(BG_PLTT), BG_PLTT_SIZE);
     ResetOamRange(0, 128);
+    sInSubMenu = FALSE;
+    sInBattle = FALSE;
+    sInField = TRUE;
 
     if (IsPlayerDefeated(gBattleOutcome) == TRUE && !InBattlePyramid() && !InBattlePike())
     {
@@ -615,6 +638,9 @@ static void CB2_EndScriptedWildBattle(void)
 {
     CpuFill16(0, (void*)(BG_PLTT), BG_PLTT_SIZE);
     ResetOamRange(0, 128);
+    sInSubMenu = FALSE;
+    sInBattle = FALSE;
+    sInField = TRUE;
 
     if (IsPlayerDefeated(gBattleOutcome) == TRUE)
     {
@@ -942,6 +968,8 @@ static void CB2_StartFirstBattle(void)
         SetMainCallback2(CB2_InitBattle);
         RestartWildEncounterImmunitySteps();
         ClearPoisonStepCounter();
+        TryIncrementButtonStat(DB_BATTLES);
+        TryIncrementButtonStat(DB_WILD_BATTLES);
         IncrementGameStat(GAME_STAT_TOTAL_BATTLES);
         IncrementGameStat(GAME_STAT_WILD_BATTLES);
         IncrementDailyWildBattles();
@@ -953,6 +981,9 @@ static void CB2_EndFirstBattle(void)
 {
     Overworld_ClearSavedMusic();
     SetMainCallback2(CB2_ReturnToFieldContinueScriptPlayMapMusic);
+    sInSubMenu = FALSE;
+    sInBattle = FALSE;
+    sInField = TRUE;
 }
 
 static void TryUpdateGymLeaderRematchFromWild(void)
@@ -1326,6 +1357,9 @@ void BattleSetup_StartTrainerBattle(void)
 
 static void CB2_EndTrainerBattle(void)
 {
+    sInSubMenu = FALSE;
+    sInBattle = FALSE;
+    sInField = TRUE;
     if (gTrainerBattleOpponent_A == TRAINER_SECRET_BASE)
     {
         SetMainCallback2(CB2_ReturnToFieldContinueScriptPlayMapMusic);
@@ -1350,6 +1384,9 @@ static void CB2_EndTrainerBattle(void)
 
 static void CB2_EndRematchBattle(void)
 {
+    sInSubMenu = FALSE;
+    sInBattle = FALSE;
+    sInField = TRUE;
     if (gTrainerBattleOpponent_A == TRAINER_SECRET_BASE)
     {
         SetMainCallback2(CB2_ReturnToFieldContinueScriptPlayMapMusic);
diff --git a/src/battle_util.c b/src/battle_util.c
index e929de091..64694fd20 100644
--- a/src/battle_util.c
+++ b/src/battle_util.c
@@ -36,6 +36,7 @@
 #include "constants/songs.h"
 #include "constants/species.h"
 #include "constants/weather.h"
+#include "done_button.h"
 
 /*
 NOTE: The data and functions in this file up until (but not including) sSoundMovesTable
@@ -443,6 +444,7 @@ bool8 TryRunFromBattle(u8 battler)
     {
         gCurrentTurnActionNumber = gBattlersCount;
         gBattleOutcome = B_OUTCOME_RAN;
+        TryIncrementButtonStat(DB_BATTLES_FLED);
     }
 
     return effect;
@@ -863,6 +865,20 @@ void PrepareStringBattle(u16 stringId, u8 battler)
     gActiveBattler = battler;
     BtlController_EmitPrintString(0, stringId);
     MarkBattlerForControllerExec(gActiveBattler);
+    if(stringId == STRINGID_ATTACKMISSED)
+    {
+        switch(GetBattlerSide(gBattlerAttacker))
+        {
+            case B_SIDE_PLAYER:
+                TryIncrementButtonStat(DB_OWN_MOVES_MISSED);
+                break;
+            case B_SIDE_OPPONENT:
+                TryIncrementButtonStat(DB_ENEMY_MOVES_MISSED);
+                break;
+        }
+    }
+    if(stringId == STRINGID_CANTESCAPE2 || stringId == STRINGID_CANTESCAPE)
+        TryIncrementButtonStat(DB_FAILED_RUNS);
 }
 
 void ResetSentPokesToOpponentValue(void)
@@ -3954,10 +3970,17 @@ static bool32 HasObedientBitSet(u8 battlerId)
 {
     if (GetBattlerSide(battlerId) == B_SIDE_OPPONENT)
         return TRUE;
+    // ----------------------------------
+    // SPEEDCHOICE CHANGE
+    // ----------------------------------
+    // Do not do Obedience crap for Mew or Deoxys.
+    return TRUE;
+    /*
     if (GetMonData(&gPlayerParty[gBattlerPartyIndexes[battlerId]], MON_DATA_SPECIES, NULL) != SPECIES_DEOXYS
         && GetMonData(&gPlayerParty[gBattlerPartyIndexes[battlerId]], MON_DATA_SPECIES, NULL) != SPECIES_MEW)
             return TRUE;
     return GetMonData(&gPlayerParty[gBattlerPartyIndexes[battlerId]], MON_DATA_OBEDIENCE, NULL);
+    */
 }
 
 u8 IsMonDisobedient(void)
diff --git a/src/bike.c b/src/bike.c
index c4964b627..b69cb4ca3 100644
--- a/src/bike.c
+++ b/src/bike.c
@@ -9,6 +9,7 @@
 #include "sound.h"
 #include "constants/map_types.h"
 #include "constants/songs.h"
+#include "speedchoice.h"
 
 // this file's functions
 static void MovePlayerOnMachBike(u8, u16, u16);
@@ -123,9 +124,21 @@ static const struct BikeHistoryInputInfo sAcroBikeTricksList[] =
     {DIR_EAST, B_BUTTON, 0xF, 0xF, sAcroBikeJumpTimerList, sAcroBikeJumpTimerList, DIR_EAST},
 };
 
-// code
+// -----------------------------------------
+// SPEEDCHOICE CHANGE
+// -----------------------------------------
+// Change: Super Bike used to be set here, but is default now.
 void MovePlayerOnBike(u8 direction, u16 newKeys, u16 heldKeys)
 {
+    if(gMain.newKeys & R_BUTTON)
+    {
+        PlaySE(SE_BIKE_BELL);
+        if(gPlayerAvatar.flags & PLAYER_AVATAR_FLAG_ACRO_BIKE)
+            SetPlayerAvatarTransitionFlags(PLAYER_AVATAR_FLAG_MACH_BIKE);
+        else
+            SetPlayerAvatarTransitionFlags(PLAYER_AVATAR_FLAG_ACRO_BIKE);
+    }
+
     if (gPlayerAvatar.flags & PLAYER_AVATAR_FLAG_MACH_BIKE)
         MovePlayerOnMachBike(direction, newKeys, heldKeys);
     else
@@ -893,17 +906,22 @@ static u8 GetBikeCollisionAt(struct ObjectEvent *objectEvent, s16 x, s16 y, u8 d
 
 bool8 RS_IsRunningDisallowed(u8 tile)
 {
+    //if(CheckSpeedchoiceOption(RUN_EVERYWHERE, RUN_ON) == TRUE)
+        return FALSE;
+    /*
     if (IsRunningDisallowedByMetatile(tile) != FALSE || gMapHeader.mapType == MAP_TYPE_INDOOR)
         return TRUE;
     else
         return FALSE;
+    */
 }
 
 static bool8 IsRunningDisallowedByMetatile(u8 tile)
 {
     if (MetatileBehavior_IsRunningDisallowed(tile))
         return TRUE;
-    if (MetatileBehavior_IsFortreeBridge(tile) && (PlayerGetZCoord() & 1) == 0)
+    if ((0) && 
+         MetatileBehavior_IsFortreeBridge(tile) && (PlayerGetZCoord() & 1) == 0)
         return TRUE;
     return FALSE;
 }
@@ -1055,8 +1073,12 @@ void Bike_HandleBumpySlopeJump(void)
 
 bool32 IsRunningDisallowed(u8 metatile)
 {
+    //if (CheckSpeedchoiceOption(RUN_EVERYWHERE, RUN_ON) == TRUE)
+        return FALSE;
+    /*
     if (!(gMapHeader.flags & MAP_ALLOW_RUNNING) || IsRunningDisallowedByMetatile(metatile) == TRUE)
         return TRUE;
     else
         return FALSE;
+    */
 }
diff --git a/src/data/graphics/items.h b/src/data/graphics/items.h
index 26da9061d..58c5186c9 100644
--- a/src/data/graphics/items.h
+++ b/src/data/graphics/items.h
@@ -736,3 +736,6 @@ const u32 gItemIconPalette_MagmaEmblem[] = INCBIN_U32("graphics/items/icon_palet
 
 const u32 gItemIcon_OldSeaMap[] = INCBIN_U32("graphics/items/icons/old_sea_map.4bpp.lz");
 const u32 gItemIconPalette_OldSeaMap[] = INCBIN_U32("graphics/items/icon_palettes/old_sea_map.gbapal.lz");
+
+const u32 gItemIcon_DoneButton[] = INCBIN_U32("graphics/items/icons/done_button.4bpp.lz");
+const u32 gItemIconPalette_DoneButton[] = INCBIN_U32("graphics/items/icon_palettes/done_button.gbapal.lz");
diff --git a/src/data/item_icon_table.h b/src/data/item_icon_table.h
index c36969ab5..8be0398a1 100644
--- a/src/data/item_icon_table.h
+++ b/src/data/item_icon_table.h
@@ -404,4 +404,5 @@ const u32 *const gItemIconTable[][2] =
     [ITEM_OLD_SEA_MAP] = {gItemIcon_OldSeaMap, gItemIconPalette_OldSeaMap},
     // Return to field arrow
     [ITEM_FIELD_ARROW] = {gItemIcon_ReturnToFieldArrow, gItemIconPalette_ReturnToFieldArrow},
+    [ITEM_DONE_BUTTON] = {gItemIcon_DoneButton, gItemIconPalette_DoneButton},
 };
diff --git a/src/data/items.h b/src/data/items.h
index 30beb5352..2cddfa1b7 100644
--- a/src/data/items.h
+++ b/src/data/items.h
@@ -1256,7 +1256,7 @@ const struct Item gItems[] =
     {
         .name = _("MOON STONE"),
         .itemId = ITEM_MOON_STONE,
-        .price = 0,
+        .price = 2100,
         .description = sMoonStoneDesc,
         .pocket = POCKET_ITEMS,
         .type = 1,
@@ -4884,4 +4884,18 @@ const struct Item gItems[] =
         .fieldUseFunc = ItemUseOutOfBattle_CannotUse,
         .secondaryId = 0,
     },
+
+    [ITEM_DONE_BUTTON] =
+    {
+        .name = _("DONE BUTTON"),
+        .itemId = ITEM_DONE_BUTTON,
+        .price = 0,
+        .description = sDoneButton,
+        .importance = 1,
+        .unk19 = 1,
+        .pocket = POCKET_KEY_ITEMS,
+        .type = 4,
+        .fieldUseFunc = ItemUseOutOfBattle_DoneButton,
+        .secondaryId = 0,
+    },
 };
diff --git a/src/data/lilycove_lady.h b/src/data/lilycove_lady.h
index 37bae7e95..081a17e13 100644
--- a/src/data/lilycove_lady.h
+++ b/src/data/lilycove_lady.h
@@ -268,24 +268,25 @@ static const u16 sQuizLadyQuizAnswers[] =
     EC_WORD_DARK
 };
 
+// SPEEDCHOICE
 static const u16 sQuizLadyPrizes[] =
 {
-    ITEM_GLITTER_MAIL,
-    ITEM_BEAD_MAIL,
-    ITEM_TROPIC_MAIL,
-    ITEM_MAX_ETHER,
-    ITEM_MAX_ETHER,
-    ITEM_MAX_ETHER,
-    ITEM_WATMEL_BERRY,
-    ITEM_BELUE_BERRY,
-    ITEM_DURIN_BERRY,
-    ITEM_LUXURY_BALL,
-    ITEM_TM15_HYPER_BEAM,
-    ITEM_BIG_PEARL,
-    ITEM_STAR_PIECE,
     ITEM_RARE_CANDY,
     ITEM_RARE_CANDY,
-    ITEM_PREMIER_BALL
+    ITEM_RARE_CANDY,
+    ITEM_RARE_CANDY,
+    ITEM_RARE_CANDY,
+    ITEM_RARE_CANDY,
+    ITEM_RARE_CANDY,
+    ITEM_RARE_CANDY,
+    ITEM_RARE_CANDY,
+    ITEM_RARE_CANDY,
+    ITEM_RARE_CANDY,
+    ITEM_RARE_CANDY,
+    ITEM_RARE_CANDY,
+    ITEM_RARE_CANDY,
+    ITEM_RARE_CANDY,
+    ITEM_RARE_CANDY
 };
 
 // Favor Lady data
diff --git a/src/data/party_menu.h b/src/data/party_menu.h
index 3c3a3e1ce..eb32f92f0 100644
--- a/src/data/party_menu.h
+++ b/src/data/party_menu.h
@@ -1202,7 +1202,7 @@ static const u16 sTMHMMoves[] =
     MOVE_TOXIC,
     MOVE_HAIL,
     MOVE_BULK_UP,
-    MOVE_BULLET_SEED,
+    MOVE_SWEET_SCENT, // SPEEDCHOICE (Sweet Scent instead of Bullet Seed)
     MOVE_HIDDEN_POWER,
     MOVE_SUNNY_DAY,
     MOVE_TAUNT,
diff --git a/src/data/region_map/region_map_entries.h b/src/data/region_map/region_map_entries.h
index 6b433f90f..5dc801193 100644
--- a/src/data/region_map/region_map_entries.h
+++ b/src/data/region_map/region_map_entries.h
@@ -198,6 +198,7 @@ static const u8 sMapName_MarineCave[] = _("MARINE CAVE");
 static const u8 sMapName_TerraCave[] = _("TERRA CAVE");
 static const u8 sMapName_DesertUnderpass[] = _("DESERT UNDERPASS");
 static const u8 sMapName_TrainerHill[] = _("TRAINER HILL");
+static const u8 sMapName_AncientCave[] = _("ANCIENT CAVE"); // SPEEDCHOICE
 
 const struct RegionMapLocation gRegionMapEntries[] = {
     [MAPSEC_LITTLEROOT_TOWN]            = { 4, 11, 1, 1, sMapName_LittlerootTown},
@@ -412,7 +413,8 @@ const struct RegionMapLocation gRegionMapEntries[] = {
     [MAPSEC_DESERT_UNDERPASS]           = { 2,  0, 1, 1, sMapName_DesertUnderpass},
     [MAPSEC_ALTERING_CAVE]              = { 6,  8, 1, 1, sMapName_AlteringCave},
     [MAPSEC_NAVEL_ROCK]                 = { 0,  0, 1, 1, sMapName_NavelRock},
-    [MAPSEC_TRAINER_HILL]               = { 8,  4, 1, 1, sMapName_TrainerHill}
+    [MAPSEC_TRAINER_HILL]               = { 8,  4, 1, 1, sMapName_TrainerHill},
+    [MAPSEC_ANCIENT_CAVE]               = {21,  7, 1, 1, sMapName_AncientCave}
 };
 
 #endif //GUARD_DATA_REGION_MAP_REGION_MAP_ENTRIES_H
diff --git a/src/data/text/item_descriptions.h b/src/data/text/item_descriptions.h
index 5f79efc57..2037776aa 100644
--- a/src/data/text/item_descriptions.h
+++ b/src/data/text/item_descriptions.h
@@ -1549,3 +1549,9 @@ static const u8 sOldSeaMapDesc[] = _(
     "A faded sea chart\n"
     "that shows the way\n"
     "to a certain island.");
+
+// SPEEDCHOICE
+static const u8 sDoneButton[] = _(
+    "Ends the current\n"
+    "race. No, you can't\n"
+    "throw it, Keiz.");
diff --git a/src/data/trainers.h b/src/data/trainers.h
index 163a8296d..9ef962e56 100644
--- a/src/data/trainers.h
+++ b/src/data/trainers.h
@@ -11968,4 +11968,18 @@ const struct Trainer gTrainers[] = {
         .partySize = ARRAY_COUNT(sParty_MayLinkPlaceholder),
         .party = {.NoItemDefaultMoves = sParty_MayLinkPlaceholder},
     },
+
+    [TRAINER_ROXANNE_NERFED] =
+    {
+        .partyFlags = F_TRAINER_PARTY_HELD_ITEM | F_TRAINER_PARTY_CUSTOM_MOVESET,
+        .trainerClass = TRAINER_CLASS_LEADER,
+        .encounterMusic_gender = F_TRAINER_FEMALE | TRAINER_ENCOUNTER_MUSIC_FEMALE,
+        .trainerPic = TRAINER_PIC_LEADER_ROXANNE,
+        .trainerName = _("ROXANNE"),
+        .items = {ITEM_NONE, ITEM_NONE, ITEM_NONE, ITEM_NONE},
+        .doubleBattle = FALSE,
+        .aiFlags = AI_SCRIPT_CHECK_BAD_MOVE | AI_SCRIPT_TRY_TO_FAINT | AI_SCRIPT_CHECK_VIABILITY,
+        .partySize = ARRAY_COUNT(sParty_Roxanne1),
+        .party = {.ItemCustomMoves = sParty_Roxanne1},
+    },
 };
diff --git a/src/data/wild_encounters.json b/src/data/wild_encounters.json
index 0b30c0f65..80fa6d14a 100755
--- a/src/data/wild_encounters.json
+++ b/src/data/wild_encounters.json
@@ -7,30 +7,71 @@
         {
           "type": "land_mons",
           "encounter_rates": [
-            20, 20, 10, 10, 10, 10, 5, 5, 4, 4, 1, 1
+            20,
+            20,
+            10,
+            10,
+            10,
+            10,
+            5,
+            5,
+            4,
+            4,
+            1,
+            1
           ]
         },
         {
           "type": "water_mons",
           "encounter_rates": [
-            60, 30, 5, 4, 1
+            60,
+            30,
+            5,
+            4,
+            1
           ]
         },
         {
           "type": "rock_smash_mons",
           "encounter_rates": [
-            60, 30, 5, 4, 1
+            60,
+            30,
+            5,
+            4,
+            1
           ]
         },
         {
           "type": "fishing_mons",
           "encounter_rates": [
-            70, 30, 60, 20, 20, 40, 40, 15, 4, 1
+            70,
+            30,
+            60,
+            20,
+            20,
+            40,
+            40,
+            15,
+            4,
+            1
           ],
           "groups": {
-            "old_rod": [0, 1],
-            "good_rod": [2, 3, 4],
-            "super_rod": [5, 6, 7, 8, 9]
+            "good_rod": [
+              2,
+              3,
+              4
+            ],
+            "old_rod": [
+              0,
+              1
+            ],
+            "super_rod": [
+              5,
+              6,
+              7,
+              8,
+              9
+            ]
           }
         }
       ],
@@ -107,6 +148,91 @@
         {
           "map": "MAP_ROUTE102",
           "base_label": "gRoute102",
+          "water_mons": {
+            "encounter_rate": 4,
+            "mons": [
+              {
+                "min_level": 20,
+                "max_level": 30,
+                "species": "SPECIES_MARILL"
+              },
+              {
+                "min_level": 10,
+                "max_level": 20,
+                "species": "SPECIES_MARILL"
+              },
+              {
+                "min_level": 30,
+                "max_level": 35,
+                "species": "SPECIES_MARILL"
+              },
+              {
+                "min_level": 5,
+                "max_level": 10,
+                "species": "SPECIES_MARILL"
+              },
+              {
+                "min_level": 20,
+                "max_level": 30,
+                "species": "SPECIES_GOLDEEN"
+              }
+            ]
+          },
+          "fishing_mons": {
+            "encounter_rate": 30,
+            "mons": [
+              {
+                "min_level": 5,
+                "max_level": 10,
+                "species": "SPECIES_MAGIKARP"
+              },
+              {
+                "min_level": 5,
+                "max_level": 10,
+                "species": "SPECIES_GOLDEEN"
+              },
+              {
+                "min_level": 10,
+                "max_level": 30,
+                "species": "SPECIES_MAGIKARP"
+              },
+              {
+                "min_level": 10,
+                "max_level": 30,
+                "species": "SPECIES_GOLDEEN"
+              },
+              {
+                "min_level": 10,
+                "max_level": 30,
+                "species": "SPECIES_CORPHISH"
+              },
+              {
+                "min_level": 25,
+                "max_level": 30,
+                "species": "SPECIES_CORPHISH"
+              },
+              {
+                "min_level": 30,
+                "max_level": 35,
+                "species": "SPECIES_CORPHISH"
+              },
+              {
+                "min_level": 20,
+                "max_level": 25,
+                "species": "SPECIES_CORPHISH"
+              },
+              {
+                "min_level": 35,
+                "max_level": 40,
+                "species": "SPECIES_CORPHISH"
+              },
+              {
+                "min_level": 40,
+                "max_level": 45,
+                "species": "SPECIES_CORPHISH"
+              }
+            ]
+          },
           "land_mons": {
             "encounter_rate": 20,
             "mons": [
@@ -171,34 +297,38 @@
                 "species": "SPECIES_SEEDOT"
               }
             ]
-          },
+          }
+        },
+        {
+          "map": "MAP_ROUTE103",
+          "base_label": "gRoute103",
           "water_mons": {
             "encounter_rate": 4,
             "mons": [
               {
-                "min_level": 20,
-                "max_level": 30,
-                "species": "SPECIES_MARILL"
+                "min_level": 5,
+                "max_level": 35,
+                "species": "SPECIES_TENTACOOL"
               },
               {
                 "min_level": 10,
-                "max_level": 20,
-                "species": "SPECIES_MARILL"
+                "max_level": 30,
+                "species": "SPECIES_WINGULL"
               },
               {
-                "min_level": 30,
-                "max_level": 35,
-                "species": "SPECIES_MARILL"
+                "min_level": 15,
+                "max_level": 25,
+                "species": "SPECIES_WINGULL"
               },
               {
-                "min_level": 5,
-                "max_level": 10,
-                "species": "SPECIES_MARILL"
+                "min_level": 25,
+                "max_level": 30,
+                "species": "SPECIES_PELIPPER"
               },
               {
-                "min_level": 20,
+                "min_level": 25,
                 "max_level": 30,
-                "species": "SPECIES_GOLDEEN"
+                "species": "SPECIES_PELIPPER"
               }
             ]
           },
@@ -213,7 +343,7 @@
               {
                 "min_level": 5,
                 "max_level": 10,
-                "species": "SPECIES_GOLDEEN"
+                "species": "SPECIES_TENTACOOL"
               },
               {
                 "min_level": 10,
@@ -223,44 +353,40 @@
               {
                 "min_level": 10,
                 "max_level": 30,
-                "species": "SPECIES_GOLDEEN"
+                "species": "SPECIES_TENTACOOL"
               },
               {
                 "min_level": 10,
                 "max_level": 30,
-                "species": "SPECIES_CORPHISH"
+                "species": "SPECIES_WAILMER"
               },
               {
-                "min_level": 25,
-                "max_level": 30,
-                "species": "SPECIES_CORPHISH"
+                "min_level": 30,
+                "max_level": 35,
+                "species": "SPECIES_SHARPEDO"
               },
               {
                 "min_level": 30,
                 "max_level": 35,
-                "species": "SPECIES_CORPHISH"
+                "species": "SPECIES_WAILMER"
               },
               {
-                "min_level": 20,
-                "max_level": 25,
-                "species": "SPECIES_CORPHISH"
+                "min_level": 25,
+                "max_level": 30,
+                "species": "SPECIES_WAILMER"
               },
               {
                 "min_level": 35,
                 "max_level": 40,
-                "species": "SPECIES_CORPHISH"
+                "species": "SPECIES_WAILMER"
               },
               {
                 "min_level": 40,
                 "max_level": 45,
-                "species": "SPECIES_CORPHISH"
+                "species": "SPECIES_WAILMER"
               }
             ]
-          }
-        },
-        {
-          "map": "MAP_ROUTE103",
-          "base_label": "gRoute103",
+          },
           "land_mons": {
             "encounter_rate": 20,
             "mons": [
@@ -325,15 +451,14 @@
                 "species": "SPECIES_WINGULL"
               }
             ]
-          },
+          }
+        },
+        {
+          "map": "MAP_ROUTE104",
+          "base_label": "gRoute104",
           "water_mons": {
             "encounter_rate": 4,
             "mons": [
-              {
-                "min_level": 5,
-                "max_level": 35,
-                "species": "SPECIES_TENTACOOL"
-              },
               {
                 "min_level": 10,
                 "max_level": 30,
@@ -344,6 +469,11 @@
                 "max_level": 25,
                 "species": "SPECIES_WINGULL"
               },
+              {
+                "min_level": 15,
+                "max_level": 25,
+                "species": "SPECIES_WINGULL"
+              },
               {
                 "min_level": 25,
                 "max_level": 30,
@@ -367,7 +497,7 @@
               {
                 "min_level": 5,
                 "max_level": 10,
-                "species": "SPECIES_TENTACOOL"
+                "species": "SPECIES_MAGIKARP"
               },
               {
                 "min_level": 10,
@@ -377,44 +507,40 @@
               {
                 "min_level": 10,
                 "max_level": 30,
-                "species": "SPECIES_TENTACOOL"
+                "species": "SPECIES_MAGIKARP"
               },
               {
                 "min_level": 10,
                 "max_level": 30,
-                "species": "SPECIES_WAILMER"
+                "species": "SPECIES_MAGIKARP"
               },
               {
-                "min_level": 30,
-                "max_level": 35,
-                "species": "SPECIES_SHARPEDO"
+                "min_level": 25,
+                "max_level": 30,
+                "species": "SPECIES_MAGIKARP"
               },
               {
                 "min_level": 30,
                 "max_level": 35,
-                "species": "SPECIES_WAILMER"
+                "species": "SPECIES_MAGIKARP"
               },
               {
-                "min_level": 25,
-                "max_level": 30,
-                "species": "SPECIES_WAILMER"
+                "min_level": 20,
+                "max_level": 25,
+                "species": "SPECIES_MAGIKARP"
               },
               {
                 "min_level": 35,
                 "max_level": 40,
-                "species": "SPECIES_WAILMER"
+                "species": "SPECIES_MAGIKARP"
               },
               {
                 "min_level": 40,
                 "max_level": 45,
-                "species": "SPECIES_WAILMER"
+                "species": "SPECIES_MAGIKARP"
               }
             ]
-          }
-        },
-        {
-          "map": "MAP_ROUTE104",
-          "base_label": "gRoute104",
+          },
           "land_mons": {
             "encounter_rate": 20,
             "mons": [
@@ -479,18 +605,22 @@
                 "species": "SPECIES_WINGULL"
               }
             ]
-          },
+          }
+        },
+        {
+          "map": "MAP_ROUTE105",
+          "base_label": "gRoute105",
           "water_mons": {
             "encounter_rate": 4,
             "mons": [
               {
-                "min_level": 10,
-                "max_level": 30,
-                "species": "SPECIES_WINGULL"
+                "min_level": 5,
+                "max_level": 35,
+                "species": "SPECIES_TENTACOOL"
               },
               {
-                "min_level": 15,
-                "max_level": 25,
+                "min_level": 10,
+                "max_level": 30,
                 "species": "SPECIES_WINGULL"
               },
               {
@@ -521,7 +651,7 @@
               {
                 "min_level": 5,
                 "max_level": 10,
-                "species": "SPECIES_MAGIKARP"
+                "species": "SPECIES_TENTACOOL"
               },
               {
                 "min_level": 10,
@@ -531,44 +661,44 @@
               {
                 "min_level": 10,
                 "max_level": 30,
-                "species": "SPECIES_MAGIKARP"
+                "species": "SPECIES_TENTACOOL"
               },
               {
                 "min_level": 10,
                 "max_level": 30,
-                "species": "SPECIES_MAGIKARP"
+                "species": "SPECIES_WAILMER"
               },
               {
                 "min_level": 25,
                 "max_level": 30,
-                "species": "SPECIES_MAGIKARP"
+                "species": "SPECIES_WAILMER"
               },
               {
                 "min_level": 30,
                 "max_level": 35,
-                "species": "SPECIES_MAGIKARP"
+                "species": "SPECIES_WAILMER"
               },
               {
                 "min_level": 20,
                 "max_level": 25,
-                "species": "SPECIES_MAGIKARP"
+                "species": "SPECIES_WAILMER"
               },
               {
                 "min_level": 35,
                 "max_level": 40,
-                "species": "SPECIES_MAGIKARP"
+                "species": "SPECIES_WAILMER"
               },
               {
                 "min_level": 40,
                 "max_level": 45,
-                "species": "SPECIES_MAGIKARP"
+                "species": "SPECIES_WAILMER"
               }
             ]
           }
         },
         {
-          "map": "MAP_ROUTE105",
-          "base_label": "gRoute105",
+          "map": "MAP_ROUTE110",
+          "base_label": "gRoute110",
           "water_mons": {
             "encounter_rate": 4,
             "mons": [
@@ -653,11 +783,7 @@
                 "species": "SPECIES_WAILMER"
               }
             ]
-          }
-        },
-        {
-          "map": "MAP_ROUTE110",
-          "base_label": "gRoute110",
+          },
           "land_mons": {
             "encounter_rate": 20,
             "mons": [
@@ -722,34 +848,68 @@
                 "species": "SPECIES_PLUSLE"
               }
             ]
-          },
-          "water_mons": {
-            "encounter_rate": 4,
+          }
+        },
+        {
+          "map": "MAP_ROUTE111",
+          "base_label": "gRoute111",
+          "rock_smash_mons": {
+            "encounter_rate": 20,
             "mons": [
-              {
-                "min_level": 5,
-                "max_level": 35,
-                "species": "SPECIES_TENTACOOL"
-              },
               {
                 "min_level": 10,
-                "max_level": 30,
-                "species": "SPECIES_WINGULL"
+                "max_level": 15,
+                "species": "SPECIES_GEODUDE"
               },
               {
-                "min_level": 15,
-                "max_level": 25,
-                "species": "SPECIES_WINGULL"
+                "min_level": 5,
+                "max_level": 10,
+                "species": "SPECIES_GEODUDE"
               },
               {
-                "min_level": 25,
+                "min_level": 15,
+                "max_level": 20,
+                "species": "SPECIES_GEODUDE"
+              },
+              {
+                "min_level": 15,
+                "max_level": 20,
+                "species": "SPECIES_GEODUDE"
+              },
+              {
+                "min_level": 15,
+                "max_level": 20,
+                "species": "SPECIES_GEODUDE"
+              }
+            ]
+          },
+          "water_mons": {
+            "encounter_rate": 4,
+            "mons": [
+              {
+                "min_level": 20,
                 "max_level": 30,
-                "species": "SPECIES_PELIPPER"
+                "species": "SPECIES_MARILL"
               },
               {
-                "min_level": 25,
+                "min_level": 10,
+                "max_level": 20,
+                "species": "SPECIES_MARILL"
+              },
+              {
+                "min_level": 30,
+                "max_level": 35,
+                "species": "SPECIES_MARILL"
+              },
+              {
+                "min_level": 5,
+                "max_level": 10,
+                "species": "SPECIES_MARILL"
+              },
+              {
+                "min_level": 20,
                 "max_level": 30,
-                "species": "SPECIES_PELIPPER"
+                "species": "SPECIES_GOLDEEN"
               }
             ]
           },
@@ -764,7 +924,7 @@
               {
                 "min_level": 5,
                 "max_level": 10,
-                "species": "SPECIES_TENTACOOL"
+                "species": "SPECIES_GOLDEEN"
               },
               {
                 "min_level": 10,
@@ -774,44 +934,40 @@
               {
                 "min_level": 10,
                 "max_level": 30,
-                "species": "SPECIES_TENTACOOL"
+                "species": "SPECIES_GOLDEEN"
               },
               {
                 "min_level": 10,
                 "max_level": 30,
-                "species": "SPECIES_WAILMER"
+                "species": "SPECIES_BARBOACH"
               },
               {
                 "min_level": 25,
                 "max_level": 30,
-                "species": "SPECIES_WAILMER"
+                "species": "SPECIES_BARBOACH"
               },
               {
                 "min_level": 30,
                 "max_level": 35,
-                "species": "SPECIES_WAILMER"
+                "species": "SPECIES_BARBOACH"
               },
               {
                 "min_level": 20,
                 "max_level": 25,
-                "species": "SPECIES_WAILMER"
+                "species": "SPECIES_BARBOACH"
               },
               {
                 "min_level": 35,
                 "max_level": 40,
-                "species": "SPECIES_WAILMER"
+                "species": "SPECIES_BARBOACH"
               },
               {
                 "min_level": 40,
                 "max_level": 45,
-                "species": "SPECIES_WAILMER"
+                "species": "SPECIES_BARBOACH"
               }
             ]
-          }
-        },
-        {
-          "map": "MAP_ROUTE111",
-          "base_label": "gRoute111",
+          },
           "land_mons": {
             "encounter_rate": 10,
             "mons": [
@@ -876,121 +1032,6 @@
                 "species": "SPECIES_CACNEA"
               }
             ]
-          },
-          "water_mons": {
-            "encounter_rate": 4,
-            "mons": [
-              {
-                "min_level": 20,
-                "max_level": 30,
-                "species": "SPECIES_MARILL"
-              },
-              {
-                "min_level": 10,
-                "max_level": 20,
-                "species": "SPECIES_MARILL"
-              },
-              {
-                "min_level": 30,
-                "max_level": 35,
-                "species": "SPECIES_MARILL"
-              },
-              {
-                "min_level": 5,
-                "max_level": 10,
-                "species": "SPECIES_MARILL"
-              },
-              {
-                "min_level": 20,
-                "max_level": 30,
-                "species": "SPECIES_GOLDEEN"
-              }
-            ]
-          },
-          "rock_smash_mons": {
-            "encounter_rate": 20,
-            "mons": [
-              {
-                "min_level": 10,
-                "max_level": 15,
-                "species": "SPECIES_GEODUDE"
-              },
-              {
-                "min_level": 5,
-                "max_level": 10,
-                "species": "SPECIES_GEODUDE"
-              },
-              {
-                "min_level": 15,
-                "max_level": 20,
-                "species": "SPECIES_GEODUDE"
-              },
-              {
-                "min_level": 15,
-                "max_level": 20,
-                "species": "SPECIES_GEODUDE"
-              },
-              {
-                "min_level": 15,
-                "max_level": 20,
-                "species": "SPECIES_GEODUDE"
-              }
-            ]
-          },
-          "fishing_mons": {
-            "encounter_rate": 30,
-            "mons": [
-              {
-                "min_level": 5,
-                "max_level": 10,
-                "species": "SPECIES_MAGIKARP"
-              },
-              {
-                "min_level": 5,
-                "max_level": 10,
-                "species": "SPECIES_GOLDEEN"
-              },
-              {
-                "min_level": 10,
-                "max_level": 30,
-                "species": "SPECIES_MAGIKARP"
-              },
-              {
-                "min_level": 10,
-                "max_level": 30,
-                "species": "SPECIES_GOLDEEN"
-              },
-              {
-                "min_level": 10,
-                "max_level": 30,
-                "species": "SPECIES_BARBOACH"
-              },
-              {
-                "min_level": 25,
-                "max_level": 30,
-                "species": "SPECIES_BARBOACH"
-              },
-              {
-                "min_level": 30,
-                "max_level": 35,
-                "species": "SPECIES_BARBOACH"
-              },
-              {
-                "min_level": 20,
-                "max_level": 25,
-                "species": "SPECIES_BARBOACH"
-              },
-              {
-                "min_level": 35,
-                "max_level": 40,
-                "species": "SPECIES_BARBOACH"
-              },
-              {
-                "min_level": 40,
-                "max_level": 45,
-                "species": "SPECIES_BARBOACH"
-              }
-            ]
           }
         },
         {
@@ -1134,68 +1175,33 @@
         {
           "map": "MAP_ROUTE114",
           "base_label": "gRoute114",
-          "land_mons": {
+          "rock_smash_mons": {
             "encounter_rate": 20,
             "mons": [
               {
-                "min_level": 16,
-                "max_level": 16,
-                "species": "SPECIES_SWABLU"
-              },
-              {
-                "min_level": 16,
-                "max_level": 16,
-                "species": "SPECIES_LOTAD"
-              },
-              {
-                "min_level": 17,
-                "max_level": 17,
-                "species": "SPECIES_SWABLU"
-              },
-              {
-                "min_level": 15,
-                "max_level": 15,
-                "species": "SPECIES_SWABLU"
-              },
-              {
-                "min_level": 15,
+                "min_level": 10,
                 "max_level": 15,
-                "species": "SPECIES_LOTAD"
-              },
-              {
-                "min_level": 16,
-                "max_level": 16,
-                "species": "SPECIES_LOMBRE"
-              },
-              {
-                "min_level": 16,
-                "max_level": 16,
-                "species": "SPECIES_LOMBRE"
-              },
-              {
-                "min_level": 18,
-                "max_level": 18,
-                "species": "SPECIES_LOMBRE"
+                "species": "SPECIES_GEODUDE"
               },
               {
-                "min_level": 17,
-                "max_level": 17,
-                "species": "SPECIES_SEVIPER"
+                "min_level": 5,
+                "max_level": 10,
+                "species": "SPECIES_GEODUDE"
               },
               {
                 "min_level": 15,
-                "max_level": 15,
-                "species": "SPECIES_SEVIPER"
+                "max_level": 20,
+                "species": "SPECIES_GEODUDE"
               },
               {
-                "min_level": 17,
-                "max_level": 17,
-                "species": "SPECIES_SEVIPER"
+                "min_level": 15,
+                "max_level": 20,
+                "species": "SPECIES_GEODUDE"
               },
               {
                 "min_level": 15,
-                "max_level": 15,
-                "species": "SPECIES_NUZLEAF"
+                "max_level": 20,
+                "species": "SPECIES_GEODUDE"
               }
             ]
           },
@@ -1229,43 +1235,13 @@
               }
             ]
           },
-          "rock_smash_mons": {
-            "encounter_rate": 20,
+          "fishing_mons": {
+            "encounter_rate": 30,
             "mons": [
               {
-                "min_level": 10,
-                "max_level": 15,
-                "species": "SPECIES_GEODUDE"
-              },
-              {
-                "min_level": 5,
-                "max_level": 10,
-                "species": "SPECIES_GEODUDE"
-              },
-              {
-                "min_level": 15,
-                "max_level": 20,
-                "species": "SPECIES_GEODUDE"
-              },
-              {
-                "min_level": 15,
-                "max_level": 20,
-                "species": "SPECIES_GEODUDE"
-              },
-              {
-                "min_level": 15,
-                "max_level": 20,
-                "species": "SPECIES_GEODUDE"
-              }
-            ]
-          },
-          "fishing_mons": {
-            "encounter_rate": 30,
-            "mons": [
-              {
-                "min_level": 5,
-                "max_level": 10,
-                "species": "SPECIES_MAGIKARP"
+                "min_level": 5,
+                "max_level": 10,
+                "species": "SPECIES_MAGIKARP"
               },
               {
                 "min_level": 5,
@@ -1313,6 +1289,71 @@
                 "species": "SPECIES_BARBOACH"
               }
             ]
+          },
+          "land_mons": {
+            "encounter_rate": 20,
+            "mons": [
+              {
+                "min_level": 16,
+                "max_level": 16,
+                "species": "SPECIES_SWABLU"
+              },
+              {
+                "min_level": 16,
+                "max_level": 16,
+                "species": "SPECIES_LOTAD"
+              },
+              {
+                "min_level": 17,
+                "max_level": 17,
+                "species": "SPECIES_SWABLU"
+              },
+              {
+                "min_level": 15,
+                "max_level": 15,
+                "species": "SPECIES_SWABLU"
+              },
+              {
+                "min_level": 15,
+                "max_level": 15,
+                "species": "SPECIES_LOTAD"
+              },
+              {
+                "min_level": 16,
+                "max_level": 16,
+                "species": "SPECIES_LOMBRE"
+              },
+              {
+                "min_level": 16,
+                "max_level": 16,
+                "species": "SPECIES_LOMBRE"
+              },
+              {
+                "min_level": 18,
+                "max_level": 18,
+                "species": "SPECIES_LOMBRE"
+              },
+              {
+                "min_level": 17,
+                "max_level": 17,
+                "species": "SPECIES_SEVIPER"
+              },
+              {
+                "min_level": 15,
+                "max_level": 15,
+                "species": "SPECIES_SEVIPER"
+              },
+              {
+                "min_level": 17,
+                "max_level": 17,
+                "species": "SPECIES_SEVIPER"
+              },
+              {
+                "min_level": 15,
+                "max_level": 15,
+                "species": "SPECIES_NUZLEAF"
+              }
+            ]
           }
         },
         {
@@ -1387,6 +1428,91 @@
         {
           "map": "MAP_ROUTE117",
           "base_label": "gRoute117",
+          "water_mons": {
+            "encounter_rate": 4,
+            "mons": [
+              {
+                "min_level": 20,
+                "max_level": 30,
+                "species": "SPECIES_MARILL"
+              },
+              {
+                "min_level": 10,
+                "max_level": 20,
+                "species": "SPECIES_MARILL"
+              },
+              {
+                "min_level": 30,
+                "max_level": 35,
+                "species": "SPECIES_MARILL"
+              },
+              {
+                "min_level": 5,
+                "max_level": 10,
+                "species": "SPECIES_MARILL"
+              },
+              {
+                "min_level": 20,
+                "max_level": 30,
+                "species": "SPECIES_GOLDEEN"
+              }
+            ]
+          },
+          "fishing_mons": {
+            "encounter_rate": 30,
+            "mons": [
+              {
+                "min_level": 5,
+                "max_level": 10,
+                "species": "SPECIES_MAGIKARP"
+              },
+              {
+                "min_level": 5,
+                "max_level": 10,
+                "species": "SPECIES_GOLDEEN"
+              },
+              {
+                "min_level": 10,
+                "max_level": 30,
+                "species": "SPECIES_MAGIKARP"
+              },
+              {
+                "min_level": 10,
+                "max_level": 30,
+                "species": "SPECIES_GOLDEEN"
+              },
+              {
+                "min_level": 10,
+                "max_level": 30,
+                "species": "SPECIES_CORPHISH"
+              },
+              {
+                "min_level": 25,
+                "max_level": 30,
+                "species": "SPECIES_CORPHISH"
+              },
+              {
+                "min_level": 30,
+                "max_level": 35,
+                "species": "SPECIES_CORPHISH"
+              },
+              {
+                "min_level": 20,
+                "max_level": 25,
+                "species": "SPECIES_CORPHISH"
+              },
+              {
+                "min_level": 35,
+                "max_level": 40,
+                "species": "SPECIES_CORPHISH"
+              },
+              {
+                "min_level": 40,
+                "max_level": 45,
+                "species": "SPECIES_CORPHISH"
+              }
+            ]
+          },
           "land_mons": {
             "encounter_rate": 20,
             "mons": [
@@ -1451,34 +1577,38 @@
                 "species": "SPECIES_SEEDOT"
               }
             ]
-          },
+          }
+        },
+        {
+          "map": "MAP_ROUTE118",
+          "base_label": "gRoute118",
           "water_mons": {
             "encounter_rate": 4,
             "mons": [
               {
-                "min_level": 20,
-                "max_level": 30,
-                "species": "SPECIES_MARILL"
+                "min_level": 5,
+                "max_level": 35,
+                "species": "SPECIES_TENTACOOL"
               },
               {
                 "min_level": 10,
-                "max_level": 20,
-                "species": "SPECIES_MARILL"
+                "max_level": 30,
+                "species": "SPECIES_WINGULL"
               },
               {
-                "min_level": 30,
-                "max_level": 35,
-                "species": "SPECIES_MARILL"
+                "min_level": 15,
+                "max_level": 25,
+                "species": "SPECIES_WINGULL"
               },
               {
-                "min_level": 5,
-                "max_level": 10,
-                "species": "SPECIES_MARILL"
+                "min_level": 25,
+                "max_level": 30,
+                "species": "SPECIES_PELIPPER"
               },
               {
-                "min_level": 20,
+                "min_level": 25,
                 "max_level": 30,
-                "species": "SPECIES_GOLDEEN"
+                "species": "SPECIES_PELIPPER"
               }
             ]
           },
@@ -1493,7 +1623,7 @@
               {
                 "min_level": 5,
                 "max_level": 10,
-                "species": "SPECIES_GOLDEEN"
+                "species": "SPECIES_TENTACOOL"
               },
               {
                 "min_level": 10,
@@ -1503,44 +1633,40 @@
               {
                 "min_level": 10,
                 "max_level": 30,
-                "species": "SPECIES_GOLDEEN"
+                "species": "SPECIES_TENTACOOL"
               },
               {
                 "min_level": 10,
                 "max_level": 30,
-                "species": "SPECIES_CORPHISH"
+                "species": "SPECIES_CARVANHA"
               },
               {
-                "min_level": 25,
-                "max_level": 30,
-                "species": "SPECIES_CORPHISH"
+                "min_level": 30,
+                "max_level": 35,
+                "species": "SPECIES_SHARPEDO"
               },
               {
                 "min_level": 30,
                 "max_level": 35,
-                "species": "SPECIES_CORPHISH"
+                "species": "SPECIES_CARVANHA"
               },
               {
                 "min_level": 20,
                 "max_level": 25,
-                "species": "SPECIES_CORPHISH"
+                "species": "SPECIES_CARVANHA"
               },
               {
                 "min_level": 35,
                 "max_level": 40,
-                "species": "SPECIES_CORPHISH"
+                "species": "SPECIES_CARVANHA"
               },
               {
                 "min_level": 40,
                 "max_level": 45,
-                "species": "SPECIES_CORPHISH"
+                "species": "SPECIES_CARVANHA"
               }
             ]
-          }
-        },
-        {
-          "map": "MAP_ROUTE118",
-          "base_label": "gRoute118",
+          },
           "land_mons": {
             "encounter_rate": 20,
             "mons": [
@@ -1605,7 +1731,11 @@
                 "species": "SPECIES_KECLEON"
               }
             ]
-          },
+          }
+        },
+        {
+          "map": "MAP_ROUTE124",
+          "base_label": "gRoute124",
           "water_mons": {
             "encounter_rate": 4,
             "mons": [
@@ -1662,7 +1792,7 @@
               {
                 "min_level": 10,
                 "max_level": 30,
-                "species": "SPECIES_CARVANHA"
+                "species": "SPECIES_WAILMER"
               },
               {
                 "min_level": 30,
@@ -1672,106 +1802,17 @@
               {
                 "min_level": 30,
                 "max_level": 35,
-                "species": "SPECIES_CARVANHA"
+                "species": "SPECIES_WAILMER"
               },
               {
-                "min_level": 20,
-                "max_level": 25,
-                "species": "SPECIES_CARVANHA"
+                "min_level": 25,
+                "max_level": 30,
+                "species": "SPECIES_WAILMER"
               },
               {
                 "min_level": 35,
                 "max_level": 40,
-                "species": "SPECIES_CARVANHA"
-              },
-              {
-                "min_level": 40,
-                "max_level": 45,
-                "species": "SPECIES_CARVANHA"
-              }
-            ]
-          }
-        },
-        {
-          "map": "MAP_ROUTE124",
-          "base_label": "gRoute124",
-          "water_mons": {
-            "encounter_rate": 4,
-            "mons": [
-              {
-                "min_level": 5,
-                "max_level": 35,
-                "species": "SPECIES_TENTACOOL"
-              },
-              {
-                "min_level": 10,
-                "max_level": 30,
-                "species": "SPECIES_WINGULL"
-              },
-              {
-                "min_level": 15,
-                "max_level": 25,
-                "species": "SPECIES_WINGULL"
-              },
-              {
-                "min_level": 25,
-                "max_level": 30,
-                "species": "SPECIES_PELIPPER"
-              },
-              {
-                "min_level": 25,
-                "max_level": 30,
-                "species": "SPECIES_PELIPPER"
-              }
-            ]
-          },
-          "fishing_mons": {
-            "encounter_rate": 30,
-            "mons": [
-              {
-                "min_level": 5,
-                "max_level": 10,
-                "species": "SPECIES_MAGIKARP"
-              },
-              {
-                "min_level": 5,
-                "max_level": 10,
-                "species": "SPECIES_TENTACOOL"
-              },
-              {
-                "min_level": 10,
-                "max_level": 30,
-                "species": "SPECIES_MAGIKARP"
-              },
-              {
-                "min_level": 10,
-                "max_level": 30,
-                "species": "SPECIES_TENTACOOL"
-              },
-              {
-                "min_level": 10,
-                "max_level": 30,
-                "species": "SPECIES_WAILMER"
-              },
-              {
-                "min_level": 30,
-                "max_level": 35,
-                "species": "SPECIES_SHARPEDO"
-              },
-              {
-                "min_level": 30,
-                "max_level": 35,
-                "species": "SPECIES_WAILMER"
-              },
-              {
-                "min_level": 25,
-                "max_level": 30,
-                "species": "SPECIES_WAILMER"
-              },
-              {
-                "min_level": 35,
-                "max_level": 40,
-                "species": "SPECIES_WAILMER"
+                "species": "SPECIES_WAILMER"
               },
               {
                 "min_level": 40,
@@ -2390,6 +2431,36 @@
         {
           "map": "MAP_GRANITE_CAVE_B2F",
           "base_label": "gGraniteCave_B2F",
+          "rock_smash_mons": {
+            "encounter_rate": 20,
+            "mons": [
+              {
+                "min_level": 10,
+                "max_level": 15,
+                "species": "SPECIES_GEODUDE"
+              },
+              {
+                "min_level": 10,
+                "max_level": 20,
+                "species": "SPECIES_NOSEPASS"
+              },
+              {
+                "min_level": 5,
+                "max_level": 10,
+                "species": "SPECIES_GEODUDE"
+              },
+              {
+                "min_level": 15,
+                "max_level": 20,
+                "species": "SPECIES_GEODUDE"
+              },
+              {
+                "min_level": 15,
+                "max_level": 20,
+                "species": "SPECIES_GEODUDE"
+              }
+            ]
+          },
           "land_mons": {
             "encounter_rate": 10,
             "mons": [
@@ -2454,36 +2525,6 @@
                 "species": "SPECIES_SABLEYE"
               }
             ]
-          },
-          "rock_smash_mons": {
-            "encounter_rate": 20,
-            "mons": [
-              {
-                "min_level": 10,
-                "max_level": 15,
-                "species": "SPECIES_GEODUDE"
-              },
-              {
-                "min_level": 10,
-                "max_level": 20,
-                "species": "SPECIES_NOSEPASS"
-              },
-              {
-                "min_level": 5,
-                "max_level": 10,
-                "species": "SPECIES_GEODUDE"
-              },
-              {
-                "min_level": 15,
-                "max_level": 20,
-                "species": "SPECIES_GEODUDE"
-              },
-              {
-                "min_level": 15,
-                "max_level": 20,
-                "species": "SPECIES_GEODUDE"
-              }
-            ]
           }
         },
         {
@@ -2558,71 +2599,6 @@
         {
           "map": "MAP_METEOR_FALLS_B1F_2R",
           "base_label": "gMeteorFalls_B1F_2R",
-          "land_mons": {
-            "encounter_rate": 10,
-            "mons": [
-              {
-                "min_level": 33,
-                "max_level": 33,
-                "species": "SPECIES_GOLBAT"
-              },
-              {
-                "min_level": 35,
-                "max_level": 35,
-                "species": "SPECIES_GOLBAT"
-              },
-              {
-                "min_level": 30,
-                "max_level": 30,
-                "species": "SPECIES_BAGON"
-              },
-              {
-                "min_level": 35,
-                "max_level": 35,
-                "species": "SPECIES_SOLROCK"
-              },
-              {
-                "min_level": 35,
-                "max_level": 35,
-                "species": "SPECIES_BAGON"
-              },
-              {
-                "min_level": 37,
-                "max_level": 37,
-                "species": "SPECIES_SOLROCK"
-              },
-              {
-                "min_level": 25,
-                "max_level": 25,
-                "species": "SPECIES_BAGON"
-              },
-              {
-                "min_level": 39,
-                "max_level": 39,
-                "species": "SPECIES_SOLROCK"
-              },
-              {
-                "min_level": 38,
-                "max_level": 38,
-                "species": "SPECIES_GOLBAT"
-              },
-              {
-                "min_level": 40,
-                "max_level": 40,
-                "species": "SPECIES_GOLBAT"
-              },
-              {
-                "min_level": 38,
-                "max_level": 38,
-                "species": "SPECIES_GOLBAT"
-              },
-              {
-                "min_level": 40,
-                "max_level": 40,
-                "species": "SPECIES_GOLBAT"
-              }
-            ]
-          },
           "water_mons": {
             "encounter_rate": 4,
             "mons": [
@@ -2707,44 +2683,109 @@
                 "species": "SPECIES_WHISCASH"
               }
             ]
-          }
-        },
-        {
-          "map": "MAP_JAGGED_PASS",
-          "base_label": "gJaggedPass",
+          },
           "land_mons": {
-            "encounter_rate": 20,
+            "encounter_rate": 10,
             "mons": [
               {
-                "min_level": 21,
-                "max_level": 21,
-                "species": "SPECIES_NUMEL"
+                "min_level": 33,
+                "max_level": 33,
+                "species": "SPECIES_GOLBAT"
               },
               {
-                "min_level": 21,
-                "max_level": 21,
-                "species": "SPECIES_NUMEL"
+                "min_level": 35,
+                "max_level": 35,
+                "species": "SPECIES_GOLBAT"
               },
               {
-                "min_level": 21,
-                "max_level": 21,
-                "species": "SPECIES_MACHOP"
+                "min_level": 30,
+                "max_level": 30,
+                "species": "SPECIES_BAGON"
               },
               {
-                "min_level": 20,
-                "max_level": 20,
-                "species": "SPECIES_NUMEL"
+                "min_level": 35,
+                "max_level": 35,
+                "species": "SPECIES_SOLROCK"
               },
               {
-                "min_level": 20,
-                "max_level": 20,
-                "species": "SPECIES_SPOINK"
+                "min_level": 35,
+                "max_level": 35,
+                "species": "SPECIES_BAGON"
               },
               {
-                "min_level": 20,
-                "max_level": 20,
-                "species": "SPECIES_MACHOP"
-              },
+                "min_level": 37,
+                "max_level": 37,
+                "species": "SPECIES_SOLROCK"
+              },
+              {
+                "min_level": 25,
+                "max_level": 25,
+                "species": "SPECIES_BAGON"
+              },
+              {
+                "min_level": 39,
+                "max_level": 39,
+                "species": "SPECIES_SOLROCK"
+              },
+              {
+                "min_level": 38,
+                "max_level": 38,
+                "species": "SPECIES_GOLBAT"
+              },
+              {
+                "min_level": 40,
+                "max_level": 40,
+                "species": "SPECIES_GOLBAT"
+              },
+              {
+                "min_level": 38,
+                "max_level": 38,
+                "species": "SPECIES_GOLBAT"
+              },
+              {
+                "min_level": 40,
+                "max_level": 40,
+                "species": "SPECIES_GOLBAT"
+              }
+            ]
+          }
+        },
+        {
+          "map": "MAP_JAGGED_PASS",
+          "base_label": "gJaggedPass",
+          "land_mons": {
+            "encounter_rate": 20,
+            "mons": [
+              {
+                "min_level": 21,
+                "max_level": 21,
+                "species": "SPECIES_NUMEL"
+              },
+              {
+                "min_level": 21,
+                "max_level": 21,
+                "species": "SPECIES_NUMEL"
+              },
+              {
+                "min_level": 21,
+                "max_level": 21,
+                "species": "SPECIES_MACHOP"
+              },
+              {
+                "min_level": 20,
+                "max_level": 20,
+                "species": "SPECIES_NUMEL"
+              },
+              {
+                "min_level": 20,
+                "max_level": 20,
+                "species": "SPECIES_SPOINK"
+              },
+              {
+                "min_level": 20,
+                "max_level": 20,
+                "species": "SPECIES_MACHOP"
+              },
               {
                 "min_level": 21,
                 "max_level": 21,
@@ -3137,71 +3178,6 @@
         {
           "map": "MAP_ROUTE115",
           "base_label": "gRoute115",
-          "land_mons": {
-            "encounter_rate": 20,
-            "mons": [
-              {
-                "min_level": 23,
-                "max_level": 23,
-                "species": "SPECIES_SWABLU"
-              },
-              {
-                "min_level": 23,
-                "max_level": 23,
-                "species": "SPECIES_TAILLOW"
-              },
-              {
-                "min_level": 25,
-                "max_level": 25,
-                "species": "SPECIES_SWABLU"
-              },
-              {
-                "min_level": 24,
-                "max_level": 24,
-                "species": "SPECIES_TAILLOW"
-              },
-              {
-                "min_level": 25,
-                "max_level": 25,
-                "species": "SPECIES_TAILLOW"
-              },
-              {
-                "min_level": 25,
-                "max_level": 25,
-                "species": "SPECIES_SWELLOW"
-              },
-              {
-                "min_level": 24,
-                "max_level": 24,
-                "species": "SPECIES_JIGGLYPUFF"
-              },
-              {
-                "min_level": 25,
-                "max_level": 25,
-                "species": "SPECIES_JIGGLYPUFF"
-              },
-              {
-                "min_level": 24,
-                "max_level": 24,
-                "species": "SPECIES_WINGULL"
-              },
-              {
-                "min_level": 24,
-                "max_level": 24,
-                "species": "SPECIES_WINGULL"
-              },
-              {
-                "min_level": 26,
-                "max_level": 26,
-                "species": "SPECIES_WINGULL"
-              },
-              {
-                "min_level": 25,
-                "max_level": 25,
-                "species": "SPECIES_WINGULL"
-              }
-            ]
-          },
           "water_mons": {
             "encounter_rate": 4,
             "mons": [
@@ -3286,6 +3262,71 @@
                 "species": "SPECIES_WAILMER"
               }
             ]
+          },
+          "land_mons": {
+            "encounter_rate": 20,
+            "mons": [
+              {
+                "min_level": 23,
+                "max_level": 23,
+                "species": "SPECIES_SWABLU"
+              },
+              {
+                "min_level": 23,
+                "max_level": 23,
+                "species": "SPECIES_TAILLOW"
+              },
+              {
+                "min_level": 25,
+                "max_level": 25,
+                "species": "SPECIES_SWABLU"
+              },
+              {
+                "min_level": 24,
+                "max_level": 24,
+                "species": "SPECIES_TAILLOW"
+              },
+              {
+                "min_level": 25,
+                "max_level": 25,
+                "species": "SPECIES_TAILLOW"
+              },
+              {
+                "min_level": 25,
+                "max_level": 25,
+                "species": "SPECIES_SWELLOW"
+              },
+              {
+                "min_level": 24,
+                "max_level": 24,
+                "species": "SPECIES_JIGGLYPUFF"
+              },
+              {
+                "min_level": 25,
+                "max_level": 25,
+                "species": "SPECIES_JIGGLYPUFF"
+              },
+              {
+                "min_level": 24,
+                "max_level": 24,
+                "species": "SPECIES_WINGULL"
+              },
+              {
+                "min_level": 24,
+                "max_level": 24,
+                "species": "SPECIES_WINGULL"
+              },
+              {
+                "min_level": 26,
+                "max_level": 26,
+                "species": "SPECIES_WINGULL"
+              },
+              {
+                "min_level": 25,
+                "max_level": 25,
+                "species": "SPECIES_WINGULL"
+              }
+            ]
           }
         },
         {
@@ -3360,47 +3401,132 @@
         {
           "map": "MAP_ROUTE119",
           "base_label": "gRoute119",
-          "land_mons": {
-            "encounter_rate": 15,
+          "water_mons": {
+            "encounter_rate": 4,
             "mons": [
               {
-                "min_level": 25,
-                "max_level": 25,
-                "species": "SPECIES_ZIGZAGOON"
+                "min_level": 5,
+                "max_level": 35,
+                "species": "SPECIES_TENTACOOL"
               },
               {
-                "min_level": 25,
-                "max_level": 25,
-                "species": "SPECIES_LINOONE"
+                "min_level": 10,
+                "max_level": 30,
+                "species": "SPECIES_WINGULL"
               },
               {
-                "min_level": 27,
-                "max_level": 27,
-                "species": "SPECIES_ZIGZAGOON"
+                "min_level": 15,
+                "max_level": 25,
+                "species": "SPECIES_WINGULL"
               },
               {
                 "min_level": 25,
-                "max_level": 25,
-                "species": "SPECIES_ODDISH"
+                "max_level": 30,
+                "species": "SPECIES_PELIPPER"
               },
               {
-                "min_level": 27,
-                "max_level": 27,
-                "species": "SPECIES_LINOONE"
-              },
+                "min_level": 25,
+                "max_level": 30,
+                "species": "SPECIES_PELIPPER"
+              }
+            ]
+          },
+          "fishing_mons": {
+            "encounter_rate": 30,
+            "mons": [
               {
-                "min_level": 26,
-                "max_level": 26,
-                "species": "SPECIES_ODDISH"
+                "min_level": 5,
+                "max_level": 10,
+                "species": "SPECIES_MAGIKARP"
               },
               {
-                "min_level": 27,
-                "max_level": 27,
-                "species": "SPECIES_ODDISH"
+                "min_level": 5,
+                "max_level": 10,
+                "species": "SPECIES_TENTACOOL"
               },
               {
-                "min_level": 24,
-                "max_level": 24,
+                "min_level": 10,
+                "max_level": 30,
+                "species": "SPECIES_MAGIKARP"
+              },
+              {
+                "min_level": 10,
+                "max_level": 30,
+                "species": "SPECIES_TENTACOOL"
+              },
+              {
+                "min_level": 10,
+                "max_level": 30,
+                "species": "SPECIES_CARVANHA"
+              },
+              {
+                "min_level": 25,
+                "max_level": 30,
+                "species": "SPECIES_CARVANHA"
+              },
+              {
+                "min_level": 30,
+                "max_level": 35,
+                "species": "SPECIES_CARVANHA"
+              },
+              {
+                "min_level": 20,
+                "max_level": 25,
+                "species": "SPECIES_CARVANHA"
+              },
+              {
+                "min_level": 35,
+                "max_level": 40,
+                "species": "SPECIES_CARVANHA"
+              },
+              {
+                "min_level": 40,
+                "max_level": 45,
+                "species": "SPECIES_CARVANHA"
+              }
+            ]
+          },
+          "land_mons": {
+            "encounter_rate": 15,
+            "mons": [
+              {
+                "min_level": 25,
+                "max_level": 25,
+                "species": "SPECIES_ZIGZAGOON"
+              },
+              {
+                "min_level": 25,
+                "max_level": 25,
+                "species": "SPECIES_LINOONE"
+              },
+              {
+                "min_level": 27,
+                "max_level": 27,
+                "species": "SPECIES_ZIGZAGOON"
+              },
+              {
+                "min_level": 25,
+                "max_level": 25,
+                "species": "SPECIES_ODDISH"
+              },
+              {
+                "min_level": 27,
+                "max_level": 27,
+                "species": "SPECIES_LINOONE"
+              },
+              {
+                "min_level": 26,
+                "max_level": 26,
+                "species": "SPECIES_ODDISH"
+              },
+              {
+                "min_level": 27,
+                "max_level": 27,
+                "species": "SPECIES_ODDISH"
+              },
+              {
+                "min_level": 24,
+                "max_level": 24,
                 "species": "SPECIES_ODDISH"
               },
               {
@@ -3424,34 +3550,38 @@
                 "species": "SPECIES_KECLEON"
               }
             ]
-          },
+          }
+        },
+        {
+          "map": "MAP_ROUTE120",
+          "base_label": "gRoute120",
           "water_mons": {
             "encounter_rate": 4,
             "mons": [
               {
-                "min_level": 5,
-                "max_level": 35,
-                "species": "SPECIES_TENTACOOL"
+                "min_level": 20,
+                "max_level": 30,
+                "species": "SPECIES_MARILL"
               },
               {
                 "min_level": 10,
-                "max_level": 30,
-                "species": "SPECIES_WINGULL"
+                "max_level": 20,
+                "species": "SPECIES_MARILL"
               },
               {
-                "min_level": 15,
-                "max_level": 25,
-                "species": "SPECIES_WINGULL"
+                "min_level": 30,
+                "max_level": 35,
+                "species": "SPECIES_MARILL"
               },
               {
-                "min_level": 25,
-                "max_level": 30,
-                "species": "SPECIES_PELIPPER"
+                "min_level": 5,
+                "max_level": 10,
+                "species": "SPECIES_MARILL"
               },
               {
-                "min_level": 25,
+                "min_level": 20,
                 "max_level": 30,
-                "species": "SPECIES_PELIPPER"
+                "species": "SPECIES_GOLDEEN"
               }
             ]
           },
@@ -3466,7 +3596,7 @@
               {
                 "min_level": 5,
                 "max_level": 10,
-                "species": "SPECIES_TENTACOOL"
+                "species": "SPECIES_GOLDEEN"
               },
               {
                 "min_level": 10,
@@ -3476,44 +3606,40 @@
               {
                 "min_level": 10,
                 "max_level": 30,
-                "species": "SPECIES_TENTACOOL"
+                "species": "SPECIES_GOLDEEN"
               },
               {
                 "min_level": 10,
                 "max_level": 30,
-                "species": "SPECIES_CARVANHA"
+                "species": "SPECIES_BARBOACH"
               },
               {
                 "min_level": 25,
                 "max_level": 30,
-                "species": "SPECIES_CARVANHA"
+                "species": "SPECIES_BARBOACH"
               },
               {
                 "min_level": 30,
                 "max_level": 35,
-                "species": "SPECIES_CARVANHA"
+                "species": "SPECIES_BARBOACH"
               },
               {
                 "min_level": 20,
                 "max_level": 25,
-                "species": "SPECIES_CARVANHA"
+                "species": "SPECIES_BARBOACH"
               },
               {
                 "min_level": 35,
                 "max_level": 40,
-                "species": "SPECIES_CARVANHA"
+                "species": "SPECIES_BARBOACH"
               },
               {
                 "min_level": 40,
                 "max_level": 45,
-                "species": "SPECIES_CARVANHA"
+                "species": "SPECIES_BARBOACH"
               }
             ]
-          }
-        },
-        {
-          "map": "MAP_ROUTE120",
-          "base_label": "gRoute120",
+          },
           "land_mons": {
             "encounter_rate": 20,
             "mons": [
@@ -3578,34 +3704,38 @@
                 "species": "SPECIES_SEEDOT"
               }
             ]
-          },
+          }
+        },
+        {
+          "map": "MAP_ROUTE121",
+          "base_label": "gRoute121",
           "water_mons": {
             "encounter_rate": 4,
             "mons": [
               {
-                "min_level": 20,
-                "max_level": 30,
-                "species": "SPECIES_MARILL"
+                "min_level": 5,
+                "max_level": 35,
+                "species": "SPECIES_TENTACOOL"
               },
               {
                 "min_level": 10,
-                "max_level": 20,
-                "species": "SPECIES_MARILL"
+                "max_level": 30,
+                "species": "SPECIES_WINGULL"
               },
               {
-                "min_level": 30,
-                "max_level": 35,
-                "species": "SPECIES_MARILL"
+                "min_level": 15,
+                "max_level": 25,
+                "species": "SPECIES_WINGULL"
               },
               {
-                "min_level": 5,
-                "max_level": 10,
-                "species": "SPECIES_MARILL"
+                "min_level": 25,
+                "max_level": 30,
+                "species": "SPECIES_PELIPPER"
               },
               {
-                "min_level": 20,
+                "min_level": 25,
                 "max_level": 30,
-                "species": "SPECIES_GOLDEEN"
+                "species": "SPECIES_PELIPPER"
               }
             ]
           },
@@ -3620,7 +3750,7 @@
               {
                 "min_level": 5,
                 "max_level": 10,
-                "species": "SPECIES_GOLDEEN"
+                "species": "SPECIES_TENTACOOL"
               },
               {
                 "min_level": 10,
@@ -3630,44 +3760,40 @@
               {
                 "min_level": 10,
                 "max_level": 30,
-                "species": "SPECIES_GOLDEEN"
+                "species": "SPECIES_TENTACOOL"
               },
               {
                 "min_level": 10,
                 "max_level": 30,
-                "species": "SPECIES_BARBOACH"
+                "species": "SPECIES_WAILMER"
               },
               {
                 "min_level": 25,
                 "max_level": 30,
-                "species": "SPECIES_BARBOACH"
+                "species": "SPECIES_WAILMER"
               },
               {
                 "min_level": 30,
                 "max_level": 35,
-                "species": "SPECIES_BARBOACH"
+                "species": "SPECIES_WAILMER"
               },
               {
                 "min_level": 20,
                 "max_level": 25,
-                "species": "SPECIES_BARBOACH"
+                "species": "SPECIES_WAILMER"
               },
               {
                 "min_level": 35,
                 "max_level": 40,
-                "species": "SPECIES_BARBOACH"
+                "species": "SPECIES_WAILMER"
               },
               {
                 "min_level": 40,
                 "max_level": 45,
-                "species": "SPECIES_BARBOACH"
+                "species": "SPECIES_WAILMER"
               }
             ]
-          }
-        },
-        {
-          "map": "MAP_ROUTE121",
-          "base_label": "gRoute121",
+          },
           "land_mons": {
             "encounter_rate": 20,
             "mons": [
@@ -3732,7 +3858,11 @@
                 "species": "SPECIES_KECLEON"
               }
             ]
-          },
+          }
+        },
+        {
+          "map": "MAP_ROUTE122",
+          "base_label": "gRoute122",
           "water_mons": {
             "encounter_rate": 4,
             "mons": [
@@ -3792,9 +3922,9 @@
                 "species": "SPECIES_WAILMER"
               },
               {
-                "min_level": 25,
-                "max_level": 30,
-                "species": "SPECIES_WAILMER"
+                "min_level": 30,
+                "max_level": 35,
+                "species": "SPECIES_SHARPEDO"
               },
               {
                 "min_level": 30,
@@ -3802,8 +3932,8 @@
                 "species": "SPECIES_WAILMER"
               },
               {
-                "min_level": 20,
-                "max_level": 25,
+                "min_level": 25,
+                "max_level": 30,
                 "species": "SPECIES_WAILMER"
               },
               {
@@ -3820,8 +3950,8 @@
           }
         },
         {
-          "map": "MAP_ROUTE122",
-          "base_label": "gRoute122",
+          "map": "MAP_ROUTE123",
+          "base_label": "gRoute123",
           "water_mons": {
             "encounter_rate": 4,
             "mons": [
@@ -3881,9 +4011,9 @@
                 "species": "SPECIES_WAILMER"
               },
               {
-                "min_level": 30,
-                "max_level": 35,
-                "species": "SPECIES_SHARPEDO"
+                "min_level": 25,
+                "max_level": 30,
+                "species": "SPECIES_WAILMER"
               },
               {
                 "min_level": 30,
@@ -3891,8 +4021,8 @@
                 "species": "SPECIES_WAILMER"
               },
               {
-                "min_level": 25,
-                "max_level": 30,
+                "min_level": 20,
+                "max_level": 25,
                 "species": "SPECIES_WAILMER"
               },
               {
@@ -3906,11 +4036,7 @@
                 "species": "SPECIES_WAILMER"
               }
             ]
-          }
-        },
-        {
-          "map": "MAP_ROUTE123",
-          "base_label": "gRoute123",
+          },
           "land_mons": {
             "encounter_rate": 20,
             "mons": [
@@ -3975,113 +4101,28 @@
                 "species": "SPECIES_KECLEON"
               }
             ]
-          },
-          "water_mons": {
-            "encounter_rate": 4,
+          }
+        },
+        {
+          "map": "MAP_MT_PYRE_2F",
+          "base_label": "gMtPyre_2F",
+          "land_mons": {
+            "encounter_rate": 10,
             "mons": [
               {
-                "min_level": 5,
-                "max_level": 35,
-                "species": "SPECIES_TENTACOOL"
+                "min_level": 27,
+                "max_level": 27,
+                "species": "SPECIES_SHUPPET"
               },
               {
-                "min_level": 10,
-                "max_level": 30,
-                "species": "SPECIES_WINGULL"
+                "min_level": 28,
+                "max_level": 28,
+                "species": "SPECIES_SHUPPET"
               },
               {
-                "min_level": 15,
-                "max_level": 25,
-                "species": "SPECIES_WINGULL"
-              },
-              {
-                "min_level": 25,
-                "max_level": 30,
-                "species": "SPECIES_PELIPPER"
-              },
-              {
-                "min_level": 25,
-                "max_level": 30,
-                "species": "SPECIES_PELIPPER"
-              }
-            ]
-          },
-          "fishing_mons": {
-            "encounter_rate": 30,
-            "mons": [
-              {
-                "min_level": 5,
-                "max_level": 10,
-                "species": "SPECIES_MAGIKARP"
-              },
-              {
-                "min_level": 5,
-                "max_level": 10,
-                "species": "SPECIES_TENTACOOL"
-              },
-              {
-                "min_level": 10,
-                "max_level": 30,
-                "species": "SPECIES_MAGIKARP"
-              },
-              {
-                "min_level": 10,
-                "max_level": 30,
-                "species": "SPECIES_TENTACOOL"
-              },
-              {
-                "min_level": 10,
-                "max_level": 30,
-                "species": "SPECIES_WAILMER"
-              },
-              {
-                "min_level": 25,
-                "max_level": 30,
-                "species": "SPECIES_WAILMER"
-              },
-              {
-                "min_level": 30,
-                "max_level": 35,
-                "species": "SPECIES_WAILMER"
-              },
-              {
-                "min_level": 20,
-                "max_level": 25,
-                "species": "SPECIES_WAILMER"
-              },
-              {
-                "min_level": 35,
-                "max_level": 40,
-                "species": "SPECIES_WAILMER"
-              },
-              {
-                "min_level": 40,
-                "max_level": 45,
-                "species": "SPECIES_WAILMER"
-              }
-            ]
-          }
-        },
-        {
-          "map": "MAP_MT_PYRE_2F",
-          "base_label": "gMtPyre_2F",
-          "land_mons": {
-            "encounter_rate": 10,
-            "mons": [
-              {
-                "min_level": 27,
-                "max_level": 27,
-                "species": "SPECIES_SHUPPET"
-              },
-              {
-                "min_level": 28,
-                "max_level": 28,
-                "species": "SPECIES_SHUPPET"
-              },
-              {
-                "min_level": 26,
-                "max_level": 26,
-                "species": "SPECIES_SHUPPET"
+                "min_level": 26,
+                "max_level": 26,
+                "species": "SPECIES_SHUPPET"
               },
               {
                 "min_level": 25,
@@ -5062,71 +5103,6 @@
         {
           "map": "MAP_ROUTE130",
           "base_label": "gRoute130",
-          "land_mons": {
-            "encounter_rate": 20,
-            "mons": [
-              {
-                "min_level": 30,
-                "max_level": 30,
-                "species": "SPECIES_WYNAUT"
-              },
-              {
-                "min_level": 35,
-                "max_level": 35,
-                "species": "SPECIES_WYNAUT"
-              },
-              {
-                "min_level": 25,
-                "max_level": 25,
-                "species": "SPECIES_WYNAUT"
-              },
-              {
-                "min_level": 40,
-                "max_level": 40,
-                "species": "SPECIES_WYNAUT"
-              },
-              {
-                "min_level": 20,
-                "max_level": 20,
-                "species": "SPECIES_WYNAUT"
-              },
-              {
-                "min_level": 45,
-                "max_level": 45,
-                "species": "SPECIES_WYNAUT"
-              },
-              {
-                "min_level": 15,
-                "max_level": 15,
-                "species": "SPECIES_WYNAUT"
-              },
-              {
-                "min_level": 50,
-                "max_level": 50,
-                "species": "SPECIES_WYNAUT"
-              },
-              {
-                "min_level": 10,
-                "max_level": 10,
-                "species": "SPECIES_WYNAUT"
-              },
-              {
-                "min_level": 5,
-                "max_level": 5,
-                "species": "SPECIES_WYNAUT"
-              },
-              {
-                "min_level": 10,
-                "max_level": 10,
-                "species": "SPECIES_WYNAUT"
-              },
-              {
-                "min_level": 5,
-                "max_level": 5,
-                "species": "SPECIES_WYNAUT"
-              }
-            ]
-          },
           "water_mons": {
             "encounter_rate": 4,
             "mons": [
@@ -5211,6 +5187,71 @@
                 "species": "SPECIES_WAILMER"
               }
             ]
+          },
+          "land_mons": {
+            "encounter_rate": 20,
+            "mons": [
+              {
+                "min_level": 30,
+                "max_level": 30,
+                "species": "SPECIES_WYNAUT"
+              },
+              {
+                "min_level": 35,
+                "max_level": 35,
+                "species": "SPECIES_WYNAUT"
+              },
+              {
+                "min_level": 25,
+                "max_level": 25,
+                "species": "SPECIES_WYNAUT"
+              },
+              {
+                "min_level": 40,
+                "max_level": 40,
+                "species": "SPECIES_WYNAUT"
+              },
+              {
+                "min_level": 20,
+                "max_level": 20,
+                "species": "SPECIES_WYNAUT"
+              },
+              {
+                "min_level": 45,
+                "max_level": 45,
+                "species": "SPECIES_WYNAUT"
+              },
+              {
+                "min_level": 15,
+                "max_level": 15,
+                "species": "SPECIES_WYNAUT"
+              },
+              {
+                "min_level": 50,
+                "max_level": 50,
+                "species": "SPECIES_WYNAUT"
+              },
+              {
+                "min_level": 10,
+                "max_level": 10,
+                "species": "SPECIES_WYNAUT"
+              },
+              {
+                "min_level": 5,
+                "max_level": 5,
+                "species": "SPECIES_WYNAUT"
+              },
+              {
+                "min_level": 10,
+                "max_level": 10,
+                "species": "SPECIES_WYNAUT"
+              },
+              {
+                "min_level": 5,
+                "max_level": 5,
+                "species": "SPECIES_WYNAUT"
+              }
+            ]
           }
         },
         {
@@ -6006,108 +6047,43 @@
         {
           "map": "MAP_SEAFLOOR_CAVERN_ROOM6",
           "base_label": "gSeafloorCavern_Room6",
-          "land_mons": {
+          "water_mons": {
             "encounter_rate": 4,
             "mons": [
               {
-                "min_level": 30,
-                "max_level": 30,
-                "species": "SPECIES_ZUBAT"
+                "min_level": 5,
+                "max_level": 35,
+                "species": "SPECIES_TENTACOOL"
               },
               {
-                "min_level": 31,
-                "max_level": 31,
+                "min_level": 5,
+                "max_level": 35,
                 "species": "SPECIES_ZUBAT"
               },
               {
-                "min_level": 32,
-                "max_level": 32,
+                "min_level": 30,
+                "max_level": 35,
                 "species": "SPECIES_ZUBAT"
               },
               {
-                "min_level": 33,
-                "max_level": 33,
-                "species": "SPECIES_ZUBAT"
+                "min_level": 30,
+                "max_level": 35,
+                "species": "SPECIES_GOLBAT"
               },
               {
-                "min_level": 28,
-                "max_level": 28,
-                "species": "SPECIES_ZUBAT"
-              },
-              {
-                "min_level": 29,
-                "max_level": 29,
-                "species": "SPECIES_ZUBAT"
-              },
-              {
-                "min_level": 34,
-                "max_level": 34,
-                "species": "SPECIES_ZUBAT"
-              },
-              {
-                "min_level": 35,
-                "max_level": 35,
-                "species": "SPECIES_ZUBAT"
-              },
-              {
-                "min_level": 34,
-                "max_level": 34,
-                "species": "SPECIES_GOLBAT"
-              },
-              {
-                "min_level": 35,
-                "max_level": 35,
-                "species": "SPECIES_GOLBAT"
-              },
-              {
-                "min_level": 33,
-                "max_level": 33,
-                "species": "SPECIES_GOLBAT"
-              },
-              {
-                "min_level": 36,
-                "max_level": 36,
-                "species": "SPECIES_GOLBAT"
-              }
-            ]
-          },
-          "water_mons": {
-            "encounter_rate": 4,
-            "mons": [
-              {
-                "min_level": 5,
-                "max_level": 35,
-                "species": "SPECIES_TENTACOOL"
-              },
-              {
-                "min_level": 5,
-                "max_level": 35,
-                "species": "SPECIES_ZUBAT"
-              },
-              {
-                "min_level": 30,
-                "max_level": 35,
-                "species": "SPECIES_ZUBAT"
-              },
-              {
-                "min_level": 30,
-                "max_level": 35,
-                "species": "SPECIES_GOLBAT"
-              },
-              {
-                "min_level": 30,
-                "max_level": 35,
-                "species": "SPECIES_GOLBAT"
-              }
-            ]
-          },
-          "fishing_mons": {
-            "encounter_rate": 10,
-            "mons": [
-              {
-                "min_level": 5,
-                "max_level": 10,
-                "species": "SPECIES_MAGIKARP"
+                "min_level": 30,
+                "max_level": 35,
+                "species": "SPECIES_GOLBAT"
+              }
+            ]
+          },
+          "fishing_mons": {
+            "encounter_rate": 10,
+            "mons": [
+              {
+                "min_level": 5,
+                "max_level": 10,
+                "species": "SPECIES_MAGIKARP"
               },
               {
                 "min_level": 5,
@@ -6155,11 +6131,7 @@
                 "species": "SPECIES_WAILMER"
               }
             ]
-          }
-        },
-        {
-          "map": "MAP_SEAFLOOR_CAVERN_ROOM7",
-          "base_label": "gSeafloorCavern_Room7",
+          },
           "land_mons": {
             "encounter_rate": 4,
             "mons": [
@@ -6224,7 +6196,11 @@
                 "species": "SPECIES_GOLBAT"
               }
             ]
-          },
+          }
+        },
+        {
+          "map": "MAP_SEAFLOOR_CAVERN_ROOM7",
+          "base_label": "gSeafloorCavern_Room7",
           "water_mons": {
             "encounter_rate": 4,
             "mons": [
@@ -6309,6 +6285,71 @@
                 "species": "SPECIES_WAILMER"
               }
             ]
+          },
+          "land_mons": {
+            "encounter_rate": 4,
+            "mons": [
+              {
+                "min_level": 30,
+                "max_level": 30,
+                "species": "SPECIES_ZUBAT"
+              },
+              {
+                "min_level": 31,
+                "max_level": 31,
+                "species": "SPECIES_ZUBAT"
+              },
+              {
+                "min_level": 32,
+                "max_level": 32,
+                "species": "SPECIES_ZUBAT"
+              },
+              {
+                "min_level": 33,
+                "max_level": 33,
+                "species": "SPECIES_ZUBAT"
+              },
+              {
+                "min_level": 28,
+                "max_level": 28,
+                "species": "SPECIES_ZUBAT"
+              },
+              {
+                "min_level": 29,
+                "max_level": 29,
+                "species": "SPECIES_ZUBAT"
+              },
+              {
+                "min_level": 34,
+                "max_level": 34,
+                "species": "SPECIES_ZUBAT"
+              },
+              {
+                "min_level": 35,
+                "max_level": 35,
+                "species": "SPECIES_ZUBAT"
+              },
+              {
+                "min_level": 34,
+                "max_level": 34,
+                "species": "SPECIES_GOLBAT"
+              },
+              {
+                "min_level": 35,
+                "max_level": 35,
+                "species": "SPECIES_GOLBAT"
+              },
+              {
+                "min_level": 33,
+                "max_level": 33,
+                "species": "SPECIES_GOLBAT"
+              },
+              {
+                "min_level": 36,
+                "max_level": 36,
+                "species": "SPECIES_GOLBAT"
+              }
+            ]
           }
         },
         {
@@ -6886,71 +6927,6 @@
         {
           "map": "MAP_SAFARI_ZONE_SOUTHWEST",
           "base_label": "gSafariZone_Southwest",
-          "land_mons": {
-            "encounter_rate": 25,
-            "mons": [
-              {
-                "min_level": 25,
-                "max_level": 25,
-                "species": "SPECIES_ODDISH"
-              },
-              {
-                "min_level": 27,
-                "max_level": 27,
-                "species": "SPECIES_ODDISH"
-              },
-              {
-                "min_level": 25,
-                "max_level": 25,
-                "species": "SPECIES_GIRAFARIG"
-              },
-              {
-                "min_level": 27,
-                "max_level": 27,
-                "species": "SPECIES_GIRAFARIG"
-              },
-              {
-                "min_level": 25,
-                "max_level": 25,
-                "species": "SPECIES_NATU"
-              },
-              {
-                "min_level": 27,
-                "max_level": 27,
-                "species": "SPECIES_DODUO"
-              },
-              {
-                "min_level": 25,
-                "max_level": 25,
-                "species": "SPECIES_GLOOM"
-              },
-              {
-                "min_level": 27,
-                "max_level": 27,
-                "species": "SPECIES_WOBBUFFET"
-              },
-              {
-                "min_level": 25,
-                "max_level": 25,
-                "species": "SPECIES_PIKACHU"
-              },
-              {
-                "min_level": 27,
-                "max_level": 27,
-                "species": "SPECIES_WOBBUFFET"
-              },
-              {
-                "min_level": 27,
-                "max_level": 27,
-                "species": "SPECIES_PIKACHU"
-              },
-              {
-                "min_level": 29,
-                "max_level": 29,
-                "species": "SPECIES_WOBBUFFET"
-              }
-            ]
-          },
           "water_mons": {
             "encounter_rate": 9,
             "mons": [
@@ -7035,18 +7011,14 @@
                 "species": "SPECIES_SEAKING"
               }
             ]
-          }
-        },
-        {
-          "map": "MAP_SAFARI_ZONE_NORTH",
-          "base_label": "gSafariZone_North",
+          },
           "land_mons": {
             "encounter_rate": 25,
             "mons": [
               {
-                "min_level": 27,
-                "max_level": 27,
-                "species": "SPECIES_PHANPY"
+                "min_level": 25,
+                "max_level": 25,
+                "species": "SPECIES_ODDISH"
               },
               {
                 "min_level": 27,
@@ -7054,57 +7026,61 @@
                 "species": "SPECIES_ODDISH"
               },
               {
-                "min_level": 29,
-                "max_level": 29,
-                "species": "SPECIES_PHANPY"
-              },
-              {
-                "min_level": 29,
-                "max_level": 29,
-                "species": "SPECIES_ODDISH"
+                "min_level": 25,
+                "max_level": 25,
+                "species": "SPECIES_GIRAFARIG"
               },
               {
                 "min_level": 27,
                 "max_level": 27,
+                "species": "SPECIES_GIRAFARIG"
+              },
+              {
+                "min_level": 25,
+                "max_level": 25,
                 "species": "SPECIES_NATU"
               },
               {
-                "min_level": 29,
-                "max_level": 29,
-                "species": "SPECIES_GLOOM"
+                "min_level": 27,
+                "max_level": 27,
+                "species": "SPECIES_DODUO"
               },
               {
-                "min_level": 31,
-                "max_level": 31,
+                "min_level": 25,
+                "max_level": 25,
                 "species": "SPECIES_GLOOM"
               },
               {
-                "min_level": 29,
-                "max_level": 29,
-                "species": "SPECIES_NATU"
+                "min_level": 27,
+                "max_level": 27,
+                "species": "SPECIES_WOBBUFFET"
               },
               {
-                "min_level": 29,
-                "max_level": 29,
-                "species": "SPECIES_XATU"
+                "min_level": 25,
+                "max_level": 25,
+                "species": "SPECIES_PIKACHU"
               },
               {
                 "min_level": 27,
                 "max_level": 27,
-                "species": "SPECIES_HERACROSS"
+                "species": "SPECIES_WOBBUFFET"
               },
               {
-                "min_level": 31,
-                "max_level": 31,
-                "species": "SPECIES_XATU"
+                "min_level": 27,
+                "max_level": 27,
+                "species": "SPECIES_PIKACHU"
               },
               {
                 "min_level": 29,
                 "max_level": 29,
-                "species": "SPECIES_HERACROSS"
+                "species": "SPECIES_WOBBUFFET"
               }
             ]
-          },
+          }
+        },
+        {
+          "map": "MAP_SAFARI_ZONE_NORTH",
+          "base_label": "gSafariZone_North",
           "rock_smash_mons": {
             "encounter_rate": 25,
             "mons": [
@@ -7134,18 +7110,14 @@
                 "species": "SPECIES_GEODUDE"
               }
             ]
-          }
-        },
-        {
-          "map": "MAP_SAFARI_ZONE_NORTHWEST",
-          "base_label": "gSafariZone_Northwest",
+          },
           "land_mons": {
             "encounter_rate": 25,
             "mons": [
               {
                 "min_level": 27,
                 "max_level": 27,
-                "species": "SPECIES_RHYHORN"
+                "species": "SPECIES_PHANPY"
               },
               {
                 "min_level": 27,
@@ -7155,7 +7127,7 @@
               {
                 "min_level": 29,
                 "max_level": 29,
-                "species": "SPECIES_RHYHORN"
+                "species": "SPECIES_PHANPY"
               },
               {
                 "min_level": 29,
@@ -7165,7 +7137,7 @@
               {
                 "min_level": 27,
                 "max_level": 27,
-                "species": "SPECIES_DODUO"
+                "species": "SPECIES_NATU"
               },
               {
                 "min_level": 29,
@@ -7180,30 +7152,34 @@
               {
                 "min_level": 29,
                 "max_level": 29,
-                "species": "SPECIES_DODUO"
+                "species": "SPECIES_NATU"
               },
               {
                 "min_level": 29,
                 "max_level": 29,
-                "species": "SPECIES_DODRIO"
+                "species": "SPECIES_XATU"
               },
               {
                 "min_level": 27,
                 "max_level": 27,
-                "species": "SPECIES_PINSIR"
+                "species": "SPECIES_HERACROSS"
               },
               {
                 "min_level": 31,
                 "max_level": 31,
-                "species": "SPECIES_DODRIO"
+                "species": "SPECIES_XATU"
               },
               {
                 "min_level": 29,
                 "max_level": 29,
-                "species": "SPECIES_PINSIR"
+                "species": "SPECIES_HERACROSS"
               }
             ]
-          },
+          }
+        },
+        {
+          "map": "MAP_SAFARI_ZONE_NORTHWEST",
+          "base_label": "gSafariZone_Northwest",
           "water_mons": {
             "encounter_rate": 9,
             "mons": [
@@ -7288,11 +7264,106 @@
                 "species": "SPECIES_SEAKING"
               }
             ]
+          },
+          "land_mons": {
+            "encounter_rate": 25,
+            "mons": [
+              {
+                "min_level": 27,
+                "max_level": 27,
+                "species": "SPECIES_RHYHORN"
+              },
+              {
+                "min_level": 27,
+                "max_level": 27,
+                "species": "SPECIES_ODDISH"
+              },
+              {
+                "min_level": 29,
+                "max_level": 29,
+                "species": "SPECIES_RHYHORN"
+              },
+              {
+                "min_level": 29,
+                "max_level": 29,
+                "species": "SPECIES_ODDISH"
+              },
+              {
+                "min_level": 27,
+                "max_level": 27,
+                "species": "SPECIES_DODUO"
+              },
+              {
+                "min_level": 29,
+                "max_level": 29,
+                "species": "SPECIES_GLOOM"
+              },
+              {
+                "min_level": 31,
+                "max_level": 31,
+                "species": "SPECIES_GLOOM"
+              },
+              {
+                "min_level": 29,
+                "max_level": 29,
+                "species": "SPECIES_DODUO"
+              },
+              {
+                "min_level": 29,
+                "max_level": 29,
+                "species": "SPECIES_DODRIO"
+              },
+              {
+                "min_level": 27,
+                "max_level": 27,
+                "species": "SPECIES_PINSIR"
+              },
+              {
+                "min_level": 31,
+                "max_level": 31,
+                "species": "SPECIES_DODRIO"
+              },
+              {
+                "min_level": 29,
+                "max_level": 29,
+                "species": "SPECIES_PINSIR"
+              }
+            ]
           }
         },
         {
           "map": "MAP_VICTORY_ROAD_B1F",
           "base_label": "gVictoryRoad_B1F",
+          "rock_smash_mons": {
+            "encounter_rate": 20,
+            "mons": [
+              {
+                "min_level": 30,
+                "max_level": 40,
+                "species": "SPECIES_GRAVELER"
+              },
+              {
+                "min_level": 30,
+                "max_level": 40,
+                "species": "SPECIES_GEODUDE"
+              },
+              {
+                "min_level": 35,
+                "max_level": 40,
+                "species": "SPECIES_GRAVELER"
+              },
+              {
+                "min_level": 35,
+                "max_level": 40,
+                "species": "SPECIES_GRAVELER"
+              },
+              {
+                "min_level": 35,
+                "max_level": 40,
+                "species": "SPECIES_GRAVELER"
+              }
+            ]
+          },
           "land_mons": {
             "encounter_rate": 10,
             "mons": [
@@ -7357,41 +7428,96 @@
                 "species": "SPECIES_MAWILE"
               }
             ]
-          },
-          "rock_smash_mons": {
-            "encounter_rate": 20,
+          }
+        },
+        {
+          "map": "MAP_VICTORY_ROAD_B2F",
+          "base_label": "gVictoryRoad_B2F",
+          "water_mons": {
+            "encounter_rate": 4,
             "mons": [
               {
                 "min_level": 30,
-                "max_level": 40,
-                "species": "SPECIES_GRAVELER"
+                "max_level": 35,
+                "species": "SPECIES_GOLBAT"
               },
               {
-                "min_level": 30,
+                "min_level": 25,
+                "max_level": 30,
+                "species": "SPECIES_GOLBAT"
+              },
+              {
+                "min_level": 35,
                 "max_level": 40,
-                "species": "SPECIES_GEODUDE"
+                "species": "SPECIES_GOLBAT"
               },
               {
                 "min_level": 35,
                 "max_level": 40,
-                "species": "SPECIES_GRAVELER"
+                "species": "SPECIES_GOLBAT"
               },
               {
                 "min_level": 35,
                 "max_level": 40,
-                "species": "SPECIES_GRAVELER"
+                "species": "SPECIES_GOLBAT"
+              }
+            ]
+          },
+          "fishing_mons": {
+            "encounter_rate": 30,
+            "mons": [
+              {
+                "min_level": 5,
+                "max_level": 10,
+                "species": "SPECIES_MAGIKARP"
+              },
+              {
+                "min_level": 5,
+                "max_level": 10,
+                "species": "SPECIES_GOLDEEN"
+              },
+              {
+                "min_level": 10,
+                "max_level": 30,
+                "species": "SPECIES_MAGIKARP"
+              },
+              {
+                "min_level": 10,
+                "max_level": 30,
+                "species": "SPECIES_GOLDEEN"
+              },
+              {
+                "min_level": 10,
+                "max_level": 30,
+                "species": "SPECIES_BARBOACH"
+              },
+              {
+                "min_level": 25,
+                "max_level": 30,
+                "species": "SPECIES_BARBOACH"
+              },
+              {
+                "min_level": 30,
+                "max_level": 35,
+                "species": "SPECIES_BARBOACH"
+              },
+              {
+                "min_level": 30,
+                "max_level": 35,
+                "species": "SPECIES_WHISCASH"
               },
               {
                 "min_level": 35,
                 "max_level": 40,
-                "species": "SPECIES_GRAVELER"
+                "species": "SPECIES_WHISCASH"
+              },
+              {
+                "min_level": 40,
+                "max_level": 45,
+                "species": "SPECIES_WHISCASH"
               }
             ]
-          }
-        },
-        {
-          "map": "MAP_VICTORY_ROAD_B2F",
-          "base_label": "gVictoryRoad_B2F",
+          },
           "land_mons": {
             "encounter_rate": 10,
             "mons": [
@@ -7456,34 +7582,38 @@
                 "species": "SPECIES_MAWILE"
               }
             ]
-          },
+          }
+        },
+        {
+          "map": "MAP_METEOR_FALLS_1F_1R",
+          "base_label": "gMeteorFalls_1F_1R",
           "water_mons": {
             "encounter_rate": 4,
             "mons": [
               {
-                "min_level": 30,
+                "min_level": 5,
                 "max_level": 35,
-                "species": "SPECIES_GOLBAT"
+                "species": "SPECIES_ZUBAT"
               },
               {
-                "min_level": 25,
-                "max_level": 30,
-                "species": "SPECIES_GOLBAT"
+                "min_level": 30,
+                "max_level": 35,
+                "species": "SPECIES_ZUBAT"
               },
               {
-                "min_level": 35,
-                "max_level": 40,
-                "species": "SPECIES_GOLBAT"
+                "min_level": 25,
+                "max_level": 35,
+                "species": "SPECIES_SOLROCK"
               },
               {
-                "min_level": 35,
-                "max_level": 40,
-                "species": "SPECIES_GOLBAT"
+                "min_level": 15,
+                "max_level": 25,
+                "species": "SPECIES_SOLROCK"
               },
               {
-                "min_level": 35,
-                "max_level": 40,
-                "species": "SPECIES_GOLBAT"
+                "min_level": 5,
+                "max_level": 15,
+                "species": "SPECIES_SOLROCK"
               }
             ]
           },
@@ -7526,26 +7656,22 @@
                 "species": "SPECIES_BARBOACH"
               },
               {
-                "min_level": 30,
-                "max_level": 35,
-                "species": "SPECIES_WHISCASH"
+                "min_level": 20,
+                "max_level": 25,
+                "species": "SPECIES_BARBOACH"
               },
               {
                 "min_level": 35,
                 "max_level": 40,
-                "species": "SPECIES_WHISCASH"
+                "species": "SPECIES_BARBOACH"
               },
               {
                 "min_level": 40,
                 "max_level": 45,
-                "species": "SPECIES_WHISCASH"
+                "species": "SPECIES_BARBOACH"
               }
             ]
-          }
-        },
-        {
-          "map": "MAP_METEOR_FALLS_1F_1R",
-          "base_label": "gMeteorFalls_1F_1R",
+          },
           "land_mons": {
             "encounter_rate": 10,
             "mons": [
@@ -7610,19 +7736,23 @@
                 "species": "SPECIES_ZUBAT"
               }
             ]
-          },
+          }
+        },
+        {
+          "map": "MAP_METEOR_FALLS_1F_2R",
+          "base_label": "gMeteorFalls_1F_2R",
           "water_mons": {
             "encounter_rate": 4,
             "mons": [
               {
-                "min_level": 5,
+                "min_level": 30,
                 "max_level": 35,
-                "species": "SPECIES_ZUBAT"
+                "species": "SPECIES_GOLBAT"
               },
               {
                 "min_level": 30,
                 "max_level": 35,
-                "species": "SPECIES_ZUBAT"
+                "species": "SPECIES_GOLBAT"
               },
               {
                 "min_level": 25,
@@ -7680,26 +7810,22 @@
                 "species": "SPECIES_BARBOACH"
               },
               {
-                "min_level": 20,
-                "max_level": 25,
-                "species": "SPECIES_BARBOACH"
+                "min_level": 30,
+                "max_level": 35,
+                "species": "SPECIES_WHISCASH"
               },
               {
                 "min_level": 35,
                 "max_level": 40,
-                "species": "SPECIES_BARBOACH"
+                "species": "SPECIES_WHISCASH"
               },
               {
                 "min_level": 40,
                 "max_level": 45,
-                "species": "SPECIES_BARBOACH"
+                "species": "SPECIES_WHISCASH"
               }
             ]
-          }
-        },
-        {
-          "map": "MAP_METEOR_FALLS_1F_2R",
-          "base_label": "gMeteorFalls_1F_2R",
+          },
           "land_mons": {
             "encounter_rate": 10,
             "mons": [
@@ -7764,7 +7890,11 @@
                 "species": "SPECIES_GOLBAT"
               }
             ]
-          },
+          }
+        },
+        {
+          "map": "MAP_METEOR_FALLS_B1F_1R",
+          "base_label": "gMeteorFalls_B1F_1R",
           "water_mons": {
             "encounter_rate": 4,
             "mons": [
@@ -7849,11 +7979,7 @@
                 "species": "SPECIES_WHISCASH"
               }
             ]
-          }
-        },
-        {
-          "map": "MAP_METEOR_FALLS_B1F_1R",
-          "base_label": "gMeteorFalls_B1F_1R",
+          },
           "land_mons": {
             "encounter_rate": 10,
             "mons": [
@@ -7918,91 +8044,6 @@
                 "species": "SPECIES_GOLBAT"
               }
             ]
-          },
-          "water_mons": {
-            "encounter_rate": 4,
-            "mons": [
-              {
-                "min_level": 30,
-                "max_level": 35,
-                "species": "SPECIES_GOLBAT"
-              },
-              {
-                "min_level": 30,
-                "max_level": 35,
-                "species": "SPECIES_GOLBAT"
-              },
-              {
-                "min_level": 25,
-                "max_level": 35,
-                "species": "SPECIES_SOLROCK"
-              },
-              {
-                "min_level": 15,
-                "max_level": 25,
-                "species": "SPECIES_SOLROCK"
-              },
-              {
-                "min_level": 5,
-                "max_level": 15,
-                "species": "SPECIES_SOLROCK"
-              }
-            ]
-          },
-          "fishing_mons": {
-            "encounter_rate": 30,
-            "mons": [
-              {
-                "min_level": 5,
-                "max_level": 10,
-                "species": "SPECIES_MAGIKARP"
-              },
-              {
-                "min_level": 5,
-                "max_level": 10,
-                "species": "SPECIES_GOLDEEN"
-              },
-              {
-                "min_level": 10,
-                "max_level": 30,
-                "species": "SPECIES_MAGIKARP"
-              },
-              {
-                "min_level": 10,
-                "max_level": 30,
-                "species": "SPECIES_GOLDEEN"
-              },
-              {
-                "min_level": 10,
-                "max_level": 30,
-                "species": "SPECIES_BARBOACH"
-              },
-              {
-                "min_level": 25,
-                "max_level": 30,
-                "species": "SPECIES_BARBOACH"
-              },
-              {
-                "min_level": 30,
-                "max_level": 35,
-                "species": "SPECIES_BARBOACH"
-              },
-              {
-                "min_level": 30,
-                "max_level": 35,
-                "species": "SPECIES_WHISCASH"
-              },
-              {
-                "min_level": 35,
-                "max_level": 40,
-                "species": "SPECIES_WHISCASH"
-              },
-              {
-                "min_level": 40,
-                "max_level": 45,
-                "species": "SPECIES_WHISCASH"
-              }
-            ]
           }
         },
         {
@@ -8146,71 +8187,6 @@
         {
           "map": "MAP_SHOAL_CAVE_LOW_TIDE_INNER_ROOM",
           "base_label": "gShoalCave_LowTideInnerRoom",
-          "land_mons": {
-            "encounter_rate": 10,
-            "mons": [
-              {
-                "min_level": 26,
-                "max_level": 26,
-                "species": "SPECIES_ZUBAT"
-              },
-              {
-                "min_level": 26,
-                "max_level": 26,
-                "species": "SPECIES_SPHEAL"
-              },
-              {
-                "min_level": 28,
-                "max_level": 28,
-                "species": "SPECIES_ZUBAT"
-              },
-              {
-                "min_level": 28,
-                "max_level": 28,
-                "species": "SPECIES_SPHEAL"
-              },
-              {
-                "min_level": 30,
-                "max_level": 30,
-                "species": "SPECIES_ZUBAT"
-              },
-              {
-                "min_level": 30,
-                "max_level": 30,
-                "species": "SPECIES_SPHEAL"
-              },
-              {
-                "min_level": 32,
-                "max_level": 32,
-                "species": "SPECIES_ZUBAT"
-              },
-              {
-                "min_level": 32,
-                "max_level": 32,
-                "species": "SPECIES_SPHEAL"
-              },
-              {
-                "min_level": 32,
-                "max_level": 32,
-                "species": "SPECIES_GOLBAT"
-              },
-              {
-                "min_level": 32,
-                "max_level": 32,
-                "species": "SPECIES_SPHEAL"
-              },
-              {
-                "min_level": 32,
-                "max_level": 32,
-                "species": "SPECIES_GOLBAT"
-              },
-              {
-                "min_level": 32,
-                "max_level": 32,
-                "species": "SPECIES_SPHEAL"
-              }
-            ]
-          },
           "water_mons": {
             "encounter_rate": 4,
             "mons": [
@@ -8295,11 +8271,7 @@
                 "species": "SPECIES_WAILMER"
               }
             ]
-          }
-        },
-        {
-          "map": "MAP_SHOAL_CAVE_LOW_TIDE_ENTRANCE_ROOM",
-          "base_label": "gShoalCave_LowTideEntranceRoom",
+          },
           "land_mons": {
             "encounter_rate": 10,
             "mons": [
@@ -8364,7 +8336,11 @@
                 "species": "SPECIES_SPHEAL"
               }
             ]
-          },
+          }
+        },
+        {
+          "map": "MAP_SHOAL_CAVE_LOW_TIDE_ENTRANCE_ROOM",
+          "base_label": "gShoalCave_LowTideEntranceRoom",
           "water_mons": {
             "encounter_rate": 4,
             "mons": [
@@ -8449,6 +8425,71 @@
                 "species": "SPECIES_WAILMER"
               }
             ]
+          },
+          "land_mons": {
+            "encounter_rate": 10,
+            "mons": [
+              {
+                "min_level": 26,
+                "max_level": 26,
+                "species": "SPECIES_ZUBAT"
+              },
+              {
+                "min_level": 26,
+                "max_level": 26,
+                "species": "SPECIES_SPHEAL"
+              },
+              {
+                "min_level": 28,
+                "max_level": 28,
+                "species": "SPECIES_ZUBAT"
+              },
+              {
+                "min_level": 28,
+                "max_level": 28,
+                "species": "SPECIES_SPHEAL"
+              },
+              {
+                "min_level": 30,
+                "max_level": 30,
+                "species": "SPECIES_ZUBAT"
+              },
+              {
+                "min_level": 30,
+                "max_level": 30,
+                "species": "SPECIES_SPHEAL"
+              },
+              {
+                "min_level": 32,
+                "max_level": 32,
+                "species": "SPECIES_ZUBAT"
+              },
+              {
+                "min_level": 32,
+                "max_level": 32,
+                "species": "SPECIES_SPHEAL"
+              },
+              {
+                "min_level": 32,
+                "max_level": 32,
+                "species": "SPECIES_GOLBAT"
+              },
+              {
+                "min_level": 32,
+                "max_level": 32,
+                "species": "SPECIES_SPHEAL"
+              },
+              {
+                "min_level": 32,
+                "max_level": 32,
+                "species": "SPECIES_GOLBAT"
+              },
+              {
+                "min_level": 32,
+                "max_level": 32,
+                "species": "SPECIES_SPHEAL"
+              }
+            ]
           }
         },
         {
@@ -9476,71 +9517,6 @@
         {
           "map": "MAP_SAFARI_ZONE_SOUTHEAST",
           "base_label": "gSafariZone_Southeast",
-          "land_mons": {
-            "encounter_rate": 25,
-            "mons": [
-              {
-                "min_level": 33,
-                "max_level": 33,
-                "species": "SPECIES_SUNKERN"
-              },
-              {
-                "min_level": 34,
-                "max_level": 34,
-                "species": "SPECIES_MAREEP"
-              },
-              {
-                "min_level": 35,
-                "max_level": 35,
-                "species": "SPECIES_SUNKERN"
-              },
-              {
-                "min_level": 36,
-                "max_level": 36,
-                "species": "SPECIES_MAREEP"
-              },
-              {
-                "min_level": 34,
-                "max_level": 34,
-                "species": "SPECIES_AIPOM"
-              },
-              {
-                "min_level": 33,
-                "max_level": 33,
-                "species": "SPECIES_SPINARAK"
-              },
-              {
-                "min_level": 35,
-                "max_level": 35,
-                "species": "SPECIES_HOOTHOOT"
-              },
-              {
-                "min_level": 34,
-                "max_level": 34,
-                "species": "SPECIES_SNUBBULL"
-              },
-              {
-                "min_level": 36,
-                "max_level": 36,
-                "species": "SPECIES_STANTLER"
-              },
-              {
-                "min_level": 37,
-                "max_level": 37,
-                "species": "SPECIES_GLIGAR"
-              },
-              {
-                "min_level": 39,
-                "max_level": 39,
-                "species": "SPECIES_STANTLER"
-              },
-              {
-                "min_level": 40,
-                "max_level": 40,
-                "species": "SPECIES_GLIGAR"
-              }
-            ]
-          },
           "water_mons": {
             "encounter_rate": 9,
             "mons": [
@@ -9625,43 +9601,39 @@
                 "species": "SPECIES_OCTILLERY"
               }
             ]
-          }
-        },
-        {
-          "map": "MAP_SAFARI_ZONE_NORTHEAST",
-          "base_label": "gSafariZone_Northeast",
+          },
           "land_mons": {
             "encounter_rate": 25,
             "mons": [
               {
                 "min_level": 33,
                 "max_level": 33,
-                "species": "SPECIES_AIPOM"
+                "species": "SPECIES_SUNKERN"
               },
               {
                 "min_level": 34,
                 "max_level": 34,
-                "species": "SPECIES_TEDDIURSA"
+                "species": "SPECIES_MAREEP"
               },
               {
                 "min_level": 35,
                 "max_level": 35,
-                "species": "SPECIES_AIPOM"
+                "species": "SPECIES_SUNKERN"
               },
               {
                 "min_level": 36,
                 "max_level": 36,
-                "species": "SPECIES_TEDDIURSA"
+                "species": "SPECIES_MAREEP"
               },
               {
                 "min_level": 34,
                 "max_level": 34,
-                "species": "SPECIES_SUNKERN"
+                "species": "SPECIES_AIPOM"
               },
               {
                 "min_level": 33,
                 "max_level": 33,
-                "species": "SPECIES_LEDYBA"
+                "species": "SPECIES_SPINARAK"
               },
               {
                 "min_level": 35,
@@ -9671,30 +9643,34 @@
               {
                 "min_level": 34,
                 "max_level": 34,
-                "species": "SPECIES_PINECO"
+                "species": "SPECIES_SNUBBULL"
               },
               {
                 "min_level": 36,
                 "max_level": 36,
-                "species": "SPECIES_HOUNDOUR"
+                "species": "SPECIES_STANTLER"
               },
               {
                 "min_level": 37,
                 "max_level": 37,
-                "species": "SPECIES_MILTANK"
+                "species": "SPECIES_GLIGAR"
               },
               {
                 "min_level": 39,
                 "max_level": 39,
-                "species": "SPECIES_HOUNDOUR"
+                "species": "SPECIES_STANTLER"
               },
               {
                 "min_level": 40,
                 "max_level": 40,
-                "species": "SPECIES_MILTANK"
+                "species": "SPECIES_GLIGAR"
               }
             ]
-          },
+          }
+        },
+        {
+          "map": "MAP_SAFARI_ZONE_NORTHEAST",
+          "base_label": "gSafariZone_Northeast",
           "rock_smash_mons": {
             "encounter_rate": 25,
             "mons": [
@@ -9724,6 +9700,71 @@
                 "species": "SPECIES_SHUCKLE"
               }
             ]
+          },
+          "land_mons": {
+            "encounter_rate": 25,
+            "mons": [
+              {
+                "min_level": 33,
+                "max_level": 33,
+                "species": "SPECIES_AIPOM"
+              },
+              {
+                "min_level": 34,
+                "max_level": 34,
+                "species": "SPECIES_TEDDIURSA"
+              },
+              {
+                "min_level": 35,
+                "max_level": 35,
+                "species": "SPECIES_AIPOM"
+              },
+              {
+                "min_level": 36,
+                "max_level": 36,
+                "species": "SPECIES_TEDDIURSA"
+              },
+              {
+                "min_level": 34,
+                "max_level": 34,
+                "species": "SPECIES_SUNKERN"
+              },
+              {
+                "min_level": 33,
+                "max_level": 33,
+                "species": "SPECIES_LEDYBA"
+              },
+              {
+                "min_level": 35,
+                "max_level": 35,
+                "species": "SPECIES_HOOTHOOT"
+              },
+              {
+                "min_level": 34,
+                "max_level": 34,
+                "species": "SPECIES_PINECO"
+              },
+              {
+                "min_level": 36,
+                "max_level": 36,
+                "species": "SPECIES_HOUNDOUR"
+              },
+              {
+                "min_level": 37,
+                "max_level": 37,
+                "species": "SPECIES_MILTANK"
+              },
+              {
+                "min_level": 39,
+                "max_level": 39,
+                "species": "SPECIES_HOUNDOUR"
+              },
+              {
+                "min_level": 40,
+                "max_level": 40,
+                "species": "SPECIES_MILTANK"
+              }
+            ]
           }
         },
         {
@@ -10831,7 +10872,7 @@
           }
         },
         {
-          "map": "MAP_ALTERING_CAVE",
+          "map": "MAP_ALTERING_CAVE_CAVE1",
           "base_label": "gAlteringCave2",
           "land_mons": {
             "encounter_rate": 7,
@@ -10900,7 +10941,7 @@
           }
         },
         {
-          "map": "MAP_ALTERING_CAVE",
+          "map": "MAP_ALTERING_CAVE_CAVE2",
           "base_label": "gAlteringCave3",
           "land_mons": {
             "encounter_rate": 7,
@@ -10969,7 +11010,7 @@
           }
         },
         {
-          "map": "MAP_ALTERING_CAVE",
+          "map": "MAP_ALTERING_CAVE_CAVE3",
           "base_label": "gAlteringCave4",
           "land_mons": {
             "encounter_rate": 7,
@@ -11038,7 +11079,7 @@
           }
         },
         {
-          "map": "MAP_ALTERING_CAVE",
+          "map": "MAP_ALTERING_CAVE_CAVE4",
           "base_label": "gAlteringCave5",
           "land_mons": {
             "encounter_rate": 7,
@@ -11107,7 +11148,7 @@
           }
         },
         {
-          "map": "MAP_ALTERING_CAVE",
+          "map": "MAP_ALTERING_CAVE_CAVE5",
           "base_label": "gAlteringCave6",
           "land_mons": {
             "encounter_rate": 7,
@@ -11176,7 +11217,7 @@
           }
         },
         {
-          "map": "MAP_ALTERING_CAVE",
+          "map": "MAP_ALTERING_CAVE_CAVE6",
           "base_label": "gAlteringCave7",
           "land_mons": {
             "encounter_rate": 7,
@@ -11245,7 +11286,7 @@
           }
         },
         {
-          "map": "MAP_ALTERING_CAVE",
+          "map": "MAP_ALTERING_CAVE_CAVE7",
           "base_label": "gAlteringCave8",
           "land_mons": {
             "encounter_rate": 7,
@@ -11314,7 +11355,7 @@
           }
         },
         {
-          "map": "MAP_ALTERING_CAVE",
+          "map": "MAP_ALTERING_CAVE_CAVE8",
           "base_label": "gAlteringCave9",
           "land_mons": {
             "encounter_rate": 7,
@@ -11454,8 +11495,6 @@
       ]
     },
     {
-      "label": "gBattlePyramidWildMonHeaders",
-      "for_maps": false,
       "encounters": [
         {
           "base_label": "gBattlePyramid_1",
@@ -11463,63 +11502,63 @@
             "encounter_rate": 4,
             "mons": [
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_BULBASAUR"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_BULBASAUR"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_BULBASAUR"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_BULBASAUR"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_IVYSAUR"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_IVYSAUR"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_VENUSAUR"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_VENUSAUR"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_VENUSAUR"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_CHARMANDER"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_VENUSAUR"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_CHARMANDER"
               }
             ]
@@ -11531,63 +11570,63 @@
             "encounter_rate": 4,
             "mons": [
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_IVYSAUR"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_IVYSAUR"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_IVYSAUR"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_IVYSAUR"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_VENUSAUR"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_VENUSAUR"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_CHARMANDER"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_CHARMANDER"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_CHARMANDER"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_CHARMELEON"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_CHARMELEON"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_CHARMANDER"
               }
             ]
@@ -11599,63 +11638,63 @@
             "encounter_rate": 4,
             "mons": [
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_VENUSAUR"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_VENUSAUR"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_VENUSAUR"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_VENUSAUR"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_CHARMANDER"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_CHARMANDER"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_CHARMELEON"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_CHARMELEON"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_CHARMELEON"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_CHARIZARD"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_CHARMELEON"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_CHARIZARD"
               }
             ]
@@ -11667,63 +11706,63 @@
             "encounter_rate": 4,
             "mons": [
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_CHARMANDER"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_CHARMANDER"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_CHARMANDER"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_CHARMANDER"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_CHARMELEON"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_CHARMELEON"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_CHARIZARD"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_CHARIZARD"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_CHARIZARD"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_SQUIRTLE"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_CHARIZARD"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_SQUIRTLE"
               }
             ]
@@ -11735,63 +11774,63 @@
             "encounter_rate": 4,
             "mons": [
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_CHARMELEON"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_CHARMELEON"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_CHARMELEON"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_CHARMELEON"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_CHARIZARD"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_CHARIZARD"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_SQUIRTLE"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_SQUIRTLE"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_SQUIRTLE"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_WARTORTLE"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_SQUIRTLE"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_WARTORTLE"
               }
             ]
@@ -11803,63 +11842,63 @@
             "encounter_rate": 4,
             "mons": [
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_CHARIZARD"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_CHARIZARD"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_CHARIZARD"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_CHARMELEON"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_SQUIRTLE"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_SQUIRTLE"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_WARTORTLE"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_WARTORTLE"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_WARTORTLE"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_WARTORTLE"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_WARTORTLE"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_WARTORTLE"
               }
             ]
@@ -11871,73 +11910,73 @@
             "encounter_rate": 8,
             "mons": [
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_WARTORTLE"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_WARTORTLE"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_SQUIRTLE"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_SQUIRTLE"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_SQUIRTLE"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_CHARIZARD"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_CHARIZARD"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_CHARIZARD"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_CHARMELEON"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_CHARMELEON"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_CHARMELEON"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_CHARMELEON"
               }
             ]
           }
         }
-      ]
+      ],
+      "for_maps": false,
+      "label": "gBattlePyramidWildMonHeaders"
     },
     {
-      "label": "gBattlePikeWildMonHeaders",
-      "for_maps": false,
       "encounters": [
         {
           "base_label": "gBattlePike_1",
@@ -11945,63 +11984,63 @@
             "encounter_rate": 10,
             "mons": [
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_SEVIPER"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_MILOTIC"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_DUSCLOPS"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_DUSCLOPS"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_DUSCLOPS"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_DUSCLOPS"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_SEVIPER"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_MILOTIC"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_DUSCLOPS"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_DUSCLOPS"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_SEVIPER"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_MILOTIC"
               }
             ]
@@ -12013,63 +12052,63 @@
             "encounter_rate": 10,
             "mons": [
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_SEVIPER"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_MILOTIC"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_ELECTRODE"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_ELECTRODE"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_ELECTRODE"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_ELECTRODE"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_SEVIPER"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_MILOTIC"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_ELECTRODE"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_ELECTRODE"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_SEVIPER"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_MILOTIC"
               }
             ]
@@ -12081,63 +12120,63 @@
             "encounter_rate": 10,
             "mons": [
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_SEVIPER"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_MILOTIC"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_BRELOOM"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_BRELOOM"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_BRELOOM"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_BRELOOM"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_SEVIPER"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_MILOTIC"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_BRELOOM"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_BRELOOM"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_SEVIPER"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_MILOTIC"
               }
             ]
@@ -12149,69 +12188,71 @@
             "encounter_rate": 10,
             "mons": [
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_SEVIPER"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_MILOTIC"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_WOBBUFFET"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_WOBBUFFET"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_WOBBUFFET"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_WOBBUFFET"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_SEVIPER"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_MILOTIC"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_WOBBUFFET"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_WOBBUFFET"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_SEVIPER"
               },
               {
-                "min_level": 5,
                 "max_level": 5,
+                "min_level": 5,
                 "species": "SPECIES_MILOTIC"
               }
             ]
           }
         }
-      ]
+      ],
+      "for_maps": false,
+      "label": "gBattlePikeWildMonHeaders"
     }
   ]
 }
diff --git a/src/daycare.c b/src/daycare.c
index 2a1efefcc..1690b5ecd 100644
--- a/src/daycare.c
+++ b/src/daycare.c
@@ -22,6 +22,7 @@
 #include "constants/items.h"
 #include "constants/moves.h"
 #include "constants/region_map_sections.h"
+#include "speedchoice.h"
 
 // this file's functions
 static void ClearDaycareMonMail(struct DayCareMail *mail);
@@ -913,7 +914,7 @@ static bool8 TryProduceOrHatchEgg(struct DayCare *daycare)
                 continue;
 
             eggCycles = GetMonData(&gPlayerParty[i], MON_DATA_FRIENDSHIP);
-            if (eggCycles != 0)
+            if (eggCycles != 0 && 0 /*CheckSpeedchoiceOption(FAST_EGG_HATCH, FAST_EGG_HATCH_NO) == TRUE*/)
             {
                 if (eggCycles >= toSub)
                     eggCycles -= toSub;
diff --git a/src/done_button.c b/src/done_button.c
new file mode 100644
index 000000000..0843d6a8c
--- /dev/null
+++ b/src/done_button.c
@@ -0,0 +1,1188 @@
+#include "global.h"
+#include "main.h"
+#include "task.h"
+#include "bg.h"
+#include "window.h"
+#include "palette.h"
+#include "malloc.h"
+#include "sound.h"
+#include "constants/songs.h"
+#include "constants/rgb.h"
+#include "gpu_regs.h"
+#include "scanline_effect.h"
+#include "text.h"
+#include "menu.h"
+#include "done_button.h"
+#include "overworld.h"
+#include "text_window.h"
+#include "string_util.h"
+
+struct DoneButton
+{
+    MainCallback doneCallback;
+    u8 taskId;
+    u8 page;
+    u16 tilemapBuffer[0x800];
+};
+
+extern u16 sOptionMenuBg_Pal[1];
+extern u16 sOptionMenuText_Pal[16];
+extern u16 sMainMenuTextPal[16];
+
+#define NELEMS ARRAY_COUNT
+
+EWRAM_DATA bool8 sInSubMenu = FALSE;
+EWRAM_DATA bool8 sInBattle = FALSE;
+EWRAM_DATA bool8 sInField = FALSE;
+EWRAM_DATA bool8 sInIntro = FALSE;
+
+// In order to track the intro timers, which occur before the Save Block gets initialized,
+// we have a persistent timer state that starts from boot since Save Block is not initialized
+// until slightly later. We add the timers to the save data when the game loads.
+EWRAM_DATA struct FrameTimers gFrameTimers = {0};
+
+
+static EWRAM_DATA struct DoneButton *doneButton = NULL;
+
+static void DoneButtonCB(void);
+static void PrintGameStatsPage(void);
+static void Task_DoneButton(u8 taskId);
+static void Task_DestroyDoneButton(u8 taskId);
+
+void OpenDoneButton(MainCallback doneCallback);
+void DrawDoneButtonFrame(void);
+
+struct DoneButtonLineItem
+{
+    const u8 * name;
+    const u8 * (*printfn)(enum DoneButtonStat stat, enum DoneButtonStat stat2); // string formatter for each type.
+    enum DoneButtonStat stat;
+    enum DoneButtonStat stat2;
+};
+
+#define TRY_INC_GAME_STAT(saveBlock, statName, max)                   \
+do {                                                                  \
+    if(gSaveBlock##saveBlock##Ptr->doneButtonStats.statName < max)    \
+        gSaveBlock##saveBlock##Ptr->doneButtonStats.statName++;       \
+}while(0)
+    
+// max is unused, copy paste from other macro
+#define GET_GAME_STAT(saveBlock, statName, max)                  \
+do {                                                             \
+    return gSaveBlock##saveBlock##Ptr->doneButtonStats.statName; \
+}while(0)
+    
+#define TRY_INC_GAME_STAT_BY(saveBlock, statName, add, max)                \
+do {                                                                       \
+    u32 diff = max - gSaveBlock##saveBlock##Ptr->doneButtonStats.statName; \
+    if(diff > add)                                                         \
+        gSaveBlock##saveBlock##Ptr->doneButtonStats.statName += add;       \
+    else                                                                   \
+        gSaveBlock##saveBlock##Ptr->doneButtonStats.statName = max;        \
+}while(0)
+
+// Hmm, 3 giant switches. Repetitive?
+// TODO: Better way of handling?
+void TryAddButtonStatBy(enum DoneButtonStat stat, u32 add)
+{
+    switch(stat)
+    {
+        // DoneButtonStats1
+        case DB_FRAME_COUNT_TOTAL:
+            TRY_INC_GAME_STAT_BY(1, frameCount, add, UINT_MAX);
+            break;
+        case DB_FRAME_COUNT_OW:
+            TRY_INC_GAME_STAT_BY(1, owFrameCount, add, UINT_MAX);
+            break;
+        case DB_FRAME_COUNT_BATTLE:
+            TRY_INC_GAME_STAT_BY(1, battleFrameCount, add, UINT_MAX);
+            break;
+        case DB_FRAME_COUNT_MENU:
+            TRY_INC_GAME_STAT_BY(1, menuFrameCount, add, UINT_MAX);
+            break;
+        case DB_FRAME_COUNT_INTROS:
+            TRY_INC_GAME_STAT_BY(1, introsFrameCount, add, UINT_MAX);
+            break;
+        case DB_SAVE_COUNT:
+            TRY_INC_GAME_STAT_BY(1, saveCount, add, USHRT_MAX);
+            break;
+        case DB_RELOAD_COUNT:
+            TRY_INC_GAME_STAT_BY(1, reloadCount, add, USHRT_MAX);
+            break;
+        case DB_CLOCK_RESET_COUNT:
+            TRY_INC_GAME_STAT_BY(1, clockResetCount, add, USHRT_MAX);
+            break;
+        case DB_STEP_COUNT:
+            TRY_INC_GAME_STAT_BY(1, stepCount, add, UINT_MAX);
+            break;
+        case DB_STEP_COUNT_WALK:
+            TRY_INC_GAME_STAT_BY(1, stepCountWalk, add, UINT_MAX);
+            break;
+        case DB_STEP_COUNT_SURF:
+            TRY_INC_GAME_STAT_BY(1, stepCountSurf, add, UINT_MAX);
+            break;
+        case DB_STEP_COUNT_BIKE:
+            TRY_INC_GAME_STAT_BY(1, stepCountBike, add, UINT_MAX);
+            break;
+        case DB_STEP_COUNT_RUN:
+            TRY_INC_GAME_STAT_BY(1, stepCountRun, add, UINT_MAX);
+            break;
+        case DB_BONKS:
+            TRY_INC_GAME_STAT_BY(1, bonks, add, USHRT_MAX);
+            break;
+        case DB_TOTAL_DAMAGE_DEALT:
+            TRY_INC_GAME_STAT_BY(1, totalDamageDealt, add, UINT_MAX);
+            break;
+        case DB_ACTUAL_DAMAGE_DEALT:
+            TRY_INC_GAME_STAT_BY(1, actualDamageDealt, add, UINT_MAX);
+            break;
+        case DB_TOTAL_DAMAGE_TAKEN:
+            TRY_INC_GAME_STAT_BY(1, totalDamageTaken, add, UINT_MAX);
+            break;
+        case DB_ACTUAL_DAMAGE_TAKEN:
+            TRY_INC_GAME_STAT_BY(1, actualDamageTaken, add, UINT_MAX);
+            break;
+        case DB_OWN_MOVES_HIT:
+            TRY_INC_GAME_STAT_BY(1, ownMovesHit, add, USHRT_MAX);
+            break;
+        case DB_OWN_MOVES_MISSED:
+            TRY_INC_GAME_STAT_BY(1, ownMovesMissed, add, USHRT_MAX);
+            break;
+        case DB_ENEMY_MOVES_HIT:
+            TRY_INC_GAME_STAT_BY(1, enemyMovesHit, add, USHRT_MAX);
+            break;
+        case DB_ENEMY_MOVES_MISSED:
+            TRY_INC_GAME_STAT_BY(1, enemyMovesMissed, add, USHRT_MAX);
+            break;
+        // DoneButtonStats2
+        case DB_OWN_MOVES_SE:
+            TRY_INC_GAME_STAT_BY(2, ownMovesSE, add, USHRT_MAX);
+            break;
+        case DB_OWN_MOVES_NVE:
+            TRY_INC_GAME_STAT_BY(2, ownMovesNVE, add, USHRT_MAX);
+            break;
+        case DB_ENEMY_MOVES_SE:
+            TRY_INC_GAME_STAT_BY(2, enemyMovesSE, add, USHRT_MAX);
+            break;
+        case DB_ENEMY_MOVES_NVE:
+            TRY_INC_GAME_STAT_BY(2, enemyMovesNVE, add, USHRT_MAX);
+            break;
+        case DB_CRITS_DEALT:
+            TRY_INC_GAME_STAT_BY(2, critsDealt, add, USHRT_MAX);
+            break;
+        case DB_OHKOS_DEALT:
+            TRY_INC_GAME_STAT_BY(2, OHKOsDealt, add, USHRT_MAX);
+            break;
+        case DB_CRITS_TAKEN:
+            TRY_INC_GAME_STAT_BY(2, critsTaken, add, USHRT_MAX);
+            break;
+        case DB_OHKOS_TAKEN:
+            TRY_INC_GAME_STAT_BY(2, OHKOsTaken, add, USHRT_MAX);
+            break;
+        case DB_PLAYER_HP_HEALED:
+            TRY_INC_GAME_STAT_BY(2, playerHPHealed, add, UINT_MAX);
+            break;
+        case DB_ENEMY_HP_HEALED:
+            TRY_INC_GAME_STAT_BY(2, enemyHPHealed, add, UINT_MAX);
+            break;
+        case DB_PLAYER_POKEMON_FAINTED:
+            TRY_INC_GAME_STAT_BY(2, playerPokemonFainted, add, USHRT_MAX);
+            break;
+        case DB_ENEMY_POKEMON_FAINTED:
+            TRY_INC_GAME_STAT_BY(2, enemyPokemonFainted, add, USHRT_MAX);
+            break;
+        case DB_EXP_GAINED:
+            TRY_INC_GAME_STAT_BY(2, expGained, add, UINT_MAX);
+            break;
+        case DB_SWITCHOUTS:
+            TRY_INC_GAME_STAT_BY(2, switchouts, add, USHRT_MAX);
+            break;
+        case DB_BATTLES:
+            TRY_INC_GAME_STAT_BY(2, battles, add, USHRT_MAX);
+            break;
+        case DB_TRAINER_BATTLES:
+            TRY_INC_GAME_STAT_BY(2, trainerBattles, add, USHRT_MAX);
+            break;
+        case DB_WILD_BATTLES:
+            TRY_INC_GAME_STAT_BY(2, wildBattles, add, USHRT_MAX);
+            break;
+        case DB_BATTLES_FLED:
+            TRY_INC_GAME_STAT_BY(2, battlesFled, add, USHRT_MAX);
+            break;
+        case DB_FAILED_RUNS:
+            TRY_INC_GAME_STAT_BY(2, failedRuns, add, USHRT_MAX);
+            break;
+        case DB_MONEY_MADE:
+            TRY_INC_GAME_STAT_BY(2, moneyMade, add, UINT_MAX);
+            break;
+        case DB_MONEY_SPENT:
+            TRY_INC_GAME_STAT_BY(2, moneySpent, add, UINT_MAX);
+            break;
+        case DB_MONEY_LOST:
+            TRY_INC_GAME_STAT_BY(2, moneyLost, add, UINT_MAX);
+            break;
+        case DB_ITEMS_PICKED_UP:
+            TRY_INC_GAME_STAT_BY(2, itemsPickedUp, add, USHRT_MAX);
+            break;
+        case DB_ITEMS_BOUGHT:
+            TRY_INC_GAME_STAT_BY(2, itemsBought, add, USHRT_MAX);
+            break;
+        case DB_ITEMS_SOLD:
+            TRY_INC_GAME_STAT_BY(2, itemsSold, add, USHRT_MAX);
+            break;
+        case DB_MOVES_LEARNT:
+            TRY_INC_GAME_STAT_BY(2, movesLearnt, add, USHRT_MAX);
+            break;
+        case DB_BALLS_THROWN:
+            TRY_INC_GAME_STAT_BY(2, ballsThrown, add, USHRT_MAX);
+            break;
+        case DB_POKEMON_CAUGHT_IN_BALLS:
+            TRY_INC_GAME_STAT_BY(2, pokemonCaughtInBalls, add, USHRT_MAX);
+            break;
+        case DB_EVOLUTIONS_ATTEMPTED:
+            TRY_INC_GAME_STAT_BY(2, evosAttempted, add, UINT_MAX);
+            break;
+        case DB_EVOLUTIONS_COMPLETED:
+            TRY_INC_GAME_STAT_BY(2, evosCompleted, add, UINT_MAX);
+            break;
+        case DB_EVOLUTIONS_CANCELLED:
+            TRY_INC_GAME_STAT_BY(2, evosCancelled, add, UINT_MAX);
+            break;
+    }
+}
+
+void TryIncrementButtonStat(enum DoneButtonStat stat)
+{
+    switch(stat)
+    {
+        // DoneButtonStats1
+        case DB_FRAME_COUNT_TOTAL:
+            TRY_INC_GAME_STAT(1, frameCount, UINT_MAX);
+            break;
+        case DB_FRAME_COUNT_OW:
+            TRY_INC_GAME_STAT(1, owFrameCount, UINT_MAX);
+            break;
+        case DB_FRAME_COUNT_BATTLE:
+            TRY_INC_GAME_STAT(1, battleFrameCount, UINT_MAX);
+            break;
+        case DB_FRAME_COUNT_MENU:
+            TRY_INC_GAME_STAT(1, menuFrameCount, UINT_MAX);
+            break;
+        case DB_FRAME_COUNT_INTROS: // This needs special handling due to intro not having loaded save block yet.
+            TRY_INC_GAME_STAT(1, introsFrameCount, UINT_MAX);
+            break;
+        case DB_SAVE_COUNT:
+            TRY_INC_GAME_STAT(1, saveCount, USHRT_MAX);
+            break;
+        case DB_RELOAD_COUNT:
+            TRY_INC_GAME_STAT(1, reloadCount, USHRT_MAX);
+            break;
+        case DB_CLOCK_RESET_COUNT:
+            TRY_INC_GAME_STAT(1, clockResetCount, USHRT_MAX);
+            break;
+        case DB_STEP_COUNT:
+            TRY_INC_GAME_STAT(1, stepCount, UINT_MAX);
+            break;
+        case DB_STEP_COUNT_WALK:
+            TRY_INC_GAME_STAT(1, stepCountWalk, UINT_MAX);
+            break;
+        case DB_STEP_COUNT_SURF:
+            TRY_INC_GAME_STAT(1, stepCountSurf, UINT_MAX);
+            break;
+        case DB_STEP_COUNT_BIKE:
+            TRY_INC_GAME_STAT(1, stepCountBike, UINT_MAX);
+            break;
+        case DB_STEP_COUNT_RUN:
+            TRY_INC_GAME_STAT(1, stepCountRun, UINT_MAX);
+            break;
+        case DB_BONKS:
+            TRY_INC_GAME_STAT(1, bonks, USHRT_MAX);
+            break;
+        case DB_TOTAL_DAMAGE_DEALT:
+            TRY_INC_GAME_STAT(1, totalDamageDealt, UINT_MAX);
+            break;
+        case DB_ACTUAL_DAMAGE_DEALT:
+            TRY_INC_GAME_STAT(1, actualDamageDealt, UINT_MAX);
+            break;
+        case DB_TOTAL_DAMAGE_TAKEN:
+            TRY_INC_GAME_STAT(1, totalDamageTaken, UINT_MAX);
+            break;
+        case DB_ACTUAL_DAMAGE_TAKEN:
+            TRY_INC_GAME_STAT(1, actualDamageTaken, UINT_MAX);
+            break;
+        case DB_OWN_MOVES_HIT:
+            TRY_INC_GAME_STAT(1, ownMovesHit, USHRT_MAX);
+            break;
+        case DB_OWN_MOVES_MISSED:
+            TRY_INC_GAME_STAT(1, ownMovesMissed, USHRT_MAX);
+            break;
+        case DB_ENEMY_MOVES_HIT:
+            TRY_INC_GAME_STAT(1, enemyMovesHit, USHRT_MAX);
+            break;
+        case DB_ENEMY_MOVES_MISSED:
+            TRY_INC_GAME_STAT(1, enemyMovesMissed, USHRT_MAX);
+            break;
+        // DoneButtonStats2
+        case DB_OWN_MOVES_SE:
+            TRY_INC_GAME_STAT(2, ownMovesSE, USHRT_MAX);
+            break;
+        case DB_OWN_MOVES_NVE:
+            TRY_INC_GAME_STAT(2, ownMovesNVE, USHRT_MAX);
+            break;
+        case DB_ENEMY_MOVES_SE:
+            TRY_INC_GAME_STAT(2, enemyMovesSE, USHRT_MAX);
+            break;
+        case DB_ENEMY_MOVES_NVE:
+            TRY_INC_GAME_STAT(2, enemyMovesNVE, USHRT_MAX);
+            break;
+        case DB_CRITS_DEALT:
+            TRY_INC_GAME_STAT(2, critsDealt, USHRT_MAX);
+            break;
+        case DB_OHKOS_DEALT:
+            TRY_INC_GAME_STAT(2, OHKOsDealt, USHRT_MAX);
+            break;
+        case DB_CRITS_TAKEN:
+            TRY_INC_GAME_STAT(2, critsTaken, USHRT_MAX);
+            break;
+        case DB_OHKOS_TAKEN:
+            TRY_INC_GAME_STAT(2, OHKOsTaken, USHRT_MAX);
+            break;
+        case DB_PLAYER_HP_HEALED:
+            TRY_INC_GAME_STAT(2, playerHPHealed, UINT_MAX);
+            break;
+        case DB_ENEMY_HP_HEALED:
+            TRY_INC_GAME_STAT(2, enemyHPHealed, UINT_MAX);
+            break;
+        case DB_PLAYER_POKEMON_FAINTED:
+            TRY_INC_GAME_STAT(2, playerPokemonFainted, USHRT_MAX);
+            break;
+        case DB_ENEMY_POKEMON_FAINTED:
+            TRY_INC_GAME_STAT(2, enemyPokemonFainted, USHRT_MAX);
+            break;
+        case DB_EXP_GAINED:
+            TRY_INC_GAME_STAT(2, expGained, UINT_MAX);
+            break;
+        case DB_SWITCHOUTS:
+            TRY_INC_GAME_STAT(2, switchouts, USHRT_MAX);
+            break;
+        case DB_BATTLES:
+            TRY_INC_GAME_STAT(2, battles, USHRT_MAX);
+            break;
+        case DB_TRAINER_BATTLES:
+            TRY_INC_GAME_STAT(2, trainerBattles, USHRT_MAX);
+            break;
+        case DB_WILD_BATTLES:
+            TRY_INC_GAME_STAT(2, wildBattles, USHRT_MAX);
+            break;
+        case DB_BATTLES_FLED:
+            TRY_INC_GAME_STAT(2, battlesFled, USHRT_MAX);
+            break;
+        case DB_FAILED_RUNS:
+            TRY_INC_GAME_STAT(2, failedRuns, USHRT_MAX);
+            break;
+        case DB_MONEY_MADE:
+            TRY_INC_GAME_STAT(2, moneyMade, UINT_MAX);
+            break;
+        case DB_MONEY_SPENT:
+            TRY_INC_GAME_STAT(2, moneySpent, UINT_MAX);
+            break;
+        case DB_MONEY_LOST:
+            TRY_INC_GAME_STAT(2, moneyLost, UINT_MAX);
+            break;
+        case DB_ITEMS_PICKED_UP:
+            TRY_INC_GAME_STAT(2, itemsPickedUp, USHRT_MAX);
+            break;
+        case DB_ITEMS_BOUGHT:
+            TRY_INC_GAME_STAT(2, itemsBought, USHRT_MAX);
+            break;
+        case DB_ITEMS_SOLD:
+            TRY_INC_GAME_STAT(2, itemsSold, USHRT_MAX);
+            break;
+        case DB_MOVES_LEARNT:
+            TRY_INC_GAME_STAT(2, movesLearnt, USHRT_MAX);
+            break;
+        case DB_BALLS_THROWN:
+            TRY_INC_GAME_STAT(2, ballsThrown, USHRT_MAX);
+            break;
+        case DB_POKEMON_CAUGHT_IN_BALLS:
+            TRY_INC_GAME_STAT(2, pokemonCaughtInBalls, USHRT_MAX);
+            break;
+        case DB_EVOLUTIONS_ATTEMPTED:
+            TRY_INC_GAME_STAT(2, evosAttempted, UINT_MAX);
+            break;
+        case DB_EVOLUTIONS_COMPLETED:
+            TRY_INC_GAME_STAT(2, evosCompleted, UINT_MAX);
+            break;
+        case DB_EVOLUTIONS_CANCELLED:
+            TRY_INC_GAME_STAT(2, evosCancelled, UINT_MAX);
+            break;
+    }
+}
+
+u32 GetDoneButtonStat(enum DoneButtonStat stat)
+{
+    switch(stat)
+    {
+        // DoneButtonStats1
+        case DB_FRAME_COUNT_TOTAL:
+            GET_GAME_STAT(1, frameCount, UINT_MAX);
+            break;
+        case DB_FRAME_COUNT_OW:
+            GET_GAME_STAT(1, owFrameCount, UINT_MAX);
+            break;
+        case DB_FRAME_COUNT_BATTLE:
+            GET_GAME_STAT(1, battleFrameCount, UINT_MAX);
+            break;
+        case DB_FRAME_COUNT_MENU:
+            GET_GAME_STAT(1, menuFrameCount, UINT_MAX);
+            break;
+        case DB_FRAME_COUNT_INTROS: // This needs special handling due to intro not having loaded save block yet.
+            GET_GAME_STAT(1, introsFrameCount, UINT_MAX);
+            break;
+        case DB_SAVE_COUNT:
+            GET_GAME_STAT(1, saveCount, USHRT_MAX);
+            break;
+        case DB_RELOAD_COUNT:
+            GET_GAME_STAT(1, reloadCount, USHRT_MAX);
+            break;
+        case DB_CLOCK_RESET_COUNT:
+            GET_GAME_STAT(1, clockResetCount, USHRT_MAX);
+            break;
+        case DB_STEP_COUNT:
+            GET_GAME_STAT(1, stepCount, UINT_MAX);
+            break;
+        case DB_STEP_COUNT_WALK:
+            GET_GAME_STAT(1, stepCountWalk, UINT_MAX);
+            break;
+        case DB_STEP_COUNT_SURF:
+            GET_GAME_STAT(1, stepCountSurf, UINT_MAX);
+            break;
+        case DB_STEP_COUNT_BIKE:
+            GET_GAME_STAT(1, stepCountBike, UINT_MAX);
+            break;
+        case DB_STEP_COUNT_RUN:
+            GET_GAME_STAT(1, stepCountRun, UINT_MAX);
+            break;
+        case DB_BONKS:
+            GET_GAME_STAT(1, bonks, USHRT_MAX);
+            break;
+        case DB_TOTAL_DAMAGE_DEALT:
+            GET_GAME_STAT(1, totalDamageDealt, UINT_MAX);
+            break;
+        case DB_ACTUAL_DAMAGE_DEALT:
+            GET_GAME_STAT(1, actualDamageDealt, UINT_MAX);
+            break;
+        case DB_TOTAL_DAMAGE_TAKEN:
+            GET_GAME_STAT(1, totalDamageTaken, UINT_MAX);
+            break;
+        case DB_ACTUAL_DAMAGE_TAKEN:
+            GET_GAME_STAT(1, actualDamageTaken, UINT_MAX);
+            break;
+        case DB_OWN_MOVES_HIT:
+            GET_GAME_STAT(1, ownMovesHit, USHRT_MAX);
+            break;
+        case DB_OWN_MOVES_MISSED:
+            GET_GAME_STAT(1, ownMovesMissed, USHRT_MAX);
+            break;
+        case DB_ENEMY_MOVES_HIT:
+            GET_GAME_STAT(1, enemyMovesHit, USHRT_MAX);
+            break;
+        case DB_ENEMY_MOVES_MISSED:
+            GET_GAME_STAT(1, enemyMovesMissed, USHRT_MAX);
+            break;
+        // DoneButtonStats2
+        case DB_OWN_MOVES_SE:
+            GET_GAME_STAT(2, ownMovesSE, USHRT_MAX);
+            break;
+        case DB_OWN_MOVES_NVE:
+            GET_GAME_STAT(2, ownMovesNVE, USHRT_MAX);
+            break;
+        case DB_ENEMY_MOVES_SE:
+            GET_GAME_STAT(2, enemyMovesSE, USHRT_MAX);
+            break;
+        case DB_ENEMY_MOVES_NVE:
+            GET_GAME_STAT(2, enemyMovesNVE, USHRT_MAX);
+            break;
+        case DB_CRITS_DEALT:
+            GET_GAME_STAT(2, critsDealt, USHRT_MAX);
+            break;
+        case DB_OHKOS_DEALT:
+            GET_GAME_STAT(2, OHKOsDealt, USHRT_MAX);
+            break;
+        case DB_CRITS_TAKEN:
+            GET_GAME_STAT(2, critsTaken, USHRT_MAX);
+            break;
+        case DB_OHKOS_TAKEN:
+            GET_GAME_STAT(2, OHKOsTaken, USHRT_MAX);
+            break;
+        case DB_PLAYER_HP_HEALED:
+            GET_GAME_STAT(2, playerHPHealed, UINT_MAX);
+            break;
+        case DB_ENEMY_HP_HEALED:
+            GET_GAME_STAT(2, enemyHPHealed, UINT_MAX);
+            break;
+        case DB_PLAYER_POKEMON_FAINTED:
+            GET_GAME_STAT(2, playerPokemonFainted, USHRT_MAX);
+            break;
+        case DB_ENEMY_POKEMON_FAINTED:
+            GET_GAME_STAT(2, enemyPokemonFainted, USHRT_MAX);
+            break;
+        case DB_EXP_GAINED:
+            GET_GAME_STAT(2, expGained, UINT_MAX);
+            break;
+        case DB_SWITCHOUTS:
+            GET_GAME_STAT(2, switchouts, USHRT_MAX);
+            break;
+        case DB_BATTLES:
+            GET_GAME_STAT(2, battles, USHRT_MAX);
+            break;
+        case DB_TRAINER_BATTLES:
+            GET_GAME_STAT(2, trainerBattles, USHRT_MAX);
+            break;
+        case DB_WILD_BATTLES:
+            GET_GAME_STAT(2, wildBattles, USHRT_MAX);
+            break;
+        case DB_BATTLES_FLED:
+            GET_GAME_STAT(2, battlesFled, USHRT_MAX);
+            break;
+        case DB_FAILED_RUNS:
+            GET_GAME_STAT(2, failedRuns, USHRT_MAX);
+            break;
+        case DB_MONEY_MADE:
+            GET_GAME_STAT(2, moneyMade, UINT_MAX);
+            break;
+        case DB_MONEY_SPENT:
+            GET_GAME_STAT(2, moneySpent, UINT_MAX);
+            break;
+        case DB_MONEY_LOST:
+            GET_GAME_STAT(2, moneyLost, UINT_MAX);
+            break;
+        case DB_ITEMS_PICKED_UP:
+            GET_GAME_STAT(2, itemsPickedUp, USHRT_MAX);
+            break;
+        case DB_ITEMS_BOUGHT:
+            GET_GAME_STAT(2, itemsBought, USHRT_MAX);
+            break;
+        case DB_ITEMS_SOLD:
+            GET_GAME_STAT(2, itemsSold, USHRT_MAX);
+            break;
+        case DB_MOVES_LEARNT:
+            GET_GAME_STAT(2, movesLearnt, USHRT_MAX);
+            break;
+        case DB_BALLS_THROWN:
+            GET_GAME_STAT(2, ballsThrown, USHRT_MAX);
+            break;
+        case DB_POKEMON_CAUGHT_IN_BALLS:
+            GET_GAME_STAT(2, pokemonCaughtInBalls, USHRT_MAX);
+            break;
+        case DB_EVOLUTIONS_ATTEMPTED:
+            GET_GAME_STAT(2, evosAttempted, UINT_MAX);
+            break;
+        case DB_EVOLUTIONS_COMPLETED:
+            GET_GAME_STAT(2, evosCompleted, UINT_MAX);
+            break;
+        case DB_EVOLUTIONS_CANCELLED:
+            GET_GAME_STAT(2, evosCancelled, UINT_MAX);
+            break;
+    }
+}
+
+const u8 *GetStringSample(void)
+{
+    return NULL; // TODO
+}
+
+struct LocalFrameTimerLoad
+{
+    u32 totalFrames;
+    u32 totalFramesOw;
+    u32 totalFramesBattle;
+    u32 totalFramesMenu;
+    u32 totalFramesIntro;
+};
+
+EWRAM_DATA struct LocalFrameTimerLoad gLocalFrameTimers = {0};
+
+const u8 gTODOString[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}TODO");
+
+// PAGE 1
+const u8 gTimersHeader[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}PLAYER STATS (TIMERS)");
+const u8 gTimersTotalTime[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}TOTAL TIME: ");
+const u8 gTimersOverworldTime[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}OVERWORLD TIME: ");
+const u8 gTimersTimeInBattle[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}TIME IN BATTLE: ");
+const u8 gTimersTimeInMenus[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}TIME IN MENUS: ");
+const u8 gTimersTimeInIntros[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}TIME IN INTROS: ");
+
+// PAGE 2
+const u8 gMovementHeader[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}PLAYER STATS (MOVEMENT)");
+const u8 gMovementTotalSteps[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}TOTAL STEPS: ");
+const u8 gMovementStepsWalked[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}STEPS WALKED: ");
+const u8 gMovementStepsBiked[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}STEPS BIKED: ");
+const u8 gMovementStepsSurfed[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}STEPS SURFED: ");
+const u8 gMovementStepsRan[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}STEPS RAN: ");
+const u8 gMovementBonks[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}BONKS: ");
+
+// PAGE 3
+const u8 gBattle1Header[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}PLAYER STATS (BATTLE 1)");
+const u8 gBattle1TotalBattles[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}TOTAL BATTLES: ");
+const u8 gBattle1WildBattles[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}WILD BATTLES: ");
+const u8 gBattle1TrainerBattles[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}TRAINER BATTLES: ");
+const u8 gBattle1BattlesFledFrom[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}BATTLES FLED FROM: ");
+const u8 gBattle1FailedEscapes[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}FAILED ESCAPES: ");
+
+// PAGE 4
+const u8 gBattle2Header[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}PLAYER STATS (BATTLE 2)");
+const u8 gBattle2EnemyPkmnFainted[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}ENEMY PKMN FAINTED: ");
+const u8 gBattle2ExpGained[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}EXP GAINED: ");
+const u8 gBattle2OwnPkmnFainted[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}OWN PKMN FAINTED: ");
+const u8 gBattle2NumSwitchouts[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}NUM SWITCHOUTS: ");
+const u8 gBattle2BallsThrown[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}BALLS THROWN: ");
+const u8 gBattle2PkmnCaptured[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}PKMN CAPTURED: ");
+
+// PAGE 5
+const u8 gBattle3Header[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}PLAYER STATS (BATTLE 3)");
+const u8 gBattle3MovesHitBy[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}MOVES HIT BY: ");
+const u8 gBattle3MovesMissed[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}MOVES MISSED: ");
+const u8 gBattle3SEMovesUsed[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}S.E. MOVES USED: ");
+const u8 gBattle3NVEMovesUsed[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}N.V.E. MOVES USED: ");
+const u8 gBattle3CriticalHits[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}CRITICAL HITS: ");
+const u8 gBattle3OHKOs[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}OHKOs: ");
+
+// PAGE 6
+const u8 gBattle4Header[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}PLAYER STATS (BATTLE 4)");
+const u8 gBattle4DamageDealt[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}DAMAGE DEALT: ");
+const u8 gBattle4DamageTaken[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}DAMAGE TAKEN: ");
+
+// PAGE 7
+const u8 gMoneyItemsHeader[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}PLAYER STATS (MONEY & ITEMS)");
+const u8 gMoneyItemsMoneyMade[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}MONEY MADE: ");
+const u8 gMoneyItemsMoneySpent[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}MONEY SPENT: ");
+const u8 gMoneyItemsMoneyLost[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}MONEY LOST: ");
+const u8 gMoneyItemsItemsPickedUp[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}ITEMS PICKED UP: ");
+const u8 gMoneyItemsItemsBought[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}ITEMS BOUGHT: ");
+const u8 gMoneyItemsItemsSold[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}ITEMS SOLD: ");
+
+// PAGE 8
+const u8 gMiscHeader[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}PLAYER STATS (MISC.)");
+const u8 gMiscTimesSaved[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}TIMES SAVED: ");
+const u8 gMiscSaveReloads[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}SAVE RELOADS: ");
+const u8 gMiscClockResets[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}CLOCK RESETS: ");
+const u8 gMiscEvosAttempted[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}EVOS ATTEMPTED: ");
+const u8 gMiscEvosCompleted[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}EVOS COMPLETED: ");
+const u8 gMiscEvosCancelled[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}EVOS CANCELLED: ");
+
+const u8 gPageText[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}{LEFT_ARROW} PAGE {STR_VAR_1} {RIGHT_ARROW}");
+
+#define CHAR_0 0xA1
+
+EWRAM_DATA u8 gBufferedString[18] = {0}; // Timer
+EWRAM_DATA u8 gBufferedString2[13] = {0}; // Standard 6 digit stats
+EWRAM_DATA u8 gBufferedString3[15] = {0}; // Standard 6 digit stats + (secondary stat)
+
+const u8 *GetFormattedFrameTimerStr(enum DoneButtonStat stat, enum DoneButtonStat stat2)
+{
+    u32 frames; // guaranteed to be one of the timer ones.
+    u32 hours;
+    u32 minutes;
+    u32 seconds;
+    u32 milliseconds;
+
+    switch(stat)
+    {
+        case DB_FRAME_COUNT_TOTAL:
+            frames = gLocalFrameTimers.totalFrames;
+            break;
+        case DB_FRAME_COUNT_OW:
+            frames = gLocalFrameTimers.totalFramesOw;
+            break;
+        case DB_FRAME_COUNT_BATTLE:
+            frames = gLocalFrameTimers.totalFramesBattle;
+            break;
+        case DB_FRAME_COUNT_MENU:
+            frames = gLocalFrameTimers.totalFramesMenu;
+            break;
+        case DB_FRAME_COUNT_INTROS:
+            frames = gLocalFrameTimers.totalFramesIntro;
+            break;
+    }
+    
+    seconds = frames / 60;
+    milliseconds = frames - (seconds * 60);
+    minutes = seconds / 60;
+    seconds = seconds - (minutes * 60);
+    hours = minutes / 60;
+    minutes = minutes - (hours * 60);
+
+    gBufferedString[0] = 0xFC; // {COLOR GREEN}
+    gBufferedString[1] = 0x01;
+    gBufferedString[2] = 0x06;
+    gBufferedString[3] = 0xFC; // {SHADOW LIGHT_GREEN}
+    gBufferedString[4] = 0x03;
+    gBufferedString[5] = 0x07;
+    gBufferedString[6] = CHAR_0 + (hours / 10);
+    gBufferedString[7] = CHAR_0 + (hours % 10);
+    gBufferedString[8] = 0xF0; // ':'
+    gBufferedString[9] = CHAR_0 + (minutes / 10);
+    gBufferedString[10] = CHAR_0 + (minutes % 10);
+    gBufferedString[11] = 0xF0; // ':'
+    gBufferedString[12] = CHAR_0 + (seconds / 10);
+    gBufferedString[13] = CHAR_0 + (seconds % 10);
+    gBufferedString[14] = 0xAD; // '.'
+    gBufferedString[15] = CHAR_0 + (milliseconds / 10);
+    gBufferedString[16] = CHAR_0 + (milliseconds % 10);
+    gBufferedString[17] = 0xFF;
+
+    return (const u8 *)gBufferedString;
+}
+
+const u8 gBufferedString4[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}{STR_VAR_1}");
+const u8 gBufferedString5[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}{STR_VAR_1}({STR_VAR_2})");
+
+int GetNumDigits(int n)
+{
+    int count = 0;
+    while(n != 0)
+    {
+        n /= 10;
+        ++count;
+    }
+    if(count == 0)
+        count = 1;
+    return count;
+}
+
+const u8 *GetStandardButtonStat(enum DoneButtonStat stat, enum DoneButtonStat stat2)
+{
+    u32 number = GetDoneButtonStat(stat);
+
+    if(number > 999999)
+        number = 999999;
+
+    ConvertIntToDecimalStringN(gStringVar1, number, STR_CONV_MODE_RIGHT_ALIGN, GetNumDigits(number));
+    StringExpandPlaceholders(gStringVar4, gBufferedString4);
+    return gStringVar4;
+}
+
+const u8 *GetStandardDoubleButtonStat(enum DoneButtonStat stat, enum DoneButtonStat stat2)
+{
+    u32 number1 = GetDoneButtonStat(stat);
+    u32 number2 = GetDoneButtonStat(stat2);
+
+    if(number1 > 999999)
+        number1 = 999999;
+
+    if(number2 > 999999)
+        number2 = 999999;
+
+    ConvertIntToDecimalStringN(gStringVar1, number1, STR_CONV_MODE_RIGHT_ALIGN, GetNumDigits(number1));
+    ConvertIntToDecimalStringN(gStringVar2, number2, STR_CONV_MODE_RIGHT_ALIGN, GetNumDigits(number2));
+    StringExpandPlaceholders(gStringVar4, gBufferedString5);
+    return gStringVar4;
+}
+
+const struct DoneButtonLineItem sLineItems[8][7] = {
+    { // PAGE 1 (TODO)
+        {gTimersHeader, NULL},
+        {gTimersTotalTime, GetFormattedFrameTimerStr, DB_FRAME_COUNT_TOTAL},
+        {gTimersOverworldTime, GetFormattedFrameTimerStr, DB_FRAME_COUNT_OW},
+        {gTimersTimeInBattle, GetFormattedFrameTimerStr, DB_FRAME_COUNT_BATTLE},
+        {gTimersTimeInMenus, GetFormattedFrameTimerStr, DB_FRAME_COUNT_MENU},
+        {gTimersTimeInIntros, GetFormattedFrameTimerStr, DB_FRAME_COUNT_INTROS},
+        {NULL, NULL}
+    },
+    { // PAGE 2 (TODO)
+        {gMovementHeader, NULL},
+        {gMovementTotalSteps, GetStandardButtonStat, DB_STEP_COUNT},
+        {gMovementStepsWalked, GetStandardButtonStat, DB_STEP_COUNT_WALK},
+        {gMovementStepsBiked, GetStandardButtonStat, DB_STEP_COUNT_BIKE},
+        {gMovementStepsSurfed, GetStandardButtonStat, DB_STEP_COUNT_SURF},
+        {gMovementStepsRan, GetStandardButtonStat, DB_STEP_COUNT_RUN},
+        {gMovementBonks, GetStandardButtonStat, DB_BONKS}
+    },
+    { // PAGE 3 (TODO)
+        {gBattle1Header, NULL},
+        {gBattle1TotalBattles, GetStandardButtonStat, DB_BATTLES},
+        {gBattle1WildBattles, GetStandardButtonStat, DB_WILD_BATTLES},
+        {gBattle1TrainerBattles, GetStandardButtonStat, DB_TRAINER_BATTLES},
+        {gBattle1BattlesFledFrom, GetStandardButtonStat, DB_BATTLES_FLED},
+        {gBattle1FailedEscapes, GetStandardButtonStat, DB_FAILED_RUNS},
+        {NULL, NULL}
+    },
+    { // PAGE 4 (TODO)
+        {gBattle2Header, NULL},
+        {gBattle2EnemyPkmnFainted, GetStandardButtonStat, DB_ENEMY_POKEMON_FAINTED},
+        {gBattle2ExpGained, GetStandardButtonStat, DB_EXP_GAINED},
+        {gBattle2OwnPkmnFainted, GetStandardButtonStat, DB_PLAYER_POKEMON_FAINTED},
+        {gBattle2NumSwitchouts, GetStandardButtonStat, DB_SWITCHOUTS},
+        {gBattle2BallsThrown, GetStandardButtonStat, DB_BALLS_THROWN},
+        {gBattle2PkmnCaptured, GetStandardButtonStat, DB_POKEMON_CAUGHT_IN_BALLS}
+    },
+    { // PAGE 5 (TODO)
+        {gBattle3Header, NULL},
+        {gBattle3MovesHitBy, GetStandardDoubleButtonStat, DB_OWN_MOVES_HIT, DB_ENEMY_MOVES_HIT}, // Players (Opponents)
+        {gBattle3MovesMissed, GetStandardDoubleButtonStat, DB_OWN_MOVES_MISSED, DB_ENEMY_MOVES_MISSED}, // Players (Opponents)
+        {gBattle3SEMovesUsed, GetStandardDoubleButtonStat, DB_OWN_MOVES_SE, DB_ENEMY_MOVES_SE}, // Players (Opponents)
+        {gBattle3NVEMovesUsed, GetStandardDoubleButtonStat, DB_OWN_MOVES_NVE, DB_ENEMY_MOVES_NVE}, // Players (Opponents)
+        {gBattle3CriticalHits, GetStandardDoubleButtonStat, DB_CRITS_DEALT, DB_CRITS_TAKEN}, // Players (Opponents)
+        {gBattle3OHKOs, GetStandardDoubleButtonStat, DB_OHKOS_DEALT, DB_OHKOS_TAKEN} // Players (Opponents)
+    },
+    { // PAGE 6 (TODO)
+        {gBattle4Header, NULL},
+        {gBattle4DamageDealt, GetStandardDoubleButtonStat, DB_TOTAL_DAMAGE_DEALT, DB_ACTUAL_DAMAGE_DEALT}, // Total (Actual)
+        {gBattle4DamageTaken, GetStandardDoubleButtonStat, DB_TOTAL_DAMAGE_TAKEN, DB_ACTUAL_DAMAGE_TAKEN}, // Total (Actual)
+        {NULL, NULL},
+        {NULL, NULL},
+        {NULL, NULL},
+        {NULL, NULL}
+    },
+    { // PAGE 7 (TODO)
+        {gMoneyItemsHeader, NULL},
+        {gMoneyItemsMoneyMade, GetStandardButtonStat, DB_MONEY_MADE},
+        {gMoneyItemsMoneySpent, GetStandardButtonStat, DB_MONEY_SPENT},
+        {gMoneyItemsMoneyLost, GetStandardButtonStat, DB_MONEY_LOST},
+        {gMoneyItemsItemsPickedUp, GetStandardButtonStat, DB_ITEMS_PICKED_UP},
+        {gMoneyItemsItemsBought, GetStandardButtonStat, DB_ITEMS_BOUGHT},
+        {gMoneyItemsItemsSold, GetStandardButtonStat, DB_ITEMS_SOLD}
+    },
+    { // PAGE 8 (TODO)
+        {gMiscHeader, NULL},
+        {gMiscTimesSaved, GetStandardButtonStat, DB_SAVE_COUNT},
+        {gMiscSaveReloads, GetStandardButtonStat, DB_RELOAD_COUNT},
+        {gMiscClockResets, GetStandardButtonStat, DB_CLOCK_RESET_COUNT},
+        {gMiscEvosAttempted, GetStandardButtonStat, DB_EVOLUTIONS_ATTEMPTED},
+        {gMiscEvosCompleted, GetStandardButtonStat, DB_EVOLUTIONS_COMPLETED},
+        {gMiscEvosCancelled, GetStandardButtonStat, DB_EVOLUTIONS_CANCELLED}
+    }
+};
+
+#define NPAGES (NELEMS(sLineItems))
+
+static const struct BgTemplate sSpeedchoiceDoneButtonTemplates[3] =
+{
+   {
+       .bg = 1,
+       .charBaseIndex = 1,
+       .mapBaseIndex = 30,
+       .screenSize = 0,
+       .paletteMode = 0,
+       .priority = 1,
+       .baseTile = 0
+   },
+   {
+       .bg = 0,
+       .charBaseIndex = 1,
+       .mapBaseIndex = 31,
+       .screenSize = 0,
+       .paletteMode = 0,
+       .priority = 2,
+       .baseTile = 0
+   },
+   // 0x000001ec
+   {
+       .bg = 2,
+       .charBaseIndex = 1,
+       .mapBaseIndex = 29,
+       .screenSize = 0,
+       .paletteMode = 0,
+       .priority = 0,
+       .baseTile = 0
+   }
+};
+
+/*
+    {1, 2, 1, 0x1A, 2, 1, 2},
+    {0, 2, 5, 0x1A, 14, 1, 0x36},
+    {2, 2, 15, 0x1A, 4, 15, 427},
+    {2, 23, 9, 4, 4, 15, 531}, // YES/NO
+    DUMMY_WIN_TEMPLATE
+*/
+
+static const struct WindowTemplate sWinTemplates[3] =
+{
+    {
+        .bg = 1,
+        .tilemapLeft = 1,
+        .tilemapTop = 1,
+        .width = 28,
+        .height = 18,
+        .paletteNum = 1,
+        .baseBlock = 427,
+    },
+    //{0, 2, 5, 0x1A, 14, 1, 0x36},
+    DUMMY_WIN_TEMPLATE,
+};
+
+void Task_InitDoneButtonMenu(u8 taskId)
+{
+    OpenDoneButton(CB2_ReturnToField);
+    DestroyTask(taskId);
+}
+
+void OpenDoneButton(MainCallback doneCallback)
+{
+    doneButton = AllocZeroed(sizeof(*doneButton));
+    if (doneButton == NULL)
+        SetMainCallback2(doneCallback);
+    else
+    {
+        doneButton->doneCallback = doneCallback;
+        doneButton->taskId = 0xFF;
+        doneButton->page = 0;
+        SetMainCallback2(DoneButtonCB);
+    }
+}
+
+static void VBlankCB(void)
+{
+    LoadOam();
+    ProcessSpriteCopyRequests();
+    TransferPlttBuffer();
+}
+
+static void MainCB2(void)
+{
+    RunTasks();
+    AnimateSprites();
+    BuildOamBuffer();
+    UpdatePaletteFade();
+}
+
+extern const struct BgTemplate sMainMenuBgTemplates[];
+extern const struct WindowTemplate sSpeedchoiceMenuWinTemplates[];
+
+void Task_DoneButtonFadeIn(u8 taskId);
+
+void DoneButtonCB(void)
+{
+    switch (gMain.state)
+    {
+    default:
+    case 0:
+        SetVBlankCallback(NULL);
+        gMain.state++;
+        break;
+    case 1:
+    {
+        u8 *addr;
+        u32 size;
+
+        addr = (u8 *)VRAM;
+        size = 0x18000;
+        while (1)
+        {
+            DmaFill16(3, 0, addr, 0x1000);
+            addr += 0x1000;
+            size -= 0x1000;
+            if (size <= 0x1000)
+            {
+                DmaFill16(3, 0, addr, size);
+                break;
+            }
+        }
+        DmaClear32(3, OAM, OAM_SIZE);
+        DmaClear16(3, PLTT, PLTT_SIZE);
+        SetGpuReg(REG_OFFSET_DISPCNT, 0);
+        ResetBgsAndClearDma3BusyFlags(0);
+        InitBgsFromTemplates(0, sSpeedchoiceDoneButtonTemplates, ARRAY_COUNT(sSpeedchoiceDoneButtonTemplates));
+        ChangeBgX(0, 0, 0);
+        ChangeBgY(0, 0, 0);
+        ChangeBgX(1, 0, 0);
+        ChangeBgY(1, 0, 0);
+        ChangeBgX(2, 0, 0);
+        ChangeBgY(2, 0, 0);
+        ChangeBgX(3, 0, 0);
+        ChangeBgY(3, 0, 0);
+        InitWindows(sWinTemplates);
+        DeactivateAllTextPrinters();
+        SetGpuReg(REG_OFFSET_WIN0H, 0);
+        SetGpuReg(REG_OFFSET_WIN0V, 0);
+        SetGpuReg(REG_OFFSET_WININ, 5);
+        SetGpuReg(REG_OFFSET_WINOUT, 39);
+        SetGpuReg(REG_OFFSET_BLDCNT, 0);
+        SetGpuReg(REG_OFFSET_BLDALPHA, 0);
+        SetGpuReg(REG_OFFSET_BLDY, 0);
+        SetGpuReg(REG_OFFSET_DISPCNT, DISPCNT_WIN0_ON | DISPCNT_OBJ_ON | DISPCNT_OBJ_1D_MAP);
+        ShowBg(0);
+        ShowBg(1);
+        ShowBg(2);
+        gMain.state++;
+        break;
+    }
+    case 2:
+        ResetPaletteFade();
+        ScanlineEffect_Stop();
+        ResetTasks();
+        ResetSpriteData();
+        gMain.state++;
+        break;
+    case 3:
+        LoadBgTiles(1, GetWindowFrameTilesPal(gSaveBlock2Ptr->optionsWindowFrameType)->tiles, 0x120, 0x1A2);
+        gMain.state++;
+        break;
+    case 4:
+        LoadPalette(sOptionMenuBg_Pal, 0, sizeof(sOptionMenuBg_Pal));
+        LoadPalette(GetWindowFrameTilesPal(gSaveBlock2Ptr->optionsWindowFrameType)->pal, 0x70, 0x20);
+        gMain.state++;
+        break;
+    case 5:
+        LoadPalette(sOptionMenuText_Pal, 0x10, sizeof(sOptionMenuText_Pal));
+        LoadPalette(sMainMenuTextPal, 0xF0, sizeof(sMainMenuTextPal));
+        gMain.state++;
+        break;
+    case 6:
+        PutWindowTilemap(0);
+        gMain.state++;
+        break;
+    case 7:
+        gMain.state++;
+        break;
+    case 8:
+        //PutWindowTilemap(1);
+        //DrawOptionMenuTexts();
+        gMain.state++;
+    case 9:
+        DrawDoneButtonFrame();
+        gLocalFrameTimers.totalFrames = GetDoneButtonStat(DB_FRAME_COUNT_TOTAL) + gFrameTimers.frameCount;
+        gLocalFrameTimers.totalFramesOw = GetDoneButtonStat(DB_FRAME_COUNT_OW) + gFrameTimers.owFrameCount;
+        gLocalFrameTimers.totalFramesBattle = GetDoneButtonStat(DB_FRAME_COUNT_BATTLE) + gFrameTimers.battleFrameCount;
+        gLocalFrameTimers.totalFramesMenu = GetDoneButtonStat(DB_FRAME_COUNT_MENU) + gFrameTimers.menuFrameCount;
+        gLocalFrameTimers.totalFramesIntro = GetDoneButtonStat(DB_FRAME_COUNT_INTROS) + gFrameTimers.introsFrameCount;
+        gMain.state++;
+        break;
+    case 10:
+        //FillWindowPixelBuffer(0, PIXEL_FILL(0));
+        PlayBGM(MUS_C_COMM_CENTER);
+        PrintGameStatsPage();
+        doneButton->taskId = CreateTask(Task_DoneButtonFadeIn, 0);
+        gMain.state++;
+        break;
+    case 11:
+        BeginNormalPaletteFade(0xFFFFFFFF, 0, 16, 0, RGB_BLACK);
+        SetVBlankCallback(VBlankCB);
+        SetMainCallback2(MainCB2);
+        break;
+    }
+}
+
+void Task_DoneButtonFadeIn(u8 taskId)
+{
+    if (!gPaletteFade.active)
+        gTasks[taskId].func = Task_DoneButton;
+}
+
+static void Task_DoneButton(u8 taskId)
+{
+    struct DoneButton *data = doneButton;
+
+    if (JOY_NEW(DPAD_RIGHT))
+    {
+        PlaySE(SE_SELECT);
+        if (++data->page >= NPAGES)
+            data->page = 0;
+        PrintGameStatsPage();
+    }
+    else if (JOY_NEW(DPAD_LEFT))
+    {
+        PlaySE(SE_SELECT);
+        if (data->page == 0)
+            data->page = NPAGES - 1;
+        else
+            data->page--;
+        PrintGameStatsPage();
+    }
+    else if (JOY_NEW(A_BUTTON | B_BUTTON | START_BUTTON))
+    {
+        PlaySE(SE_SELECT);
+        gTasks[taskId].func = Task_DestroyDoneButton;
+        BeginNormalPaletteFade(0xFFFFFFFF, 0, 0, 16, RGB_BLACK);
+    }
+}
+
+static void Task_DestroyDoneButton(u8 taskId)
+{
+    if (!gPaletteFade.active)
+    {
+        FreeAllWindowBuffers();
+        SetMainCallback2(doneButton->doneCallback);
+        Free(doneButton);
+        DestroyTask(taskId);
+    }
+}
+
+// it doesnt seem centered right. subtract 8 pixels to compensate for these functions
+void PrintPageHeader(const struct DoneButtonLineItem *item)
+{
+    s32 width = GetStringWidth(0, item->name, 0);
+    s32 centered_x = ((29 * 8) - (1 * 8) - width) / 2;
+
+    AddTextPrinterParameterized(0, 1, item->name, centered_x - 8, 1, -1, NULL);
+}
+
+void PrintPageString(void)
+{
+    struct DoneButton *data = doneButton;
+    s32 width, centered_x;
+
+    ConvertIntToDecimalStringN(gStringVar1, data->page + 1, STR_CONV_MODE_RIGHT_ALIGN, 1);
+    StringExpandPlaceholders(gStringVar4, gPageText);
+    width = GetStringWidth(0, gStringVar4, 0);
+    centered_x = (240 - width) / 2;
+
+    AddTextPrinterParameterized(0, 1, gStringVar4, centered_x - 8, 128, -1, NULL);
+}
+
+static void PrintGameStatsPage(void)
+{
+    const struct DoneButtonLineItem * items = sLineItems[doneButton->page];
+    s32 i;
+
+    FillWindowPixelBuffer(0, PIXEL_FILL(1));
+    for (i = 0; i < 7; i++)
+    {
+        s32 width;
+        const char * value_s;
+        if(i == 0 && items[i].name) // this is the header. special treatment
+            PrintPageHeader(&items[i]);
+        else
+        {
+            if (items[i].name != NULL)
+            {
+                AddTextPrinterParameterized(0, 1, items[i].name, 1, 18 * i + 1, -1, NULL);
+            }
+            if (items[i].printfn != NULL)
+            {
+                value_s = items[i].printfn(items[i].stat, items[i].stat2);
+            }
+            else
+            {
+                value_s = gTODOString;
+            }
+            width = GetStringWidth(0, value_s, 0);
+            if (items[i].name != NULL)
+            {
+                if(doneButton->page + 1 == 1) // timer spacing handling
+                    AddTextPrinterParameterized(0, 1, value_s, 224 - width, 18 * i + 1, -1, NULL);
+                else
+                    AddTextPrinterParameterized(0, 1, value_s, 200 - width, 18 * i + 1, -1, NULL);
+            }
+        }
+    }
+    PrintPageString();
+    PutWindowTilemap(0);
+    CopyWindowToVram(0, 3);
+}
+
+void DrawDoneButtonFrame(void)
+{
+    //                   bg, tileNum, x,    y,    width, height,  pal
+    FillBgTilemapBufferRect(1, 0x1A2, 0,    0,      1,      1,      7);
+    FillBgTilemapBufferRect(1, 0x1A3, 1,    0,      0x1C,   1,      7);
+    FillBgTilemapBufferRect(1, 0x1A4, 29,   0,      1,      1,      7);
+    FillBgTilemapBufferRect(1, 0x1A5, 0,    1,      1,      0x16,   7);
+    FillBgTilemapBufferRect(1, 0x1A7, 29,   1,      1,      0x16,   7);
+    FillBgTilemapBufferRect(1, 0x1A8, 0,    19,     1,      1,      7);
+    FillBgTilemapBufferRect(1, 0x1A9, 1,    19,     0x1C,   1,      7);
+    FillBgTilemapBufferRect(1, 0x1AA, 29,   19,     1,      1,      7);
+
+    CopyBgTilemapBufferToVram(1);
+}
diff --git a/src/egg_hatch.c b/src/egg_hatch.c
index 4e050ce62..df09d6c3f 100644
--- a/src/egg_hatch.c
+++ b/src/egg_hatch.c
@@ -36,6 +36,7 @@
 #include "data.h"
 #include "battle.h" // to get rid of later
 #include "constants/rgb.h"
+#include "speedchoice.h"
 
 struct EggHatchData
 {
@@ -868,6 +869,7 @@ static void EggHatchPrintMessage(u8 windowId, u8* string, u8 x, u8 y, u8 speed)
 u8 GetEggCyclesToSubtract(void)
 {
     u8 count, i;
+
     for (count = CalculatePlayerPartyCount(), i = 0; i < count; i++)
     {
         if (!GetMonData(&gPlayerParty[i], MON_DATA_SANITY_IS_EGG))
diff --git a/src/event_object_movement.c b/src/event_object_movement.c
index 12ef4acdc..1c31719bf 100644
--- a/src/event_object_movement.c
+++ b/src/event_object_movement.c
@@ -29,6 +29,7 @@
 #include "constants/mauville_old_man.h"
 #include "constants/trainer_types.h"
 #include "constants/union_room.h"
+#include "speedchoice.h"
 
 // this file was known as evobjmv.c in Game Freak's original source
 
@@ -1221,7 +1222,13 @@ static u8 InitObjectEventStateFromTemplate(struct ObjectEventTemplate *template,
     objectEvent->active = TRUE;
     objectEvent->triggerGroundEffectsOnMove = TRUE;
     objectEvent->graphicsId = template->graphicsId;
-    objectEvent->movementType = template->movementType;
+    
+    if((CheckSpeedchoiceOption(SPINNERS, SPIN_HELL) == TRUE || CheckSpeedchoiceOption(SPINNERS, SPIN_WHY) == TRUE) && gPlayerAvatar.objectEventId != objectEventId && (template->trainerType == 1 || template->trainerType == 3))
+        objectEvent->movementType = 1;
+    else
+        objectEvent->movementType = template->movementType;
+    
+    //objectEvent->movementType = template->movementType;
     objectEvent->localId = template->localId;
     objectEvent->mapNum = mapNum;
     objectEvent->mapGroup = mapGroup;
@@ -1235,9 +1242,21 @@ static u8 InitObjectEventStateFromTemplate(struct ObjectEventTemplate *template,
     objectEvent->previousElevation = template->elevation;
     objectEvent->rangeX = template->movementRangeX;
     objectEvent->rangeY = template->movementRangeY;
-    objectEvent->trainerType = template->trainerType;
+    
+	if((CheckSpeedchoiceOption(SPINNERS, SPIN_HELL) == TRUE || CheckSpeedchoiceOption(SPINNERS, SPIN_WHY) == TRUE) && gPlayerAvatar.objectEventId != objectEventId && (template->trainerType == 1 || template->trainerType == 3))
+        objectEvent->trainerType = 1;
+    else
+        objectEvent->trainerType = template->trainerType;
+    
+    //objectEvent->trainerType = template->trainerType;
     objectEvent->mapNum = mapNum;
-    objectEvent->trainerRange_berryTreeId = template->trainerRange_berryTreeId;
+
+    if(CheckSpeedchoiceOption(MAXVISION, MAX_OFF) == FALSE && gPlayerAvatar.objectEventId != objectEventId && (template->trainerType == 1 || template->trainerType == 3) && (template->trainerRange_berryTreeId != 0 || *template->script == 0x5C /*trainerbattle*/))
+        objectEvent->trainerRange_berryTreeId = MAX_VISION_RANGE;
+    else
+        objectEvent->trainerRange_berryTreeId = template->trainerRange_berryTreeId;
+
+    //objectEvent->trainerRange_berryTreeId = template->trainerRange_berryTreeId;
     objectEvent->previousMovementDirection = gInitialMovementTypeFacingDirections[template->movementType];
     SetObjectEventDirection(objectEvent, objectEvent->previousMovementDirection);
     SetObjectEventDynamicGraphicsId(objectEvent);
@@ -1493,7 +1512,10 @@ static void MakeObjectTemplateFromObjectEventGraphicsInfoWithCallbackIndex(u16 g
 
 static void MakeObjectTemplateFromObjectEventTemplate(struct ObjectEventTemplate *objectEventTemplate, struct SpriteTemplate *spriteTemplate, const struct SubspriteTable **subspriteTables)
 {
-    MakeObjectTemplateFromObjectEventGraphicsInfoWithCallbackIndex(objectEventTemplate->graphicsId, objectEventTemplate->movementType, spriteTemplate, subspriteTables);
+    if((CheckSpeedchoiceOption(SPINNERS, SPIN_HELL) == TRUE || CheckSpeedchoiceOption(SPINNERS, SPIN_WHY) == TRUE) && (objectEventTemplate->trainerType == 3 || objectEventTemplate->trainerType == 1))
+        MakeObjectTemplateFromObjectEventGraphicsInfoWithCallbackIndex(objectEventTemplate->graphicsId, 1, spriteTemplate, subspriteTables);
+    else
+        MakeObjectTemplateFromObjectEventGraphicsInfoWithCallbackIndex(objectEventTemplate->graphicsId, objectEventTemplate->movementType, spriteTemplate, subspriteTables);
 }
 
 u8 AddPseudoObjectEvent(u16 graphicsId, void (*callback)(struct Sprite *), s16 x, s16 y, u8 subpriority)
@@ -2622,6 +2644,10 @@ bool8 ObjectEventIsTrainerAndCloseToPlayer(struct ObjectEvent *objectEvent)
     s16 minY;
     s16 maxY;
 
+    if (CheckSpeedchoiceOption(SPINNERS, SPIN_KEEP) == FALSE)
+    {
+        return FALSE;
+    }
     if (!TestPlayerAvatarFlags(PLAYER_AVATAR_FLAG_DASH))
     {
         return FALSE;
@@ -2897,6 +2923,21 @@ bool8 MovementType_LookAround_Step3(struct ObjectEvent *objectEvent, struct Spri
     return FALSE;
 }
 
+u8 GetNextDirection(struct ObjectEvent *objectEvent, struct Sprite *sprite)
+{
+    switch(objectEvent->facingDirection)
+    {
+        case DIR_SOUTH:
+            return DIR_WEST;
+        case DIR_NORTH:
+            return DIR_EAST;
+        case DIR_WEST:
+            return DIR_NORTH;
+        case DIR_EAST:
+            return DIR_SOUTH;
+    }
+}
+
 bool8 MovementType_LookAround_Step4(struct ObjectEvent *objectEvent, struct Sprite *sprite)
 {
     u8 direction;
@@ -2904,7 +2945,16 @@ bool8 MovementType_LookAround_Step4(struct ObjectEvent *objectEvent, struct Spri
     memcpy(directions, gStandardDirections, sizeof directions);
     direction = TryGetTrainerEncounterDirection(objectEvent, RUNFOLLOW_ANY);
     if (direction == DIR_NONE)
-        direction = directions[Random() & 3];
+    {
+        u8 newDirections[4];
+        memcpy(newDirections, gStandardDirections, sizeof newDirections);
+        if((CheckSpeedchoiceOption(SPINNERS, SPIN_HELL) == TRUE || CheckSpeedchoiceOption(SPINNERS, SPIN_WHY) == TRUE))
+            direction = newDirections[Random() % 4];
+        else if(CheckSpeedchoiceOption(SPINNERS, SPIN_NERF) == TRUE)
+            direction = GetNextDirection(objectEvent, sprite);
+        else
+            direction = directions[Random() & 3];
+    }
 
     SetObjectEventDirection(objectEvent, direction);
     sprite->data[1] = 1;
@@ -2953,7 +3003,16 @@ bool8 MovementType_WanderUpAndDown_Step4(struct ObjectEvent *objectEvent, struct
     u8 direction;
     u8 directions[2];
     memcpy(directions, gUpAndDownDirections, sizeof directions);
-    direction = directions[Random() & 1];
+    {
+        u8 newDirections[4];
+        memcpy(newDirections, gStandardDirections, sizeof newDirections);
+        if((CheckSpeedchoiceOption(SPINNERS, SPIN_HELL) == TRUE || CheckSpeedchoiceOption(SPINNERS, SPIN_WHY) == TRUE))
+            direction = newDirections[Random() % 4];
+        else if(CheckSpeedchoiceOption(SPINNERS, SPIN_NERF) == TRUE)
+            direction = GetNextDirection(objectEvent, sprite);
+        else
+            direction = directions[Random() & 0x01];
+    }
     SetObjectEventDirection(objectEvent, direction);
     sprite->data[1] = 5;
     if (GetCollisionInDirection(objectEvent, direction))
@@ -3226,7 +3285,14 @@ bool8 MovementType_FaceDownAndUp_Step4(struct ObjectEvent *objectEvent, struct S
     direction = TryGetTrainerEncounterDirection(objectEvent, RUNFOLLOW_NORTH_SOUTH);
     if (direction == 0)
     {
-        direction = directions[Random() & 1];
+        u8 newDirections[4];
+        memcpy(newDirections, gStandardDirections, sizeof newDirections);
+        if((CheckSpeedchoiceOption(SPINNERS, SPIN_HELL) == TRUE || CheckSpeedchoiceOption(SPINNERS, SPIN_WHY) == TRUE))
+            direction = newDirections[Random() % 4];
+        else if(CheckSpeedchoiceOption(SPINNERS, SPIN_NERF) == TRUE)
+            direction = GetNextDirection(objectEvent, sprite);
+        else
+            direction = directions[Random() & 1];
     }
     SetObjectEventDirection(objectEvent, direction);
     sprite->data[1] = 1;
@@ -3278,7 +3344,14 @@ bool8 MovementType_FaceLeftAndRight_Step4(struct ObjectEvent *objectEvent, struc
     direction = TryGetTrainerEncounterDirection(objectEvent, RUNFOLLOW_EAST_WEST);
     if (direction == 0)
     {
-        direction = directions[Random() & 1];
+        u8 newDirections[4];
+        memcpy(newDirections, gStandardDirections, sizeof newDirections);
+        if((CheckSpeedchoiceOption(SPINNERS, SPIN_HELL) == TRUE || CheckSpeedchoiceOption(SPINNERS, SPIN_WHY) == TRUE))
+            direction = newDirections[Random() % 4];
+        else if(CheckSpeedchoiceOption(SPINNERS, SPIN_NERF) == TRUE)
+            direction = GetNextDirection(objectEvent, sprite);
+        else
+            direction = directions[Random() & 0x01];
     }
     SetObjectEventDirection(objectEvent, direction);
     sprite->data[1] = 1;
@@ -3330,7 +3403,14 @@ bool8 MovementType_FaceUpAndLeft_Step4(struct ObjectEvent *objectEvent, struct S
     direction = TryGetTrainerEncounterDirection(objectEvent, RUNFOLLOW_NORTH_WEST);
     if (direction == 0)
     {
-        direction = directions[Random() & 1];
+        u8 newDirections[4];
+        memcpy(newDirections, gStandardDirections, sizeof newDirections);
+        if((CheckSpeedchoiceOption(SPINNERS, SPIN_HELL) == TRUE || CheckSpeedchoiceOption(SPINNERS, SPIN_WHY) == TRUE))
+            direction = newDirections[Random() % 4];
+        else if(CheckSpeedchoiceOption(SPINNERS, SPIN_NERF) == TRUE)
+            direction = GetNextDirection(objectEvent, sprite);
+        else
+            direction = directions[Random() & 1];
     }
     SetObjectEventDirection(objectEvent, direction);
     sprite->data[1] = 1;
@@ -3382,7 +3462,14 @@ bool8 MovementType_FaceUpAndRight_Step4(struct ObjectEvent *objectEvent, struct
     direction = TryGetTrainerEncounterDirection(objectEvent, RUNFOLLOW_NORTH_EAST);
     if (direction == 0)
     {
-        direction = directions[Random() & 1];
+        u8 newDirections[4];
+        memcpy(newDirections, gStandardDirections, sizeof newDirections);
+        if((CheckSpeedchoiceOption(SPINNERS, SPIN_HELL) == TRUE || CheckSpeedchoiceOption(SPINNERS, SPIN_WHY) == TRUE))
+            direction = newDirections[Random() % 4];
+        else if(CheckSpeedchoiceOption(SPINNERS, SPIN_NERF) == TRUE)
+            direction = GetNextDirection(objectEvent, sprite);
+        else
+            direction = directions[Random() & 1];
     }
     SetObjectEventDirection(objectEvent, direction);
     sprite->data[1] = 1;
@@ -3434,7 +3521,14 @@ bool8 MovementType_FaceDownAndLeft_Step4(struct ObjectEvent *objectEvent, struct
     direction = TryGetTrainerEncounterDirection(objectEvent, RUNFOLLOW_SOUTH_WEST);
     if (direction == 0)
     {
-        direction = directions[Random() & 1];
+        u8 newDirections[4];
+        memcpy(newDirections, gStandardDirections, sizeof newDirections);
+        if((CheckSpeedchoiceOption(SPINNERS, SPIN_HELL) == TRUE || CheckSpeedchoiceOption(SPINNERS, SPIN_WHY) == TRUE))
+            direction = newDirections[Random() % 4];
+        else if(CheckSpeedchoiceOption(SPINNERS, SPIN_NERF) == TRUE)
+            direction = GetNextDirection(objectEvent, sprite);
+        else
+            direction = directions[Random() & 1];
     }
     SetObjectEventDirection(objectEvent, direction);
     sprite->data[1] = 1;
@@ -3486,7 +3580,14 @@ bool8 MovementType_FaceDownAndRight_Step4(struct ObjectEvent *objectEvent, struc
     direction = TryGetTrainerEncounterDirection(objectEvent, RUNFOLLOW_SOUTH_EAST);
     if (direction == 0)
     {
-        direction = directions[Random() & 1];
+        u8 newDirections[4];
+        memcpy(newDirections, gStandardDirections, sizeof newDirections);
+        if((CheckSpeedchoiceOption(SPINNERS, SPIN_HELL) == TRUE || CheckSpeedchoiceOption(SPINNERS, SPIN_WHY) == TRUE))
+            direction = newDirections[Random() % 4];
+        else if(CheckSpeedchoiceOption(SPINNERS, SPIN_NERF) == TRUE)
+            direction = GetNextDirection(objectEvent, sprite);
+        else
+            direction = directions[Random() & 1];
     }
     SetObjectEventDirection(objectEvent, direction);
     sprite->data[1] = 1;
@@ -3538,7 +3639,14 @@ bool8 MovementType_FaceDownUpAndLeft_Step4(struct ObjectEvent *objectEvent, stru
     direction = TryGetTrainerEncounterDirection(objectEvent, RUNFOLLOW_NORTH_SOUTH_WEST);
     if (direction == 0)
     {
-        direction = directions[Random() & 3];
+        u8 newDirections[4];
+        memcpy(newDirections, gStandardDirections, sizeof newDirections);
+        if((CheckSpeedchoiceOption(SPINNERS, SPIN_HELL) == TRUE || CheckSpeedchoiceOption(SPINNERS, SPIN_WHY) == TRUE))
+            direction = newDirections[Random() % 4];
+        else if(CheckSpeedchoiceOption(SPINNERS, SPIN_NERF) == TRUE)
+            direction = GetNextDirection(objectEvent, sprite);
+        else
+            direction = directions[Random() & 3];
     }
     SetObjectEventDirection(objectEvent, direction);
     sprite->data[1] = 1;
@@ -3590,7 +3698,14 @@ bool8 MovementType_FaceDownUpAndRight_Step4(struct ObjectEvent *objectEvent, str
     direction = TryGetTrainerEncounterDirection(objectEvent, RUNFOLLOW_NORTH_SOUTH_EAST);
     if (direction == 0)
     {
-        direction = directions[Random() & 3];
+        u8 newDirections[4];
+        memcpy(newDirections, gStandardDirections, sizeof newDirections);
+        if((CheckSpeedchoiceOption(SPINNERS, SPIN_HELL) == TRUE || CheckSpeedchoiceOption(SPINNERS, SPIN_WHY) == TRUE))
+            direction = newDirections[Random() % 4];
+        else if(CheckSpeedchoiceOption(SPINNERS, SPIN_NERF) == TRUE)
+            direction = GetNextDirection(objectEvent, sprite);
+        else
+            direction = directions[Random() & 3];
     }
     SetObjectEventDirection(objectEvent, direction);
     sprite->data[1] = 1;
@@ -3642,7 +3757,14 @@ bool8 MovementType_FaceUpLeftAndRight_Step4(struct ObjectEvent *objectEvent, str
     direction = TryGetTrainerEncounterDirection(objectEvent, RUNFOLLOW_NORTH_EAST_WEST);
     if (direction == 0)
     {
-        direction = directions[Random() & 3];
+        u8 newDirections[4];
+        memcpy(newDirections, gStandardDirections, sizeof newDirections);
+        if((CheckSpeedchoiceOption(SPINNERS, SPIN_HELL) == TRUE || CheckSpeedchoiceOption(SPINNERS, SPIN_WHY) == TRUE))
+            direction = newDirections[Random() % 4];
+        else if(CheckSpeedchoiceOption(SPINNERS, SPIN_NERF) == TRUE)
+            direction = GetNextDirection(objectEvent, sprite);
+        else
+            direction = directions[Random() & 3];
     }
     SetObjectEventDirection(objectEvent, direction);
     sprite->data[1] = 1;
@@ -8568,9 +8690,47 @@ u8 sub_80978E4(struct Sprite *sprite)
     return v2;
 }
 
+extern struct MapObjectTimerBackup gMapObjectTimerBackup[MAX_SPRITES];
+
+void TryRestoringSpinnerTimerBackup(struct Sprite *sprite)
+{
+    u8 i;
+
+    // if the first entry is backed up, the whole array is. sort of a hack so I dont need to decompile submenu calls.
+    if(gMapObjectTimerBackup[0].backedUp == TRUE && (CheckSpeedchoiceOption(SPINNERS, SPIN_HELL) == TRUE || CheckSpeedchoiceOption(SPINNERS, SPIN_WHY) == TRUE)) // only fix bag manip if HELL is enabled.
+    {
+        for(i = 0; i < MAX_SPRITES; i++)
+        {
+            // dont adjust the player's timer for safety.
+            if(gMapObjectTimerBackup[i].backedUp == TRUE && gSprites[gPlayerAvatar.spriteId].data[0] != gMapObjectTimerBackup[i].spriteId)
+                gSprites[i].data[3] = gMapObjectTimerBackup[i].timer;
+
+            gMapObjectTimerBackup[i].timer = 0;
+            gMapObjectTimerBackup[i].spriteId = 0;
+            gMapObjectTimerBackup[i].backedUp = FALSE; // since the player's info is also backed up, dont forget to unassumingly clear the backup status.
+        }
+    }
+}
+
 static void SetMovementDelay(struct Sprite *sprite, s16 timer)
 {
-    sprite->data[3] = timer;
+    TryRestoringSpinnerTimerBackup(sprite);
+    if(CheckSpeedchoiceOption(SPINNERS, SPIN_HELL) == TRUE && (gObjectEvents[sprite->data[0]].trainerType == 1 || gObjectEvents[sprite->data[0]].trainerType == 3))
+    {
+        sprite->data[3] = (Random() % 16) * 2 + 2;
+    }
+    else if(CheckSpeedchoiceOption(SPINNERS, SPIN_WHY) == TRUE && (gObjectEvents[sprite->data[0]].trainerType == 1 || gObjectEvents[sprite->data[0]].trainerType == 3))
+    {
+        sprite->data[3] = (Random() % 4) * 2 + 2;
+    }
+    else if(CheckSpeedchoiceOption(SPINNERS, SPIN_NERF) == TRUE && (gObjectEvents[sprite->data[0]].trainerType == 1 || gObjectEvents[sprite->data[0]].trainerType == 3)) // a bit redundant perhaps?
+    {
+        sprite->data[3] = PURGE_SPINNER_TIMER;
+    }
+    else
+    {
+        sprite->data[3] = timer;
+    }
 }
 
 static bool8 WaitForMovementDelay(struct Sprite *sprite)
diff --git a/src/evolution_scene.c b/src/evolution_scene.c
index d41bc5970..ac2ba6e36 100644
--- a/src/evolution_scene.c
+++ b/src/evolution_scene.c
@@ -32,6 +32,7 @@
 #include "constants/battle_string_ids.h"
 #include "constants/songs.h"
 #include "constants/rgb.h"
+#include "done_button.h"
 
 struct EvoInfo
 {
@@ -208,6 +209,8 @@ void EvolutionScene(struct Pokemon* mon, u16 speciesToEvolve, bool8 canStopEvo,
     u32 trainerId, personality;
     const struct CompressedSpritePalette* pokePal;
     u8 ID;
+    
+    TryIncrementButtonStat(DB_EVOLUTIONS_ATTEMPTED);
 
     SetHBlankCallback(NULL);
     SetVBlankCallback(NULL);
@@ -594,6 +597,7 @@ static void Task_EvolutionScene(u8 taskID)
         && gTasks[sEvoGraphicsTaskID].isActive
         && gTasks[taskID].tBits & TASK_BIT_CAN_STOP)
     {
+        TryIncrementButtonStat(DB_EVOLUTIONS_CANCELLED);
         gTasks[taskID].tState = 17;
         gTasks[sEvoGraphicsTaskID].EvoGraphicsTaskEvoStop = TRUE;
         sub_8140134();
@@ -710,6 +714,7 @@ static void Task_EvolutionScene(u8 taskID)
     case 14: // congratulations string and rename prompt
         if (IsCryFinished())
         {
+            TryIncrementButtonStat(DB_EVOLUTIONS_COMPLETED);
             StringExpandPlaceholders(gStringVar4, gText_CongratsPkmnEvolved);
             BattlePutTextOnWindow(gStringVar4, 0);
             PlayBGM(MUS_EVOLVED);
diff --git a/src/field_control_avatar.c b/src/field_control_avatar.c
index a811901a9..29fe5ae41 100644
--- a/src/field_control_avatar.c
+++ b/src/field_control_avatar.c
@@ -35,6 +35,8 @@
 #include "constants/maps.h"
 #include "constants/songs.h"
 #include "constants/trainer_hill.h"
+#include "speedchoice.h"
+#include "done_button.h"
 
 static EWRAM_DATA u8 sWildEncounterImmunitySteps = 0;
 static EWRAM_DATA u16 sPreviousPlayerMetatileBehavior = 0;
@@ -132,6 +134,33 @@ void FieldGetPlayerInput(struct FieldInput *input, u16 newKeys, u16 heldKeys)
         input->dpadDirection = DIR_EAST;
 }
 
+// The player is in a moving state. Assume a step was taken: figure out what it was.
+void DoDoneButtonStepStat(void)
+{
+    if ((gPlayerAvatar.flags & PLAYER_AVATAR_FLAG_SURFING) 
+     || (gPlayerAvatar.flags & PLAYER_AVATAR_FLAG_UNDERWATER))
+    {
+        TryIncrementButtonStat(DB_STEP_COUNT_SURF);
+        TryIncrementButtonStat(DB_STEP_COUNT); // step total
+    }
+    else if((gPlayerAvatar.flags & PLAYER_AVATAR_FLAG_MACH_BIKE) 
+         || (gPlayerAvatar.flags & PLAYER_AVATAR_FLAG_ACRO_BIKE))
+    {
+        TryIncrementButtonStat(DB_STEP_COUNT_BIKE);
+        TryIncrementButtonStat(DB_STEP_COUNT); // step total
+    }
+    else if((gPlayerAvatar.flags & PLAYER_AVATAR_FLAG_DASH))
+    {
+        TryIncrementButtonStat(DB_STEP_COUNT_RUN);
+        TryIncrementButtonStat(DB_STEP_COUNT); // step total
+    }
+    else if((gPlayerAvatar.flags & PLAYER_AVATAR_FLAG_ON_FOOT))
+    {
+        TryIncrementButtonStat(DB_STEP_COUNT_WALK);
+        TryIncrementButtonStat(DB_STEP_COUNT); // step total
+    }
+}
+
 int ProcessPlayerFieldInput(struct FieldInput *input)
 {
     struct MapPosition position;
@@ -156,6 +185,7 @@ int ProcessPlayerFieldInput(struct FieldInput *input)
     if (input->tookStep)
     {
         IncrementGameStat(GAME_STAT_STEPS);
+        DoDoneButtonStepStat();
         IncrementBirthIslandRockStepCount();
         if (TryStartStepBasedScript(&position, metatileBehavior, playerDirection) == TRUE)
             return TRUE;
@@ -448,7 +478,7 @@ static const u8 *GetInteractedMetatileScript(struct MapPosition *position, u8 me
 
 static const u8 *GetInteractedWaterScript(struct MapPosition *unused1, u8 metatileBehavior, u8 direction)
 {
-    if (FlagGet(FLAG_BADGE05_GET) == TRUE && PartyHasMonWithSurf() == TRUE && IsPlayerFacingSurfableFishableWater() == TRUE)
+    if ((FlagGet(FLAG_BADGE05_GET) == TRUE || (CheckSpeedchoiceOption(EARLYSURF, SURF_ON) && FlagGet(FLAG_BADGE03_GET))) && PartyHasMonWithSurf() == TRUE && IsPlayerFacingSurfableFishableWater() == TRUE)
         return EventScript_UseSurf;
 
     if (MetatileBehavior_IsWaterfall(metatileBehavior) == TRUE)
@@ -463,7 +493,7 @@ static const u8 *GetInteractedWaterScript(struct MapPosition *unused1, u8 metati
 
 static bool32 TrySetupDiveDownScript(void)
 {
-    if (FlagGet(FLAG_BADGE07_GET) && TrySetDiveWarp() == 2)
+    if ((FlagGet(FLAG_BADGE07_GET) || CheckSpeedchoiceOption(PLOTLESS, PLOT_KEEP) == FALSE) && TrySetDiveWarp() == 2)
     {
         ScriptContext1_SetupScript(EventScript_UseDive);
         return TRUE;
@@ -473,7 +503,7 @@ static bool32 TrySetupDiveDownScript(void)
 
 static bool32 TrySetupDiveEmergeScript(void)
 {
-    if (FlagGet(FLAG_BADGE07_GET) && gMapHeader.mapType == MAP_TYPE_UNDERWATER && TrySetDiveWarp() == 1)
+    if ((FlagGet(FLAG_BADGE07_GET) || CheckSpeedchoiceOption(PLOTLESS, PLOT_KEEP) == FALSE) && gMapHeader.mapType == MAP_TYPE_UNDERWATER && TrySetDiveWarp() == 1)
     {
         ScriptContext1_SetupScript(EventScript_UseDiveUnderwater);
         return TRUE;
diff --git a/src/field_player_avatar.c b/src/field_player_avatar.c
index cc4c03c9d..4f92b15e6 100644
--- a/src/field_player_avatar.c
+++ b/src/field_player_avatar.c
@@ -30,6 +30,7 @@
 #include "constants/moves.h"
 #include "constants/songs.h"
 #include "constants/trainer_types.h"
+#include "done_button.h"
 
 static EWRAM_DATA u8 sSpinStartFacingDir = 0;
 EWRAM_DATA struct ObjectEvent gObjectEvents[OBJECT_EVENTS_COUNT] = {};
@@ -1077,6 +1078,7 @@ void PlayerAcroTurnJump(u8 direction)
 
 void PlayerWheelieInPlace(u8 direction)
 {
+    TryIncrementButtonStat(DB_BONKS);
     PlaySE(SE_WALL_HIT);
     PlayerSetAnimId(GetAcroWheelieInPlaceDirectionMovementAction(direction), 2);
 }
@@ -1110,6 +1112,7 @@ static void PlayCollisionSoundIfNotFacingWarp(u8 a)
             if (MetatileBehavior_IsWarpDoor(MapGridGetMetatileBehaviorAt(x, y)))
                 return;
         }
+        TryIncrementButtonStat(DB_BONKS);
         PlaySE(SE_WALL_HIT);
     }
 }
@@ -1832,16 +1835,16 @@ static bool8 Fishing_CheckForBite(struct Task *task)
             u8 ability = GetMonAbility(&gPlayerParty[0]);
             if (ability == ABILITY_SUCTION_CUPS || ability  == ABILITY_STICKY_HOLD)
             {
-                if (Random() % 100 > 14)
+                //if (Random() % 100 > 14)
                     bite = TRUE;
             }
         }
 
         if (!bite)
         {
-            if (Random() & 1)
-                task->tStep = FISHING_NO_BITE;
-            else
+            //if (Random() & 1)
+            //    task->tStep = FISHING_NO_BITE;
+            //else
                 bite = TRUE;
         }
 
diff --git a/src/fldeff_sweetscent.c b/src/fldeff_sweetscent.c
index a9d81501f..3ddb5ca16 100644
--- a/src/fldeff_sweetscent.c
+++ b/src/fldeff_sweetscent.c
@@ -66,7 +66,7 @@ static void TrySweetScentEncounter(u8 taskId)
     {
         ClearMirageTowerPulseBlendEffect();
         BlendPalettes(0x00000040, 8, RGB_RED);
-        if (gTasks[taskId].data[0] == 64)
+        if (gTasks[taskId].data[0] == 1) // SPEEDCHOICE (fast sweet scent)
         {
             gTasks[taskId].data[0] = 0;
             if (SweetScentWildEncounter() == TRUE)
diff --git a/src/intro.c b/src/intro.c
index 7dab2ad46..fafc5761a 100644
--- a/src/intro.c
+++ b/src/intro.c
@@ -25,6 +25,7 @@
 #include "title_screen.h"
 #include "constants/rgb.h"
 #include "constants/battle_anim.h"
+#include "done_button.h"
 
 /*
  * Intro animation sequence state machine
@@ -968,8 +969,10 @@ static void MainCB2_Intro(void)
 
 static void MainCB2_EndIntro(void)
 {
-    if (!UpdatePaletteFade())
+    if (!UpdatePaletteFade()) {
+        sInIntro = FALSE;
         SetMainCallback2(CB2_InitTitleScreen);
+    }
 }
 
 static void LoadCopyrightGraphics(u16 tilesetAddress, u16 tilemapAddress, u16 paletteAddress)
@@ -1037,6 +1040,7 @@ static u8 SetUpCopyrightScreen(void)
             break;
         CreateTask(Task_IntroLoadPart1Graphics, 0);
         SetMainCallback2(MainCB2_Intro);
+        sInIntro = TRUE;
         if (gMultibootProgramStruct.gcmb_field_2 != 0)
         {
             if (gMultibootProgramStruct.gcmb_field_2 == 2)
diff --git a/src/item_menu.c b/src/item_menu.c
index 931cba2bf..ef7131220 100755
--- a/src/item_menu.c
+++ b/src/item_menu.c
@@ -50,6 +50,8 @@
 #include "apprentice.h"
 #include "battle_pike.h"
 #include "constants/rgb.h"
+#include "speedchoice.h"
+#include "done_button.h"
 
 enum
 {
@@ -256,6 +258,13 @@ static const u8 sContextMenuItems_BerriesPocket[] = {
     ITEMMENUACTION_TOSS,        ITEMMENUACTION_CANCEL
 };
 
+// SPEEDCHOICE Nice Menu berry menu order, swaps CHECK TAG and USE
+static const u8 sSpeedchoiceBerryMenu[] = {
+    ITEMMENUACTION_USE, ITEMMENUACTION_DUMMY, 
+    ITEMMENUACTION_CHECK_TAG, ITEMMENUACTION_GIVE, 
+    ITEMMENUACTION_TOSS, ITEMMENUACTION_CANCEL
+};
+
 static const u8 sContextMenuItems_BattleUse[] = {
     ITEMMENUACTION_BATTLE_USE,  ITEMMENUACTION_CANCEL
 };
@@ -1566,7 +1575,9 @@ void OpenContextMenu(u8 unused)
                         gBagMenu->contextMenuNumItems = ARRAY_COUNT(sContextMenuItems_TmHmPocket);
                         break;
                     case BERRIES_POCKET:
-                        gBagMenu->contextMenuItemsPtr = sContextMenuItems_BerriesPocket;
+                        gBagMenu->contextMenuItemsPtr = CheckSpeedchoiceOption(NICE_MENU_ORDER, NICE_MENU_ORDER_ON) == TRUE 
+                                           ? sSpeedchoiceBerryMenu
+                                           : sContextMenuItems_BerriesPocket;
                         gBagMenu->contextMenuNumItems = ARRAY_COUNT(sContextMenuItems_BerriesPocket);
                         break;
                 }
@@ -2094,8 +2105,10 @@ static void BagMenu_Sell_UpdateItemListAndMoney(u8 taskId)
 
     PlaySE(SE_SHOP);
     RemoveBagItem(gSpecialVar_ItemId, tItemCount);
+    TryAddButtonStatBy(DB_ITEMS_SOLD, tItemCount);
     AddMoney(&gSaveBlock1Ptr->money, (ItemId_GetPrice(gSpecialVar_ItemId) / 2) * tItemCount);
     DestroyListMenuTask(data[0], scrollPos, cursorPos);
+    TryAddButtonStatBy(DB_MONEY_MADE, (ItemId_GetPrice(gSpecialVar_ItemId) / 2) * tItemCount);
     UpdatePocketItemList(gBagPositionStruct.pocket);
     SetInitialScrollAndCursorPositions(gBagPositionStruct.pocket);
     LoadBagItemListBuffers(gBagPositionStruct.pocket);
diff --git a/src/item_use.c b/src/item_use.c
index df6a35bc9..f54c4587c 100755
--- a/src/item_use.c
+++ b/src/item_use.c
@@ -41,6 +41,7 @@
 #include "constants/item_effects.h"
 #include "constants/items.h"
 #include "constants/songs.h"
+#include "done_button.h"
 
 static void SetUpItemUseCallback(u8 taskId);
 static void FieldCB_UseItemOnField(void);
@@ -72,7 +73,7 @@ static void SetDistanceOfClosestHiddenItem(u8 taskId, s16 x, s16 y);
 static void CB2_OpenPokeblockFromBag(void);
 
 // EWRAM variables
-EWRAM_DATA static void(*sItemUseOnFieldCB)(u8 taskId) = NULL;
+EWRAM_DATA void(*sItemUseOnFieldCB)(u8 taskId) = NULL;
 
 // Below is set TRUE by UseRegisteredKeyItemOnField
 #define tUsingRegisteredKeyItem  data[3]
@@ -115,7 +116,7 @@ static void SetUpItemUseCallback(u8 taskId)
     }
 }
 
-static void SetUpItemUseOnFieldCallback(u8 taskId)
+void SetUpItemUseOnFieldCallback(u8 taskId)
 {
     if (gTasks[taskId].tUsingRegisteredKeyItem != TRUE)
     {
@@ -784,6 +785,24 @@ void ItemUseOutOfBattle_TMHM(u8 taskId)
         DisplayItemMessage(taskId, 1, gText_BootedUpTM, BootUpSoundTMHM); // TM
 }
 
+static const struct YesNoFuncTable gDoneButtonYesNo =
+{
+    .yesFunc = Task_InitDoneButtonMenu,
+    .noFunc = BagMenu_InitListsMenu,
+};
+
+const u8 gAreYouDoneWithRace[] = _("Are you done with the race?");
+
+void DoDoneButtonYesNo(u8 taskId)
+{
+    BagMenu_YesNo(taskId, 1, &gDoneButtonYesNo);
+}
+
+void ItemUseOutOfBattle_DoneButton(u8 taskId)
+{
+    DisplayItemMessage(taskId, 1, gAreYouDoneWithRace, DoDoneButtonYesNo);
+}
+
 static void BootUpSoundTMHM(u8 taskId)
 {
     PlaySE(SE_PC_LOGIN);
@@ -811,11 +830,22 @@ static void UseTMHM(u8 taskId)
     SetUpItemUseCallback(taskId);
 }
 
+extern bool32 sUsedEscapeOption;
+
 static void RemoveUsedItem(void)
 {
-    RemoveBagItem(gSpecialVar_ItemId, 1);
-    CopyItemName(gSpecialVar_ItemId, gStringVar2);
-    StringExpandPlaceholders(gStringVar4, gText_PlayerUsedVar2);
+    if(sUsedEscapeOption == TRUE)
+    {
+        CopyItemName(ITEM_ESCAPE_ROPE, gStringVar2);
+        StringExpandPlaceholders(gStringVar4, gText_PlayerUsedVar2);
+    }
+    else
+    {
+        RemoveBagItem(gSpecialVar_ItemId, 1);
+        CopyItemName(gSpecialVar_ItemId, gStringVar2);
+        StringExpandPlaceholders(gStringVar4, gText_PlayerUsedVar2);
+    }
+    sUsedEscapeOption = FALSE;
     if (!InBattlePyramid())
     {
         UpdatePocketItemList(ItemId_GetPocket(gSpecialVar_ItemId));
@@ -896,12 +926,13 @@ void ItemUseOutOfBattle_BlackWhiteFlute(u8 taskId)
 
 void Task_UseDigEscapeRopeOnField(u8 taskId)
 {
+    sInSubMenu = FALSE;
     ResetInitialPlayerAvatarState();
     StartEscapeRopeFieldEffect();
     DestroyTask(taskId);
 }
 
-static void ItemUseOnFieldCB_EscapeRope(u8 taskId)
+void ItemUseOnFieldCB_EscapeRope(u8 taskId)
 {
     Overworld_ResetStateAfterDigEscRope();
     RemoveUsedItem();
diff --git a/src/lilycove_lady.c b/src/lilycove_lady.c
index 011d9fdfd..dd53c3417 100644
--- a/src/lilycove_lady.c
+++ b/src/lilycove_lady.c
@@ -60,21 +60,21 @@ void SetLilycoveLadyGfx(void)
 
 void InitLilycoveLady(void)
 {
-    u16 id = ((gSaveBlock2Ptr->playerTrainerId[1] << 8) | gSaveBlock2Ptr->playerTrainerId[0]);
-    id %= 6;
-    id >>= 1;
-    switch (id)
-    {
-        case LILYCOVE_LADY_QUIZ:
+    //u16 id = ((gSaveBlock2Ptr->playerTrainerId[1] << 8) | gSaveBlock2Ptr->playerTrainerId[0]);
+    //id %= 6;
+    //id >>= 1;
+    //switch (id)
+    //{
+    //    case LILYCOVE_LADY_QUIZ:
             InitLilycoveQuizLady();
-            break;
-        case LILYCOVE_LADY_FAVOR:
-            InitLilycoveFavorLady();
-            break;
-        case LILYCOVE_LADY_CONTEST:
-            InitLilycoveContestLady();
-            break;
-    }
+    //        break;
+    //    case LILYCOVE_LADY_FAVOR:
+    //        InitLilycoveFavorLady();
+    //        break;
+    //    case LILYCOVE_LADY_CONTEST:
+    //        InitLilycoveContestLady();
+    //        break;
+    //}
 }
 
 void ResetLilycoveLadyForRecordMix(void)
diff --git a/src/load_save.c b/src/load_save.c
index 8459cd96b..e29078b90 100644
--- a/src/load_save.c
+++ b/src/load_save.c
@@ -13,6 +13,7 @@
 #include "gba/flash_internal.h"
 #include "decoration_inventory.h"
 #include "agb_flash.h"
+#include "done_button.h"
 
 static void ApplyNewEncryptionKeyToAllEncryptedData(u32 encryptionKey);
 
@@ -201,12 +202,33 @@ void SaveSerializedGame(void)
 {
     SavePlayerParty();
     SaveObjectEvents();
+    
+    // ---------------------
+    // SPEEDCHOICE CHANGE
+    // ---------------------
+    // Save the timers here.
+    gSaveBlock1Ptr->doneButtonStats.frameCount = gFrameTimers.frameCount;
+    gSaveBlock1Ptr->doneButtonStats.owFrameCount = gFrameTimers.owFrameCount;
+    gSaveBlock1Ptr->doneButtonStats.battleFrameCount = gFrameTimers.battleFrameCount;
+    gSaveBlock1Ptr->doneButtonStats.menuFrameCount = gFrameTimers.menuFrameCount;
+    gSaveBlock1Ptr->doneButtonStats.introsFrameCount = gFrameTimers.introsFrameCount;
 }
 
 void LoadSerializedGame(void)
 {
     LoadPlayerParty();
     LoadObjectEvents();
+
+    // ---------------------
+    // SPEEDCHOICE CHANGE
+    // ---------------------
+    // Load the timers here. Note we don't overwrite them: we add the counts to the total
+    // timers since we want to include the intro counts it took to reach the load.
+    gFrameTimers.frameCount += gSaveBlock1Ptr->doneButtonStats.frameCount;
+    gFrameTimers.owFrameCount += gSaveBlock1Ptr->doneButtonStats.owFrameCount;
+    gFrameTimers.battleFrameCount += gSaveBlock1Ptr->doneButtonStats.battleFrameCount;
+    gFrameTimers.menuFrameCount += gSaveBlock1Ptr->doneButtonStats.menuFrameCount;
+    gFrameTimers.introsFrameCount += gSaveBlock1Ptr->doneButtonStats.introsFrameCount;
 }
 
 void LoadPlayerBag(void)
diff --git a/src/main.c b/src/main.c
index f0ad4ce94..dac870331 100644
--- a/src/main.c
+++ b/src/main.c
@@ -23,6 +23,7 @@
 #include "intro.h"
 #include "main.h"
 #include "trainer_hill.h"
+#include "done_button.h"
 
 static void VBlankIntr(void);
 static void HBlankIntr(void);
@@ -80,6 +81,7 @@ static void ReadKeys(void);
 void InitIntrHandlers(void);
 static void WaitForVBlank(void);
 void EnableVCountIntrAtLine150(void);
+void DoFrameTimers(void);
 
 #define B_START_SELECT (B_BUTTON | START_BUTTON | SELECT_BUTTON)
 
@@ -153,11 +155,31 @@ void AgbMain()
         }
 
         PlayTimeCounter_Update();
+        DoFrameTimers();
         MapMusicMain();
         WaitForVBlank();
     }
 }
 
+void DoFrameTimers(void)
+{
+    if(gFrameTimers.frameCount != 0xFFFFFFFF)
+        gFrameTimers.frameCount++;
+    if(sInField && gFrameTimers.owFrameCount != 0xFFFFFFFF)
+        gFrameTimers.owFrameCount++;
+    else if(sInBattle && gFrameTimers.battleFrameCount != 0xFFFFFFFF)
+        gFrameTimers.battleFrameCount++;
+    else if(sInIntro && gFrameTimers.introsFrameCount != 0xFFFFFFFF)
+        gFrameTimers.introsFrameCount++;
+    else if(sInSubMenu && gFrameTimers.menuFrameCount != 0xFFFFFFFF)
+        gFrameTimers.menuFrameCount++;
+    else if(!sInField && !sInBattle && !sInIntro && !sInSubMenu) // no category detected, we consider this a menu frame. (between menu transitions?)
+    {
+        if (gFrameTimers.menuFrameCount != 0xFFFFFFFF)
+            gFrameTimers.menuFrameCount++;
+    }
+}
+
 static void UpdateLinkAndCallCallbacks(void)
 {
     if (!HandleLinkConnection())
diff --git a/src/main_menu.c b/src/main_menu.c
index 2c27b673a..0e195fe63 100644
--- a/src/main_menu.c
+++ b/src/main_menu.c
@@ -36,6 +36,7 @@
 #include "title_screen.h"
 #include "window.h"
 #include "mystery_gift.h"
+#include "done_button.h"
 
 /*
  * Main menu state machine
@@ -182,7 +183,7 @@ static void Task_MainMenuCheckSaveFile(u8);
 static void Task_MainMenuCheckBattery(u8);
 static void Task_WaitForSaveFileErrorWindow(u8);
 static void CreateMainMenuErrorWindow(const u8*);
-static void ClearMainMenuWindowTilemap(const struct WindowTemplate*);
+void ClearMainMenuWindowTilemap(const struct WindowTemplate*);
 static void Task_DisplayMainMenu(u8);
 static void Task_WaitForBatteryDryErrorWindow(u8);
 static void MainMenu_FormatSavegameText(void);
@@ -190,7 +191,7 @@ static void HighlightSelectedMainMenuItem(u8, u8, s16);
 static void Task_HandleMainMenuInput(u8);
 static void Task_HandleMainMenuAPressed(u8);
 static void Task_HandleMainMenuBPressed(u8);
-static void Task_NewGameBirchSpeech_Init(u8);
+void Task_NewGameBirchSpeech_Init(u8);
 static void Task_DisplayMainMenuInvalidActionError(u8);
 static void AddBirchSpeechObjects(u8);
 static void Task_NewGameBirchSpeech_WaitToShowBirch(u8);
@@ -212,7 +213,7 @@ static void Task_NewGameBirchSpeech_StartPlayerFadeIn(u8);
 static void Task_NewGameBirchSpeech_WaitForPlayerFadeIn(u8);
 static void Task_NewGameBirchSpeech_BoyOrGirl(u8);
 static void LoadMainMenuWindowFrameTiles(u8, u16);
-static void DrawMainMenuWindowBorder(const struct WindowTemplate*, u16);
+void DrawMainMenuWindowBorder(const struct WindowTemplate*, u16);
 static void Task_HighlightSelectedMainMenuItem(u8);
 static void Task_NewGameBirchSpeech_WaitToShowGenderMenu(u8);
 static void Task_NewGameBirchSpeech_ChooseGender(u8);
@@ -407,12 +408,12 @@ static const struct WindowTemplate gNewGameBirchSpeechTextWindows[] =
 };
 
 static const u16 sMainMenuBgPal[] = INCBIN_U16("graphics/misc/main_menu_bg.gbapal");
-static const u16 sMainMenuTextPal[] = INCBIN_U16("graphics/misc/main_menu_text.gbapal");
+const u16 sMainMenuTextPal[] = INCBIN_U16("graphics/misc/main_menu_text.gbapal");
 
 static const u8 sTextColor_Headers[] = {TEXT_DYNAMIC_COLOR_1, TEXT_DYNAMIC_COLOR_2, TEXT_DYNAMIC_COLOR_3};
 static const u8 sTextColor_MenuInfo[] = {TEXT_DYNAMIC_COLOR_1, TEXT_COLOR_WHITE, TEXT_DYNAMIC_COLOR_3};
 
-static const struct BgTemplate sMainMenuBgTemplates[] = {
+const struct BgTemplate sMainMenuBgTemplates[] = {
     {
         .bg = 0,
         .charBaseIndex = 2,
@@ -456,8 +457,8 @@ static const union AffineAnimCmd *const sSpriteAffineAnimTable_PlayerShrink[] =
 };
 
 static const struct MenuAction sMenuActions_Gender[] = {
-    {gText_BirchBoy, NULL},
-    {gText_BirchGirl, NULL}
+    {gText_BirchGirl, NULL},
+    {gText_BirchBoy, NULL}
 };
 
 static const u8 *const gMalePresetNames[] = {
@@ -483,7 +484,7 @@ static const u8 *const gMalePresetNames[] = {
     gText_DefaultNameQuincy
 };
 
-static const u8 *const gFemalePresetNames[] = {
+const u8 *const gFemalePresetNames[] = {
     gText_DefaultNameKimmy,
     gText_DefaultNameTiara,
     gText_DefaultNameBella,
@@ -933,6 +934,8 @@ static void Task_HandleMainMenuInput(u8 taskId)
         gTasks[taskId].func = Task_HighlightSelectedMainMenuItem;
 }
 
+extern void Task_InitSpeedchoiceMenu(u8);
+
 static void Task_HandleMainMenuAPressed(u8 taskId)
 {
     bool8 wirelessAdapterConnected;
@@ -1059,12 +1062,13 @@ static void Task_HandleMainMenuAPressed(u8 taskId)
             default:
                 gPlttBufferUnfaded[0] = RGB_BLACK;
                 gPlttBufferFaded[0] = RGB_BLACK;
-                gTasks[taskId].func = Task_NewGameBirchSpeech_Init;
+                gTasks[taskId].func = Task_InitSpeedchoiceMenu;
                 break;
             case ACTION_CONTINUE:
                 gPlttBufferUnfaded[0] = RGB_BLACK;
                 gPlttBufferFaded[0] = RGB_BLACK;
                 SetMainCallback2(CB2_ContinueSavedGame);
+                TryIncrementButtonStat(DB_RELOAD_COUNT);
                 DestroyTask(taskId);
                 break;
             case ACTION_OPTION:
@@ -1262,7 +1266,7 @@ static void HighlightSelectedMainMenuItem(u8 menuType, u8 selectedMenuItem, s16
 #define tBrendanSpriteId data[10]
 #define tMaySpriteId data[11]
 
-static void Task_NewGameBirchSpeech_Init(u8 taskId)
+void Task_NewGameBirchSpeech_Init(u8 taskId)
 {
     SetGpuReg(REG_OFFSET_DISPCNT, 0);
     SetGpuReg(REG_OFFSET_DISPCNT, DISPCNT_OBJ_ON | DISPCNT_OBJ_1D_MAP);
@@ -1462,7 +1466,7 @@ static void Task_NewGameBirchSpeech_StartPlayerFadeIn(u8 taskId)
         }
         else
         {
-            u8 spriteId = gTasks[taskId].tBrendanSpriteId;
+            u8 spriteId = gTasks[taskId].tMaySpriteId;
 
             gSprites[spriteId].pos1.x = 180;
             gSprites[spriteId].pos1.y = 60;
@@ -1510,17 +1514,21 @@ static void Task_NewGameBirchSpeech_ChooseGender(u8 taskId)
 
     switch (gender)
     {
-        case MALE:
+        case 0: // FEMALE
             PlaySE(SE_SELECT);
-            gSaveBlock2Ptr->playerGender = gender;
+            gSaveBlock2Ptr->playerGender = FEMALE;
             NewGameBirchSpeech_ClearGenderWindow(1, 1);
-            gTasks[taskId].func = Task_NewGameBirchSpeech_WhatsYourName;
+            // SPEEDCHOICE: Skip name
+            gTasks[taskId].func = Task_NewGameBirchSpeech_ReturnFromNamingScreenShowTextbox;
+            //gTasks[taskId].func = Task_NewGameBirchSpeech_WhatsYourName;
             break;
-        case FEMALE:
+        case 1: // MALE
             PlaySE(SE_SELECT);
-            gSaveBlock2Ptr->playerGender = gender;
+            gSaveBlock2Ptr->playerGender = MALE;
             NewGameBirchSpeech_ClearGenderWindow(1, 1);
-            gTasks[taskId].func = Task_NewGameBirchSpeech_WhatsYourName;
+            // SPEEDCHOICE: Skip name
+            gTasks[taskId].func = Task_NewGameBirchSpeech_ReturnFromNamingScreenShowTextbox;
+            //gTasks[taskId].func = Task_NewGameBirchSpeech_WhatsYourName;
             break;
     }
     gender2 = Menu_GetCursorPos();
@@ -1543,10 +1551,10 @@ static void Task_NewGameBirchSpeech_SlideOutOldGenderSprite(u8 taskId)
     else
     {
         gSprites[spriteId].invisible = TRUE;
-        if (gTasks[taskId].tPlayerGender != MALE)
-            spriteId = gTasks[taskId].tMaySpriteId;
-        else
+        if (gTasks[taskId].tPlayerGender != 0)
             spriteId = gTasks[taskId].tBrendanSpriteId;
+        else
+            spriteId = gTasks[taskId].tMaySpriteId;
         gSprites[spriteId].pos1.x = 240;
         gSprites[spriteId].pos1.y = 60;
         gSprites[spriteId].invisible = FALSE;
@@ -2202,7 +2210,7 @@ static void LoadMainMenuWindowFrameTiles(u8 bgId, u16 tileOffset)
     LoadPalette(GetWindowFrameTilesPal(gSaveBlock2Ptr->optionsWindowFrameType)->pal, 32, 32);
 }
 
-static void DrawMainMenuWindowBorder(const struct WindowTemplate *template, u16 baseTileNum)
+void DrawMainMenuWindowBorder(const struct WindowTemplate *template, u16 baseTileNum)
 {
     u16 r9 = 1 + baseTileNum;
     u16 r10 = 2 + baseTileNum;
@@ -2223,7 +2231,7 @@ static void DrawMainMenuWindowBorder(const struct WindowTemplate *template, u16
     CopyBgTilemapBufferToVram(template->bg);
 }
 
-static void ClearMainMenuWindowTilemap(const struct WindowTemplate *template)
+void ClearMainMenuWindowTilemap(const struct WindowTemplate *template)
 {
     FillBgTilemapBufferRect(template->bg, 0, template->tilemapLeft - 1, template->tilemapTop - 1, template->tilemapLeft + template->width + 1, template->tilemapTop + template->height + 1, 2);
     CopyBgTilemapBufferToVram(template->bg);
diff --git a/src/map_name_popup.c b/src/map_name_popup.c
index 8939edd90..64635d180 100644
--- a/src/map_name_popup.c
+++ b/src/map_name_popup.c
@@ -173,7 +173,8 @@ static const u8 gRegionMapSectionId_To_PopUpThemeIdMapping[] =
     [MAPSEC_DESERT_UNDERPASS - KANTO_MAPSEC_COUNT] = MAPPOPUP_THEME_STONE,
     [MAPSEC_ALTERING_CAVE - KANTO_MAPSEC_COUNT] = MAPPOPUP_THEME_STONE,
     [MAPSEC_NAVEL_ROCK - KANTO_MAPSEC_COUNT] = MAPPOPUP_THEME_STONE,
-    [MAPSEC_TRAINER_HILL - KANTO_MAPSEC_COUNT] = MAPPOPUP_THEME_MARBLE
+    [MAPSEC_TRAINER_HILL - KANTO_MAPSEC_COUNT] = MAPPOPUP_THEME_MARBLE,
+    [MAPSEC_ANCIENT_CAVE] = MAPPOPUP_THEME_STONE
 };
 
 static const u8 gText_PyramidFloor1[] = _("PYRAMID FLOOR 1");
diff --git a/src/match_call.c b/src/match_call.c
index 723562ade..48f818f18 100644
--- a/src/match_call.c
+++ b/src/match_call.c
@@ -1000,9 +1000,9 @@ static bool32 CheckMatchCallChance(void)
     if (!GetMonData(&gPlayerParty[0], MON_DATA_SANITY_IS_EGG) && GetMonAbility(&gPlayerParty[0]) == ABILITY_LIGHTNING_ROD)
         callChance = 2;
     
-    if (Random() % 10 < callChance * 3) 
-        return TRUE;
-    else
+    //if (Random() % 10 < callChance * 3) 
+    //    return TRUE;
+    //else
         return FALSE;
 }
 
diff --git a/src/menu.c b/src/menu.c
index 4813f7b02..7fd560962 100644
--- a/src/menu.c
+++ b/src/menu.c
@@ -19,6 +19,7 @@
 #include "text_window.h"
 #include "window.h"
 #include "constants/songs.h"
+#include "done_button.h"
 
 #define DLG_WINDOW_PALETTE_NUM 15
 #define DLG_WINDOW_BASE_TILE_NUM 0x200
@@ -66,7 +67,8 @@ static const u8 sTextSpeedFrameDelays[] =
 { 
     [OPTIONS_TEXT_SPEED_SLOW] = 8, 
     [OPTIONS_TEXT_SPEED_MID]  = 4, 
-    [OPTIONS_TEXT_SPEED_FAST] = 1 
+    [OPTIONS_TEXT_SPEED_FAST] = 1,
+    [OPTIONS_TEXT_SPEED_INST] = 1
 };
 
 static const struct WindowTemplate sStandardTextBox_WindowTemplates[] =
@@ -482,8 +484,8 @@ u32 GetPlayerTextSpeed(void)
 u8 GetPlayerTextSpeedDelay(void)
 {
     u32 speed;
-    if (gSaveBlock2Ptr->optionsTextSpeed > OPTIONS_TEXT_SPEED_FAST)
-        gSaveBlock2Ptr->optionsTextSpeed = OPTIONS_TEXT_SPEED_MID;
+    if (gSaveBlock2Ptr->optionsTextSpeed > OPTIONS_TEXT_SPEED_INST)
+        gSaveBlock2Ptr->optionsTextSpeed = OPTIONS_TEXT_SPEED_FAST;
     speed = GetPlayerTextSpeed();
     return sTextSpeedFrameDelays[speed];
 }
diff --git a/src/metatile_behavior.c b/src/metatile_behavior.c
index 2a9304a4d..fd4b75ced 100644
--- a/src/metatile_behavior.c
+++ b/src/metatile_behavior.c
@@ -1,6 +1,7 @@
 #include "global.h"
 #include "metatile_behavior.h"
 #include "constants/metatile_behaviors.h"
+#include "speedchoice.h"
 
 #define TILE_FLAG_ENCOUNTER_TILE 1
 #define TILE_FLAG_SURFABLE 2
@@ -1352,6 +1353,9 @@ bool8 MetatileBehavior_IsSeaweed(u8 metatileBehavior)
 
 bool8 MetatileBehavior_IsRunningDisallowed(u8 metatileBehavior)
 {
+    //if(CheckSpeedchoiceOption(RUN_EVERYWHERE, RUN_ON) == TRUE)
+        return FALSE;
+    /*
     if (metatileBehavior == MB_NO_RUNNING
      || metatileBehavior == MB_LONG_GRASS
      || metatileBehavior == MB_HOT_SPRINGS
@@ -1359,6 +1363,7 @@ bool8 MetatileBehavior_IsRunningDisallowed(u8 metatileBehavior)
         return TRUE;
     else
         return FALSE;
+    */
 }
 
 bool8 MetatileBehavior_IsCuttableGrass(u8 metatileBehavior)
diff --git a/src/money.c b/src/money.c
index 6213f2dd0..f1df5f84d 100644
--- a/src/money.c
+++ b/src/money.c
@@ -9,6 +9,7 @@
 #include "sprite.h"
 #include "strings.h"
 #include "decompress.h"
+#include "done_button.h"
 
 #define MAX_MONEY 999999
 
@@ -127,6 +128,7 @@ bool8 IsEnoughForCostInVar0x8005(void)
 
 void SubtractMoneyFromVar0x8005(void)
 {
+    TryAddButtonStatBy(DB_MONEY_SPENT, gSpecialVar_0x8005);
     RemoveMoney(&gSaveBlock1Ptr->money, gSpecialVar_0x8005);
 }
 
diff --git a/src/move_relearner.c b/src/move_relearner.c
index cd4da5835..10fe2b310 100644
--- a/src/move_relearner.c
+++ b/src/move_relearner.c
@@ -24,6 +24,7 @@
 #include "task.h"
 #include "constants/rgb.h"
 #include "constants/songs.h"
+#include "done_button.h"
 
 /*
  * Move relearner state machine
@@ -713,6 +714,7 @@ static void DoMoveRelearnerMain(void)
     case MENU_STATE_DOUBLE_FANFARE_FORGOT_MOVE:
         if (!MoveRelearnerRunTextPrinters())
         {
+            TryIncrementButtonStat(DB_MOVES_LEARNT);
             FormatAndPrintText(gText_MoveRelearnerPkmnForgotMoveAndLearnedNew);
             sMoveRelearnerStruct->state = MENU_STATE_PRINT_TEXT_THEN_FANFARE;
             PlayFanfare(MUS_LEVEL_UP);
diff --git a/src/new_game.c b/src/new_game.c
index 55a568132..dc1a4cc25 100644
--- a/src/new_game.c
+++ b/src/new_game.c
@@ -45,6 +45,9 @@
 #include "berry_powder.h"
 #include "mevent.h"
 #include "union_room_chat.h"
+#include "speedchoice.h"
+#include "constants/items.h"
+#include "done_button.h"
 
 extern const u8 EventScript_ResetAllMapFlags[];
 
@@ -92,13 +95,25 @@ static void InitPlayerTrainerId(void)
 }
 
 // L=A isnt set here for some reason.
+
+/*
+OPTIONs should be
+- Text Speed INST
+- Battle Scene OFF
+- Battle Style OFF
+- Sound MONO
+- Button Mode L=A
+- Frame TYPE1
+by default
+*/
 static void SetDefaultOptions(void)
 {
-    gSaveBlock2Ptr->optionsTextSpeed = OPTIONS_TEXT_SPEED_MID;
+    gSaveBlock2Ptr->optionsTextSpeed = OPTIONS_TEXT_SPEED_INST; // INSTANT TEXT
     gSaveBlock2Ptr->optionsWindowFrameType = 0;
     gSaveBlock2Ptr->optionsSound = OPTIONS_SOUND_MONO;
-    gSaveBlock2Ptr->optionsBattleStyle = OPTIONS_BATTLE_STYLE_SHIFT;
-    gSaveBlock2Ptr->optionsBattleSceneOff = FALSE;
+    gSaveBlock2Ptr->optionsBattleStyle = OPTIONS_BATTLE_STYLE_SET;
+    gSaveBlock2Ptr->optionsBattleSceneOff = TRUE;
+    gSaveBlock2Ptr->optionsButtonMode = OPTIONS_BUTTON_MODE_L_EQUALS_A;
     gSaveBlock2Ptr->regionMapZoom = FALSE;
 }
 
@@ -130,6 +145,10 @@ static void WarpToTruck(void)
 {
     SetWarpDestination(MAP_GROUP(INSIDE_OF_TRUCK), MAP_NUM(INSIDE_OF_TRUCK), -1, -1, -1);
     WarpIntoMap();
+    sInIntro = FALSE;
+    sInSubMenu = FALSE;
+    sInBattle = FALSE;
+    sInField = TRUE;
 }
 
 void Sav2_ClearSetDefault(void)
@@ -206,6 +225,13 @@ void NewGameInitData(void)
     WipeTrainerNameRecords();
     ResetTrainerHillResults();
     ResetContestLinkResults();
+
+    // ADD DONE BUTTON
+    AddBagItem(ITEM_DONE_BUTTON, 1);
+    //if(CheckSpeedchoiceOption(EARLY_BIKE, EARLY_BIKE_YES) == TRUE) {
+        AddBagItem(ITEM_MACH_BIKE, 1);
+        FlagSet(FLAG_RECEIVED_BIKE); // put the flag here for making sure you got the bicycle
+    //}
 }
 
 static void ResetMiniGamesResults(void)
diff --git a/src/option_menu.c b/src/option_menu.c
index b6440a89c..4a33615d8 100644
--- a/src/option_menu.c
+++ b/src/option_menu.c
@@ -79,7 +79,7 @@ static void sub_80BB154(void);
 
 EWRAM_DATA static bool8 sArrowPressed = FALSE;
 
-static const u16 sOptionMenuText_Pal[] = INCBIN_U16("graphics/misc/option_menu_text.gbapal");
+const u16 sOptionMenuText_Pal[] = INCBIN_U16("graphics/misc/option_menu_text.gbapal");
 // note: this is only used in the Japanese release
 static const u8 sEqualSignGfx[] = INCBIN_U8("graphics/misc/option_menu_equals_sign.4bpp");
 
@@ -139,7 +139,7 @@ static const struct BgTemplate sOptionMenuBgTemplates[] =
    }
 };
 
-static const u16 sOptionMenuBg_Pal[] = {RGB(17, 18, 31)};
+const u16 sOptionMenuBg_Pal[] = {RGB(17, 18, 31)};
 
 // code
 static void MainCB2(void)
@@ -407,7 +407,7 @@ static u8 TextSpeed_ProcessInput(u8 selection)
 {
     if (JOY_NEW(DPAD_RIGHT))
     {
-        if (selection <= 1)
+        if (selection <= 2)
             selection++;
         else
             selection = 0;
@@ -419,34 +419,41 @@ static u8 TextSpeed_ProcessInput(u8 selection)
         if (selection != 0)
             selection--;
         else
-            selection = 2;
+            selection = 3;
 
         sArrowPressed = TRUE;
     }
     return selection;
 }
 
+extern u8 gText_TextSpeedInst[];
+
+// -------------------------------
+// SPEEDCHOICE CHANGE
+// -------------------------------
+// Change: Instant Text is handled in options menu instead.
 static void TextSpeed_DrawChoices(u8 selection)
 {
-    u8 styles[3];
-    s32 widthSlow, widthMid, widthFast, xMid;
+    u8 styles[4];
+    s32 widthSlow, widthMid, widthFast, widthInst, xMid;
 
     styles[0] = 0;
     styles[1] = 0;
     styles[2] = 0;
+    styles[3] = 0;
     styles[selection] = 1;
 
-    DrawOptionMenuChoice(gText_TextSpeedSlow, 104, YPOS_TEXTSPEED, styles[0]);
+    DrawOptionMenuChoice(gText_TextSpeedSlow, 92, YPOS_TEXTSPEED, styles[0]);
 
     widthSlow = GetStringWidth(1, gText_TextSpeedSlow, 0);
     widthMid = GetStringWidth(1, gText_TextSpeedMid, 0);
     widthFast = GetStringWidth(1, gText_TextSpeedFast, 0);
+    widthInst = GetStringWidth(1, gText_TextSpeedInst, 0);
 
-    widthMid -= 94;
-    xMid = (widthSlow - widthMid - widthFast) / 2 + 104;
-    DrawOptionMenuChoice(gText_TextSpeedMid, xMid, YPOS_TEXTSPEED, styles[1]);
+    DrawOptionMenuChoice(gText_TextSpeedMid, 123, YPOS_TEXTSPEED, styles[1]);
+    DrawOptionMenuChoice(gText_TextSpeedFast, 147, YPOS_TEXTSPEED, styles[2]);
 
-    DrawOptionMenuChoice(gText_TextSpeedFast, GetStringRightAlignXOffset(1, gText_TextSpeedFast, 198), YPOS_TEXTSPEED, styles[2]);
+    DrawOptionMenuChoice(gText_TextSpeedInst, GetStringRightAlignXOffset(1, gText_TextSpeedFast, 200), YPOS_TEXTSPEED, styles[3]);
 }
 
 static u8 BattleScene_ProcessInput(u8 selection)
diff --git a/src/overworld.c b/src/overworld.c
index 72aa17929..d9fcecf34 100644
--- a/src/overworld.c
+++ b/src/overworld.c
@@ -67,6 +67,8 @@
 #include "constants/songs.h"
 #include "constants/trainer_hill.h"
 #include "constants/weather.h"
+#include "done_button.h"
+#include "speedchoice.h"
 
 #define PLAYER_TRADING_STATE_IDLE 0x80
 #define PLAYER_TRADING_STATE_BUSY 0x81
@@ -356,7 +358,11 @@ static void (*const gMovementStatusHandler[])(struct LinkPlayerObjectEvent *, st
 // code
 void DoWhiteOut(void)
 {
+    u32 moneyToKeep, moneyLost;
     ScriptContext2_RunNewScript(EventScript_WhiteOut);
+    moneyToKeep = GetMoney(&gSaveBlock1Ptr->money) / 2;
+    moneyLost = GetMoney(&gSaveBlock1Ptr->money) - moneyToKeep;
+    TryAddButtonStatBy(DB_MONEY_LOST, moneyLost);
     SetMoney(&gSaveBlock1Ptr->money, GetMoney(&gSaveBlock1Ptr->money) / 2);
     HealPlayerParty();
     Overworld_ResetStateAfterWhiteOut();
@@ -953,10 +959,14 @@ static u16 GetCenterScreenMetatileBehavior(void)
 
 bool32 Overworld_IsBikingAllowed(void)
 {
+    //if(CheckSpeedchoiceOption(RUN_EVERYWHERE, RUN_ON) == TRUE)
+        return TRUE;
+    /*
     if (!(gMapHeader.flags & MAP_ALLOW_CYCLING))
         return FALSE;
     else
         return TRUE;
+    */
 }
 
 void SetDefaultFlashLevel(void)
@@ -1605,6 +1615,9 @@ static void CB2_LoadMapOnReturnToFieldCableClub(void)
 
 void CB2_ReturnToField(void)
 {
+    sInSubMenu = FALSE;
+    sInField = TRUE;
+    sInBattle = FALSE;
     if (IsUpdateLinkStateCBActive() == TRUE)
     {
         SetMainCallback2(CB2_ReturnToFieldLink);
diff --git a/src/party_menu.c b/src/party_menu.c
index 74a23cc93..36422583c 100755
--- a/src/party_menu.c
+++ b/src/party_menu.c
@@ -74,6 +74,8 @@
 #include "constants/party_menu.h"
 #include "constants/rgb.h"
 #include "constants/songs.h"
+#include "speedchoice.h"
+#include "done_button.h"
 
 #define PARTY_PAL_SELECTED     (1 << 0)
 #define PARTY_PAL_FAINTED      (1 << 1)
@@ -1989,6 +1991,8 @@ static u16 GetTutorMove(u8 tutor)
 
 static bool8 CanLearnTutorMove(u16 species, u8 tutor)
 {
+    if(tutor == 69) // SPEEDCHOICE easy false swipe
+        return TRUE;
     if (sTutorLearnsets[species] & (1 << tutor))
         return TRUE;
     else
@@ -2531,10 +2535,14 @@ static void SetPartyMonSelectionActions(struct Pokemon *mons, u8 slotId, u8 acti
 static void SetPartyMonFieldSelectionActions(struct Pokemon *mons, u8 slotId)
 {
     u8 i, j;
+    bool8 summaryFirst = CheckSpeedchoiceOption(NICE_MENU_ORDER, NICE_MENU_ORDER_OFF);
 
     sPartyMenuInternal->numActions = 0;
-    AppendToList(sPartyMenuInternal->actions, &sPartyMenuInternal->numActions, MENU_SUMMARY);
-
+    
+    if(summaryFirst == TRUE)
+    {
+        AppendToList(sPartyMenuInternal->actions, &sPartyMenuInternal->numActions, MENU_SUMMARY);
+    }
     // Add field moves to action list
     for (i = 0; i < MAX_MON_MOVES; i++)
     {
@@ -2547,6 +2555,10 @@ static void SetPartyMonFieldSelectionActions(struct Pokemon *mons, u8 slotId)
             }
         }
     }
+    if(summaryFirst == FALSE)
+    {
+        AppendToList(sPartyMenuInternal->actions, &sPartyMenuInternal->numActions, MENU_SUMMARY);
+    }
 
     if (!InBattlePike())
     {
@@ -3647,7 +3659,11 @@ static void CursorCb_FieldMove(u8 taskId)
     else
     {
         // All field moves before WATERFALL are HMs.
-        if (fieldMove <= FIELD_MOVE_WATERFALL && FlagGet(FLAG_BADGE01_GET + fieldMove) != TRUE)
+        if (fieldMove <= FIELD_MOVE_WATERFALL && FlagGet(FLAG_BADGE01_GET + fieldMove) != TRUE
+         && !(fieldMove == FIELD_MOVE_SURF && CheckSpeedchoiceOption(EARLYSURF, SURF_ON) == TRUE && FlagGet(FLAG_BADGE03_GET))
+         && !(fieldMove == FIELD_MOVE_FLY && CheckSpeedchoiceOption(EARLYFLY, FLY_YES) == TRUE)
+         && !(fieldMove == FIELD_MOVE_DIVE && CheckSpeedchoiceOption(PLOTLESS, PLOT_KEEP) == FALSE)
+           )
         {
             DisplayPartyMenuMessage(gText_CantUseUntilNewBadge, TRUE);
             gTasks[taskId].func = Task_ReturnToChooseMonAfterText;
@@ -3747,6 +3763,7 @@ bool8 FieldCallback_PrepareFadeInFromMenu(void)
 
 static void Task_FieldMoveWaitForFade(u8 taskId)
 {
+    sInSubMenu = FALSE;
     if (IsWeatherNotFadingIn() == TRUE)
     {
         gFieldEffectArguments[0] = GetFieldMoveMonSpecies();
@@ -4613,6 +4630,9 @@ void ItemUseCB_PPUp(u8 taskId, TaskFunc task)
 u16 ItemIdToBattleMoveId(u16 item)
 {
     u16 tmNumber = item - ITEM_TM01_FOCUS_PUNCH;
+    if(item == ITEM_HM05_FLASH && CheckSpeedchoiceOption(EASY_FALSE_SWIPE, EASY_FALSE_SWIPE_HM05) == TRUE)
+      return MOVE_FALSE_SWIPE; // SPEEDCHOICE
+
     return sTMHMMoves[tmNumber];
 }
 
@@ -4705,6 +4725,7 @@ static void Task_LearnedMove(u8 taskId)
     }
     GetMonNickname(mon, gStringVar1);
     StringCopy(gStringVar2, gMoveNames[move[0]]);
+    TryIncrementButtonStat(DB_MOVES_LEARNT);
     StringExpandPlaceholders(gStringVar4, gText_PkmnLearnedMove3);
     DisplayPartyMenuMessage(gStringVar4, TRUE);
     ScheduleBgCopyTilemapToVram(2);
@@ -4799,6 +4820,7 @@ static void DisplayPartyMenuForgotMoveMessage(u8 taskId)
     GetMonNickname(mon, gStringVar1);
     StringCopy(gStringVar2, gMoveNames[move]);
     DisplayLearnMoveMessage(gText_12PoofForgotMove);
+    TryIncrementButtonStat(DB_MOVES_LEARNT);
     gTasks[taskId].func = Task_PartyMenuReplaceMove;
 }
 
@@ -5048,6 +5070,7 @@ static void DisplayMonLearnedMove(u8 taskId, u16 move)
 {
     GetMonNickname(&gPlayerParty[gPartyMenu.slotId], gStringVar1);
     StringCopy(gStringVar2, gMoveNames[move]);
+    TryIncrementButtonStat(DB_MOVES_LEARNT);
     StringExpandPlaceholders(gStringVar4, gText_PkmnLearnedMove3);
     DisplayPartyMenuMessage(gStringVar4, TRUE);
     ScheduleBgCopyTilemapToVram(2);
diff --git a/src/pokedex.c b/src/pokedex.c
index 6aa347994..4da700a9d 100644
--- a/src/pokedex.c
+++ b/src/pokedex.c
@@ -3467,36 +3467,43 @@ static void Task_ExitInfoScreen(u8 taskId)
     }
 }
 
+extern bool32 IsWildMonInCurrentMap(u16 species);
+
 static void Task_LoadAreaScreen(u8 taskId)
 {
     switch (gMain.state)
     {
-    case 0:
-    default:
-        if (!gPaletteFade.active)
+        case 0:
+        default:
+            if (!gPaletteFade.active)
+            {
+                sPokedexView->currentPage = PAGE_AREA;
+                gPokedexVBlankCB = gMain.vblankCallback;
+                SetVBlankCallback(NULL);
+                ResetOtherVideoRegisters(DISPCNT_BG1_ON);
+                sPokedexView->selectedScreen = AREA_SCREEN;
+                gMain.state = 1;
+            }
+            break;
+        case 1:
+            LoadScreenSelectBarSubmenu(0xD);
+            HighlightSubmenuScreenSelectBarItem(0, 0xD);
+            LoadPokedexBgPalette(sPokedexView->isSearchResults);
+            SetGpuReg(REG_OFFSET_BG1CNT, BGCNT_PRIORITY(0) | BGCNT_CHARBASE(0) | BGCNT_SCREENBASE(13) | BGCNT_16COLOR | BGCNT_TXT256x256);
+            gMain.state++;
+            break;
+        case 2:
         {
-            sPokedexView->currentPage = PAGE_AREA;
-            gPokedexVBlankCB = gMain.vblankCallback;
-            SetVBlankCallback(NULL);
-            ResetOtherVideoRegisters(DISPCNT_BG1_ON);
-            sPokedexView->selectedScreen = AREA_SCREEN;
-            gMain.state = 1;
+            u16 species = NationalPokedexNumToSpecies(sPokedexListItem->dexNum);
+            if(IsWildMonInCurrentMap(species))
+                PlaySE(SE_CONTEST_MONS_TURN);
+            ShowPokedexAreaScreen(NationalPokedexNumToSpecies(sPokedexListItem->dexNum), &sPokedexView->screenSwitchState);
+            SetVBlankCallback(gPokedexVBlankCB);
+            sPokedexView->screenSwitchState = 0;
+            gMain.state = 0;
+            gTasks[taskId].func = Task_WaitForAreaScreenInput;
+            break;
         }
-        break;
-    case 1:
-        LoadScreenSelectBarSubmenu(0xD);
-        HighlightSubmenuScreenSelectBarItem(0, 0xD);
-        LoadPokedexBgPalette(sPokedexView->isSearchResults);
-        SetGpuReg(REG_OFFSET_BG1CNT, BGCNT_PRIORITY(0) | BGCNT_CHARBASE(0) | BGCNT_SCREENBASE(13) | BGCNT_16COLOR | BGCNT_TXT256x256);
-        gMain.state++;
-        break;
-    case 2:
-        ShowPokedexAreaScreen(NationalPokedexNumToSpecies(sPokedexListItem->dexNum), &sPokedexView->screenSwitchState);
-        SetVBlankCallback(gPokedexVBlankCB);
-        sPokedexView->screenSwitchState = 0;
-        gMain.state = 0;
-        gTasks[taskId].func = Task_WaitForAreaScreenInput;
-        break;
     }
 }
 
diff --git a/src/pokemon.c b/src/pokemon.c
index b9264c4c2..95fbce39a 100644
--- a/src/pokemon.c
+++ b/src/pokemon.c
@@ -45,6 +45,7 @@
 #include "constants/moves.h"
 #include "constants/songs.h"
 #include "constants/trainers.h"
+#include "speedchoice.h"
 
 struct SpeciesItem
 {
@@ -2862,10 +2863,10 @@ void CalculateMonStats(struct Pokemon *mon)
         else if (currentHP != 0) {
             // BUG: currentHP is unintentionally able to become <= 0 after the instruction below. This causes the pomeg berry glitch.
             currentHP += newMaxHP - oldMaxHP;
-            #ifdef BUGFIX
-            if (currentHP <= 0)
+            // If we have Evolve Every Level on, we need to ensure base HP dropping does
+            // NOT trigger the Pomeg glitch, or bad things will happen.
+            if (CheckSpeedchoiceOption(EVO_EVERY_LEVEL, EVO_EV_OFF) == FALSE && currentHP <= 0)
                 currentHP = 1;
-            #endif
         }
         else
             return;
@@ -4735,7 +4736,8 @@ bool8 PokemonUseItemEffects(struct Pokemon *mon, u16 item, u8 partyIndex, u8 mov
             if ((itemEffect[cmdIndex] & ITEM0_X_ATTACK)
              && gBattleMons[gActiveBattler].statStages[STAT_ATK] < MAX_STAT_STAGE)
             {
-                gBattleMons[gActiveBattler].statStages[STAT_ATK] += itemEffect[cmdIndex] & ITEM0_X_ATTACK;
+                int toAdd = (CheckSpeedchoiceOption(GEN_7_X_ITEMS, GEN_7_X_ITEMS_ON) == TRUE) ? 2 : itemEffect[cmdIndex] & ITEM0_X_ATTACK;
+                gBattleMons[gActiveBattler].statStages[STAT_ATK] += toAdd;
                 if (gBattleMons[gActiveBattler].statStages[STAT_ATK] > MAX_STAT_STAGE)
                     gBattleMons[gActiveBattler].statStages[STAT_ATK] = MAX_STAT_STAGE;
                 retVal = FALSE;
@@ -4746,7 +4748,8 @@ bool8 PokemonUseItemEffects(struct Pokemon *mon, u16 item, u8 partyIndex, u8 mov
             if ((itemEffect[cmdIndex] & ITEM1_X_DEFEND)
              && gBattleMons[gActiveBattler].statStages[STAT_DEF] < MAX_STAT_STAGE)
             {
-                gBattleMons[gActiveBattler].statStages[STAT_DEF] += (itemEffect[cmdIndex] & ITEM1_X_DEFEND) >> 4;
+                int toAdd = (CheckSpeedchoiceOption(GEN_7_X_ITEMS, GEN_7_X_ITEMS_ON) == TRUE) ? 2 : (itemEffect[cmdIndex] & ITEM1_X_DEFEND) >> 4;
+                gBattleMons[gActiveBattler].statStages[STAT_DEF] += toAdd;
                 if (gBattleMons[gActiveBattler].statStages[STAT_DEF] > MAX_STAT_STAGE)
                     gBattleMons[gActiveBattler].statStages[STAT_DEF] = MAX_STAT_STAGE;
                 retVal = FALSE;
@@ -5399,6 +5402,15 @@ u16 GetEvolutionTargetSpecies(struct Pokemon *mon, u8 type, u16 evolutionItem)
     u8 beauty = GetMonData(mon, MON_DATA_BEAUTY, 0);
     u16 upperPersonality = personality >> 16;
     u8 holdEffect;
+    
+    if(CheckSpeedchoiceOption(EVO_EVERY_LEVEL, EVO_EV_OFF) == FALSE)
+    {
+        // use the new level as the seed, not the current one.
+        u32 lv = GetMonData(&gPlayerParty[i], MON_DATA_LEVEL, 0) + 1;
+
+        SeedRng((u32)((personality * species) + (lv * species))); // seed with the pokemon's PID with species and LV.
+        return NationalPokedexNumToSpecies((Random() % NATIONAL_DEX_COUNT) + 1);
+    }
 
     if (heldItem == ITEM_ENIGMA_BERRY)
         holdEffect = gSaveBlock1Ptr->enigmaBerry.holdEffect;
diff --git a/src/reset_rtc_screen.c b/src/reset_rtc_screen.c
index d0e815816..3f6557487 100644
--- a/src/reset_rtc_screen.c
+++ b/src/reset_rtc_screen.c
@@ -18,6 +18,7 @@
 #include "window.h"
 #include "gpu_regs.h"
 #include "constants/rgb.h"
+#include "done_button.h"
 
 struct ResetRtcStruct
 {
@@ -421,6 +422,7 @@ static void Task_ResetRtc_1(u8 taskId)
             gTasks[taskId].func = Task_ResetRtc_2;
             data[1] = 1;
             data[2] = 6;
+            TryIncrementButtonStat(DB_CLOCK_RESET_COUNT);
         }
     }
     else if (MoveTimeUpDown(&data[selectionInfo->dataIndex], selectionInfo->minVal, selectionInfo->maxVal, JOY_REPEAT(DPAD_UP | DPAD_DOWN)))
diff --git a/src/scrcmd.c b/src/scrcmd.c
index f36a44187..e47c4915d 100644
--- a/src/scrcmd.c
+++ b/src/scrcmd.c
@@ -49,6 +49,8 @@
 #include "tv.h"
 #include "window.h"
 #include "constants/event_objects.h"
+#include "speedchoice.h"
+#include "done_button.h"
 
 typedef u16 (*SpecialFunc)(void);
 typedef void (*NativeFunc)(void);
@@ -491,6 +493,7 @@ bool8 ScrCmd_additem(struct ScriptContext *ctx)
     u16 itemId = VarGet(ScriptReadHalfword(ctx));
     u32 quantity = VarGet(ScriptReadHalfword(ctx));
 
+    TryAddButtonStatBy(DB_ITEMS_PICKED_UP, quantity);
     gSpecialVar_Result = AddBagItem(itemId, (u8)quantity);
     return FALSE;
 }
@@ -1325,11 +1328,7 @@ bool8 ScrCmd_closemessage(struct ScriptContext *ctx)
 
 static bool8 WaitForAorBPress(void)
 {
-    if (JOY_NEW(A_BUTTON))
-        return TRUE;
-    if (JOY_NEW(B_BUTTON))
-        return TRUE;
-    return FALSE;
+    return ((gMain.heldKeys) & (A_BUTTON | B_BUTTON)) ? TRUE : FALSE;
 }
 
 bool8 ScrCmd_waitbuttonpress(struct ScriptContext *ctx)
@@ -1744,8 +1743,10 @@ bool8 ScrCmd_removemoney(struct ScriptContext *ctx)
     u32 amount = ScriptReadWord(ctx);
     u8 ignore = ScriptReadByte(ctx);
 
-    if (!ignore)
+    if (!ignore) {
+        TryAddButtonStatBy(DB_MONEY_SPENT, amount);
         RemoveMoney(&gSaveBlock1Ptr->money, amount);
+    }
     return FALSE;
 }
 
@@ -2304,3 +2305,12 @@ bool8 ScrCmd_warpsootopolislegend(struct ScriptContext *ctx)
     ResetInitialPlayerAvatarState();
     return TRUE;
 }
+
+bool8 ScrCmd_checkspeedchoice(struct ScriptContext *ctx)
+{
+    u8 option = ScriptReadByte(ctx);
+    u8 setting = ScriptReadByte(ctx);
+
+    ctx->comparisonResult = CheckSpeedchoiceOption(option, setting);
+    return TRUE;
+}
diff --git a/src/shop.c b/src/shop.c
index 44ab0885c..e49a15a34 100755
--- a/src/shop.c
+++ b/src/shop.c
@@ -39,6 +39,7 @@
 #include "constants/rgb.h"
 #include "constants/songs.h"
 #include "constants/tv.h"
+#include "done_button.h"
 
 EWRAM_DATA struct MartInfo gMartInfo = {0};
 EWRAM_DATA struct ShopData *gShopDataPtr = NULL;
@@ -1089,6 +1090,7 @@ static void BuyMenuSubtractMoney(u8 taskId)
 {
     IncrementGameStat(GAME_STAT_SHOPPED);
     RemoveMoney(&gSaveBlock1Ptr->money, gShopDataPtr->totalCost);
+    TryAddButtonStatBy(DB_MONEY_SPENT, gShopDataPtr->totalCost);
     PlaySE(SE_SHOP);
     PrintMoneyAmountInMoneyBox(0, GetMoney(&gSaveBlock1Ptr->money), 0);
 
@@ -1205,6 +1207,7 @@ static void RecordItemPurchase(u8 taskId)
         gMartPurchaseHistory[gMartPurchaseHistoryId].quantity = tItemCount;
         gMartPurchaseHistoryId++;
     }
+    TryAddButtonStatBy(DB_ITEMS_BOUGHT, tItemCount);
 }
 
 #undef tItemCount
diff --git a/src/speedchoice.c b/src/speedchoice.c
new file mode 100644
index 000000000..ea24457c0
--- /dev/null
+++ b/src/speedchoice.c
@@ -0,0 +1,1583 @@
+#include "global.h"
+#include "main.h"
+#include "menu.h"
+#include "palette.h"
+#include "sprite.h"
+#include "task.h"
+#include "sound.h"
+#include "constants/songs.h"
+#include "string_util.h"
+#include "text.h"
+#include "speedchoice.h"
+#include "gpu_regs.h"
+#include "bg.h"
+#include "scanline_effect.h"
+#include "text_window.h"
+#include "field_message_box.h"
+#include "text_window.h"
+#include "done_button.h"
+#include "naming_screen.h"
+#include "random.h"
+#include "constants/rgb.h"
+
+// A macro was defined here to simplify the row used in Palette calls, but I haven't
+// used this yet.
+#define PLTTROW(row) ((row) * (0x20))
+
+// We reuse the option menu and main menu palette data to simplfy things.
+extern u16 sOptionMenuText_Pal[16];
+extern u16 sOptionMenuBg_Pal[1];
+extern u16 sMainMenuTextPal[16];
+
+// ----------------------------------------------
+// Window IDs enumeration for the defined
+// Speedchoice menu templates.
+// ----------------------------------------------
+enum
+{
+    SPD_WIN_TEXT_OPTION,
+    SPD_WIN_OPTIONS,
+    SPD_WIN_TOOLTIP,
+    SPD_WIN_YESNO,
+};
+
+// ----------------------------------------------
+// BG TEMPLATES
+// ----------------------------------------------
+const struct BgTemplate sSpeedchoiceMenuBgTemplates[] =
+{
+   {
+       .bg = 1,
+       .charBaseIndex = 1,
+       .mapBaseIndex = 30,
+       .screenSize = 0,
+       .paletteMode = 0,
+       .priority = 1,
+       .baseTile = 0
+   },
+   {
+       .bg = 0,
+       .charBaseIndex = 1,
+       .mapBaseIndex = 31,
+       .screenSize = 0,
+       .paletteMode = 0,
+       .priority = 2,
+       .baseTile = 0
+   },
+   // 0x000001ec (I forget why this was put here)
+   {
+       .bg = 2,
+       .charBaseIndex = 1,
+       .mapBaseIndex = 29,
+       .screenSize = 0,
+       .paletteMode = 0,
+       .priority = 0,
+       .baseTile = 0
+   }
+};
+
+const struct WindowTemplate sSpeedchoiceMenuWinTemplates[] =
+{
+    {1, 2, 1, 0x1A, 2, 1, 2},
+    {0, 2, 5, 0x1A, 14, 1, 0x36},
+    {2, 2, 15, 0x1A, 4, 15, 427},
+    {2, 23, 9, 4, 4, 15, 531}, // YES/NO
+    DUMMY_WIN_TEMPLATE
+};
+
+// Deprecated ID. This may have been a leftover copy paste from the option menu.
+enum
+{
+    // DEPRECATED
+    WIN_TEXT_OPTION,
+    WIN_OPTIONS
+};
+
+
+/* ----------------------------------------------- */
+/* SPEEDCHOICE MENU TEXT (System Text)             */
+/* ----------------------------------------------- */
+const u8 gSystemText_TerminatorS[] = _("{COLOR RED}$");
+
+/* ----------------------------------------------- */
+/* SPEEDCHOICE MENU TEXT (Header Text)             */
+/* ----------------------------------------------- */
+const u8 gSpeedchoiceTextHeader[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}SPEEDCHOICE MENU");
+const u8 gSpeedchoiceCurrentVersion[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}v1.2.0");
+
+/* ----------------------------------------------- */
+/* SPEEDCHOICE MENU TEXT (Option Choices)          */
+/* ----------------------------------------------- */
+const u8 gSpeedchoiceTextYes[]    = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}YES");
+const u8 gSpeedchoiceTextNo[]     = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}NO");
+
+const u8 gSpeedchoiceTextOn[]     = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}ON");
+const u8 gSpeedchoiceTextOff[]    = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}OFF");
+
+const u8 gSpeedchoiceTextNerf[]   = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}PURGE");
+const u8 gSpeedchoiceTextKeep[]   = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}KEEP");
+const u8 gSpeedchoiceTextHell[]   = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}HELL");
+const u8 gSpeedchoiceTextWhy[]   = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}WHY");
+
+const u8 gSpeedchoiceTextSemi[]   = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}SEMI");
+const u8 gSpeedchoiceTextFull[]   = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}FULL");
+
+const u8 gSpeedchoiceTextStatic[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}SAME");
+const u8 gSpeedchoiceTextRand[]   = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}RAND");
+const u8 gSpeedchoiceTextSane[]   = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}SANE");
+
+const u8 gSpeedchoiceTextBW[]     = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}BW");
+const u8 gSpeedchoiceTextNone[]   = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}NONE");
+
+const u8 gSpeedchoiceTextTutor[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}TUTOR");
+const u8 gSpeedchoiceTextHM05[]   = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}HM05");
+
+/* ----------------------------------------------- */
+/* SPEEDCHOICE MENU TEXT (Option Names)            */
+/* ----------------------------------------------- */
+
+// PAGE 1
+const u8 gSpeedchoiceOptionPreset[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}PRESET");
+const u8 gSpeedchoiceOptionName[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}NAME");
+const u8 gSpeedchoiceOptionEXP[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}EXP");
+const u8 gSpeedchoiceOptionPlotless[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}PLOTLESS");
+const u8 gSpeedchoiceOptionInstantText[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}INSTANT TEXT");
+const u8 gSpeedchoiceOptionSpinners[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}SPINNERS");
+
+// PAGE 2
+const u8 gSpeedchoiceOptionMaxVision[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}MAX VISION");
+const u8 gSpeedchoiceOptionNerfRoxanne[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}NERF ROXANNE");
+const u8 gSpeedchoiceOptionSuperBike[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}SUPER BIKE");
+const u8 gSpeedchoiceOptionNewWildEnc[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}NEW WILD ENC.");
+const u8 gSpeedchoiceOptionEarlyFly[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}EARLY FLY");
+
+// PAGE 3
+const u8 gSpeedchoiceOptionRunEverywhere[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}RUN EVERYWHERE");
+const u8 gSpeedchoiceOptionMemeIsland[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}MEME ISLAND");
+const u8 gSpeedchoiceOptionBetterMarts[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}BETTER MARTS");
+const u8 gSpeedchoiceOptionGoodEarlyWilds[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}GOOD EARLY WILDS");
+const u8 gSpeedchoiceOptionEarlySurf[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}EARLY SURF");
+
+// PAGE 4
+const u8 gSpeedchoiceOptionNiceMenuOrder[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}NICE MENU ORDER");
+const u8 gSpeedchoiceOptionEasyFalseSwipe[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}EASY FALSE SWIPE");
+const u8 gSpeedchoiceOptionFastCatch[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}FAST CATCH");
+const u8 gSpeedchoiceOptionEarlyBike[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}EARLY BIKE");
+const u8 gSpeedchoiceOptionFastEggHatch[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}FAST EGG HATCH");
+
+// PAGE 5
+const u8 gSpeedchoiceOptionGen7XItems[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}GEN 7 X ITEMS");
+const u8 gSpeedchoiceOptionEvoEveryLv[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}EVO EVERY LV");
+
+// CONSTANT OPTIONS
+const u8 gSpeedchoiceOptionPage[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}PAGE");
+const u8 gSpeedchoiceOptionStartGame[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}START GAME");
+
+// ARROWS
+const u8 gSpeedchoiceOptionLeftArrow[] = _("{COLOR RED}{SHADOW LIGHT_RED}{LEFT_ARROW}");
+const u8 gSpeedchoiceOptionRightArrow[] = _("{COLOR RED}{SHADOW LIGHT_RED}{RIGHT_ARROW}");
+
+/* ----------------------------------------------- */
+/* SPEEDCHOICE MENU TEXT (Tooltip Text)            */
+/* ----------------------------------------------- */
+
+// INTRODUCTION
+const u8 gSpeedchoiceTooltipExplanation[] = _("This is the Speedchoice menu where\nvarious options can be selected.\pTo get an explanation of each option,\npress SELECT when over the option.");
+
+// TOOLTIPS
+const u8 gSpeedchoiceTooltipPreset[] = _("Sets of predetermined options\nthat help speedrunners quickly select\pa set of options for a type of\nspeedrunning category.");
+const u8 gSpeedchoiceTooltipName[] = _("Set your trainer name here.");
+const u8 gSpeedchoiceTooltipEXP[] = _("Modifies the experience system\nto the desired input.\pCan be Gen 5, or\nno exp at all.");
+const u8 gSpeedchoiceTooltipPlotless[] = _("SEMI: Stops villain team events\nafter Mt. Chimney.\pFULL: Skips all the villain team\nevents. Also allows Dive to be used\pwithout Gym 7's badge.");
+const u8 gSpeedchoiceTooltipInstantText[] = _("Self-explanatory.\nHold A or B to mash.");
+const u8 gSpeedchoiceTooltipSpinners[] = _("PURGE: Makes spinners on a static\nspinning pattern at a fixed rate.\pHELL: Rapidly spins\nevery spinner every frame.\pWHY: Same as HELL but 4 frames\ninstead of 16.\pHELL and WHY also fix bag\nmanip.");
+const u8 gSpeedchoiceTooltipMaxVision[] = _("SANE: Will extend trainer vision\nto 8, but prevent trainers from\pwalking through walls or solid\nobjects.\pHELL: No collision or\nelevation detection.");
+const u8 gSpeedchoiceTooltipNerfRoxanne[] = _("Nerfs Gym Leader Roxanne.\nRemoves both of her Potions.");
+const u8 gSpeedchoiceTooltipSuperBike[] = _("While riding the bicycle, you\ncan switch between bikes with\pthe R button while you are\nstanding still.");
+const u8 gSpeedchoiceTooltipNewWildEnc[] = _("Intended to be used with\nthe randomizer.\pTreats grass and fishing slots\nas 6 and 2 slots respectively.");
+const u8 gSpeedchoiceTooltipEarlyFly[] = _("Recieve HM02 instead of\nItemfinder at Rival 2.\pAllows use of Fly without use of\nGym 6's badge.");
+const u8 gSpeedchoiceTooltipRunEverywhere[] = _("Allows the Running Shoes to\nbe used anywhere, including\pinside of houses.\pAlso allows bike in most places.");
+const u8 gSpeedchoiceTooltipMemeIsland[] = _("Mirage Island always appears.");
+const u8 gSpeedchoiceTooltipBetterMarts[] = _("Improves the item selections\nof many {PKMN} marts.\pAdds repels to Oldale Mart.\pAdds repels and super repels to\nMauville Mart.\pAdds X Specials to Rustboro\nMart.");
+const u8 gSpeedchoiceTooltipGoodEarlyWilds[] = _("SAME: Depending on the\nrandomizer check value, wild\pencounters in the grass for\n{PKMN} below lv 10 will have\ptheir final evolution.\pRAND: If they have a branching\nevolution, it will be randomly\pgenerated instead of being static.");
+const u8 gSpeedchoiceTooltipEarlySurf[] = _("Switches the locations of\nHM04 and HM03.\pUse of Surf requirement only needs\nWattson's Gym Badge.\pIn addition, Steven post-Fortree\nwill not spawn until after GYM 5.");
+const u8 gSpeedchoiceTooltipNiceMenuOrder[] = _("Swaps the location of SUMMARY and\nfield moves in party menu.\palso swaps CHECK TAG and USE\nin the berry bag.\pON: Fields moves and berry USE are first.\nOFF: SUMMARY and CHECK TAG are first.");
+const u8 gSpeedchoiceTooltipEasyFalseSwipe[] = _("Makes FALSE SWIPE guaranteed\nOFF: Vanilla game behavior\pTUTOR: The tutor in Slateport teaches\nFALSE SWIPE.\pHM05: Replaces HM05 FLASH with\nHM05 FALSE SWIPE.");
+const u8 gSpeedchoiceTooltipFastCatch[] = _("All Pokeballs are guaranteed to catch.");
+const u8 gSpeedchoiceTooltipEarlyBike[] = _("Start game with Bicycle.");
+const u8 gSpeedchoiceTooltipFastEggHatch[] = _("Makes eggs hatch quickly.");
+const u8 gSpeedchoiceTooltipGen7XItems[] = _("Stat boost +2 instead of +1.");
+const u8 gSpeedchoiceTooltipEvoEveryLv[] = _("STATIC: {PKMN} evolve into a random\nbut set species every lv.\pRAND: Same thing as STATIC but\nrandom non-static every lv.");
+
+// START GAME
+const u8 gSpeedchoiceStartGameText[] = _("CV: {STR_VAR_1}\nStart the game?");
+
+// MISC STRINGS
+const u8 gSpeedchoiceEscapeText[] = _("ESCAPE");
+
+/* ----------------- */
+/* ---- PRESETS ---- */
+/* ----------------- */
+const u8 gPresetNames[][20] = {
+    _("{COLOR GREEN}{SHADOW LIGHT_GREEN}VANILLA"),
+    _("{COLOR GREEN}{SHADOW LIGHT_GREEN}BINGO"),
+    _("{COLOR GREEN}{SHADOW LIGHT_GREEN}CEA"),
+    _("{COLOR GREEN}{SHADOW LIGHT_GREEN}RACE"),
+    _("{COLOR GREEN}{SHADOW LIGHT_GREEN}MEME"),
+};
+
+// use local config optionConfig[0] for preset!
+
+// -------------------------
+// Enumeration for Preset.
+// -------------------------
+enum {
+    PRESET_VANILLA,
+    PRESET_BINGO,
+    PRESET_CEA,
+    PRESET_RACE,
+    PRESET_MEME
+};
+
+// When creating the task that manages the speedchoice menu, store the task ID in RAM to
+// be used later when destroying the task.
+static EWRAM_DATA int gSpeedchoiceTaskId = 0;
+
+// ----------------------------------------------------------------
+// Preset Data for Speedchoice Menu
+// ----------------------------------------------------------------
+static const u8 gPresetVanilla[CURRENT_OPTIONS_NUM] = {
+    PRESET_VANILLA,         // PRESET
+    0xFF,                   // (Reserved for trainer name)
+    EXP_KEEP,               // EXP
+    PLOT_KEEP,              // PLOTLESS
+    SPIN_KEEP,              // SPINNERS
+    MAX_OFF,                // MAXVISION
+    FLY_NO,                 // EARLYFLY
+    GOOD_OFF,               // GOOD_EARLY_WILDS
+    SURF_OFF,               // EARLYSURF
+    NICE_MENU_ORDER_OFF,    // NICE_MENU_ORDER
+    EASY_FALSE_SWIPE_OFF,   // EASY_FALSE_SWIPE
+    FAST_CATCH_OFF,         // FAST_CATCH
+    EARLY_BIKE_NO,          // EARLY_BIKE
+    EVO_EV_OFF              // EVO_EVERY_LEVEL
+};
+
+static const u8 gPresetBingo[CURRENT_OPTIONS_NUM] = {
+    PRESET_BINGO,           // PRESET
+    0xFF,                   // (Reserved for trainer name)
+    EXP_BW,                 // EXP
+    PLOT_FULL,              // PLOTLESS
+    SPIN_KEEP,              // SPINNERS
+    MAX_OFF,                // MAXVISION
+    FLY_YES,                // EARLYFLY
+    GOOD_OFF,               // GOOD_EARLY_WILDS
+    SURF_ON,                // EARLYSURF
+    NICE_MENU_ORDER_ON,     // NICE_MENU_ORDER
+    EASY_FALSE_SWIPE_TUTOR, // EASY_FALSE_SWIPE
+    FAST_CATCH_OFF,         // FAST_CATCH
+    GEN_7_X_ITEMS_ON,       // GEN_7_X_ITEMS
+    EVO_EV_OFF              // EVO_EVERY_LEVEL
+};
+
+static const u8 gPresetCEA[CURRENT_OPTIONS_NUM] = {
+    PRESET_CEA,             // PRESET
+    0xFF,                   // (Reserved for trainer name)
+    EXP_BW,                 // EXP
+    PLOT_FULL,              // PLOTLESS
+    SPIN_NERF,              // SPINNERS
+    MAX_OFF,                // MAXVISION
+    FLY_YES,                // EARLYFLY
+    GOOD_OFF,               // GOOD_EARLY_WILDS
+    SURF_ON,                // EARLYSURF
+    NICE_MENU_ORDER_ON,     // NICE_MENU_ORDER
+    EASY_FALSE_SWIPE_TUTOR, // EASY_FALSE_SWIPE
+    FAST_CATCH_ON,          // FAST_CATCH
+    GEN_7_X_ITEMS_ON,       // GEN_7_X_ITEMS
+    EVO_EV_OFF              // EVO_EVERY_LEVEL
+};
+
+static const u8 gPresetRace[CURRENT_OPTIONS_NUM] = {
+    PRESET_RACE,            // PRESET
+    0xFF,                   // (Reserved for trainer name)
+    EXP_BW,                 // EXP
+    PLOT_FULL,              // PLOTLESS
+    SPIN_NERF,              // SPINNERS
+    MAX_OFF,                // MAXVISION
+    FLY_YES,                // EARLYFLY
+    GOOD_STATIC,            // GOOD_EARLY_WILDS
+    SURF_ON,                // EARLYSURF
+    NICE_MENU_ORDER_ON,     // NICE_MENU_ORDER
+    EASY_FALSE_SWIPE_TUTOR, // EASY_FALSE_SWIPE
+    FAST_CATCH_OFF,         // FAST_CATCH
+    GEN_7_X_ITEMS_ON,       // GEN_7_X_ITEMS
+    EVO_EV_OFF              // EVO_EVERY_LEVEL
+};
+
+static const u8 gPresetMeme[CURRENT_OPTIONS_NUM] = {
+    PRESET_RACE,            // PRESET
+    0xFF,                   // (Reserved for trainer name)
+    EXP_NONE,               // EXP
+    PLOT_FULL,              // PLOTLESS
+    SPIN_WHY,               // SPINNERS
+    MAX_HELL,               // MAXVISION
+    FLY_NO,                 // EARLYFLY
+    GOOD_RAND,              // GOOD_EARLY_WILDS
+    SURF_OFF,               // EARLYSURF
+    NICE_MENU_ORDER_OFF,    // NICE_MENU_ORDER
+    EASY_FALSE_SWIPE_OFF,   // EASY_FALSE_SWIPE
+    FAST_CATCH_OFF,         // FAST_CATCH
+    GEN_7_X_ITEMS_OFF,      // GEN_7_X_ITEMS
+    EVO_EV_ON               // EVO_EVERY_LEVEL
+};
+
+/*
+ * Fetch the Preset array from the set Preset ID.
+ */
+const u8 *GetPresetPtr(int presetID) {
+    switch(presetID) {
+        case PRESET_VANILLA:
+        default:
+            return gPresetVanilla;
+        case PRESET_BINGO:
+            return gPresetBingo;
+        case PRESET_CEA:
+            return gPresetCEA;
+        case PRESET_RACE:
+            return gPresetRace;
+        case PRESET_MEME:
+            return gPresetMeme;
+    }
+}
+
+// ---------------------------------------
+// Speedchoice menu Option Config data
+// ---------------------------------------
+const struct OptionChoiceConfig OptionChoiceConfigYesNo[MAX_CHOICES] = 
+{
+    { 120, (u8 *)&gSpeedchoiceTextYes },
+    { 150, (u8 *)&gSpeedchoiceTextNo  },
+    { -1, NULL },
+    { -1, NULL },
+    { -1, NULL },
+    { -1, NULL }
+};
+
+const struct OptionChoiceConfig OptionChoiceConfigOnOff[MAX_CHOICES] = 
+{
+    { 120, (u8 *)&gSpeedchoiceTextOn  },
+    { 150, (u8 *)&gSpeedchoiceTextOff },
+    { -1, NULL },
+    { -1, NULL },
+    { -1, NULL },
+    { -1, NULL }
+};
+
+const struct OptionChoiceConfig OptionChoiceConfigNerfKeep[MAX_CHOICES] = 
+{
+    { 85, (u8 *)&gSpeedchoiceTextNerf },
+    { 120, (u8 *)&gSpeedchoiceTextKeep },
+    { 150, (u8 *)&gSpeedchoiceTextHell },
+    { 180, (u8 *)&gSpeedchoiceTextWhy },
+    { -1, NULL },
+    { -1, NULL }
+};
+
+const struct OptionChoiceConfig OptionChoiceConfigSemiFull[MAX_CHOICES] = 
+{
+    { 120, (u8 *)&gSpeedchoiceTextSemi },
+    { 150, (u8 *)&gSpeedchoiceTextKeep },
+    { 180, (u8 *)&gSpeedchoiceTextFull },
+    { -1, NULL },
+    { -1, NULL },
+    { -1, NULL }
+};
+
+const struct OptionChoiceConfig OptionChoiceConfigOffRand[MAX_CHOICES] = 
+{
+    { 120, (u8 *)&gSpeedchoiceTextOff    },
+    { 150, (u8 *)&gSpeedchoiceTextStatic },
+    { 180, (u8 *)&gSpeedchoiceTextRand   },
+    { -1, NULL },
+    { -1, NULL },
+    { -1, NULL }
+};
+
+const struct OptionChoiceConfig OptionChoiceConfigOffTutorHM[MAX_CHOICES] = 
+{
+    { 120, (u8 *)&gSpeedchoiceTextOff   },
+    { 145, (u8 *)&gSpeedchoiceTextTutor },
+    { 180, (u8 *)&gSpeedchoiceTextHM05  },
+    { -1, NULL },
+    { -1, NULL },
+    { -1, NULL }
+};
+
+const struct OptionChoiceConfig OptionChoiceConfigSaneHell[MAX_CHOICES] = 
+{
+    { 120, (u8 *)&gSpeedchoiceTextOff  },
+    { 150, (u8 *)&gSpeedchoiceTextSane },
+    { 180, (u8 *)&gSpeedchoiceTextHell },
+    { -1, NULL },
+    { -1, NULL },
+    { -1, NULL }
+};
+
+const struct OptionChoiceConfig OptionChoiceConfigKeepNone[MAX_CHOICES] = 
+{
+    { 120, (u8 *)&gSpeedchoiceTextKeep },
+    { 150, (u8 *)&gSpeedchoiceTextBW   },
+    { 180, (u8 *)&gSpeedchoiceTextNone },
+    { -1, NULL },
+    { -1, NULL },
+    { -1, NULL }
+};
+
+/*
+ * In order to use ProcessGeneralInput, a struct is needed for page, so, I opt to have a
+ * dummy struct which only has the number of choices relevent to the calculation of the
+ * selection.
+ */
+const struct OptionChoiceConfig OptionChoiceConfigPage[MAX_CHOICES] = 
+{
+    { -1, NULL },
+    { -1, NULL },
+    { -1, NULL },
+    { -1, NULL },
+    { -1, NULL },
+    { -1, NULL }
+};
+
+// player name needs its own config. Leave NULL there.
+const struct OptionChoiceConfig OptionChoiceConfigPlayerName[MAX_CHOICES] = 
+{
+    { 120, NULL }, // we still have a coord so it's handled properly.
+    { -1, NULL },
+    { -1, NULL },
+    { -1, NULL },
+    { -1, NULL },
+    { -1, NULL }
+};
+
+// not a normal config struct, but used for the arrows for multi choice.
+const struct OptionChoiceConfig Arrows[MAX_CHOICES] = 
+{
+    { 120, (u8 *)&gSpeedchoiceOptionLeftArrow },
+    { 195, (u8 *)&gSpeedchoiceOptionRightArrow },
+    { -1, NULL },
+    { -1, NULL },
+    { -1, NULL },
+    { -1, NULL }
+};
+
+// ---------------------------------------
+// Speedchoice menu Option data
+// ---------------------------------------
+const struct SpeedchoiceOption SpeedchoiceOptions[CURRENT_OPTIONS_NUM + 1] = // plus one for page
+{
+    // ----------------------------------
+    // PRESET OPTION
+    // ----------------------------------
+    { 
+        /* Option Count   */ 5,
+        /* Option Type    */ ARROW,
+        /* Option Preset  */ gSpeedchoiceOptionPreset,
+        /* Option Text    */ Arrows,
+        /* Option Tooltip */ gSpeedchoiceTooltipPreset,
+        /* Option Usable  */ TRUE
+    },
+    // ----------------------------------
+    // PLAYER NAME
+    // ----------------------------------
+    { 
+        /* Option Count   */ 1,
+        /* Option Type    */ PLAYER_NAME,
+        /* Option Preset  */ gSpeedchoiceOptionName,
+        /* Option Text    */ OptionChoiceConfigPlayerName,
+        /* Option Tooltip */ gSpeedchoiceTooltipName,
+        /* Option Usable  */ TRUE
+    },
+    // ----------------------------------
+    // EXP OPTION
+    // ----------------------------------
+    { 
+        /* Option Count   */ 3,
+        /* Option Type    */ NORMAL,
+        /* Option Preset  */ gSpeedchoiceOptionEXP,
+        /* Option Text    */ OptionChoiceConfigKeepNone,
+        /* Option Tooltip */ gSpeedchoiceTooltipEXP,            
+        /* Option Usable  */ TRUE  
+    },
+    // ----------------------------------
+    // PLOTLESS OPTION
+    // ----------------------------------
+    { 
+        /* Option Count   */ 3,
+        /* Option Type    */ NORMAL,
+        /* Option Preset  */ gSpeedchoiceOptionPlotless,
+        /* Option Text    */ OptionChoiceConfigSemiFull,
+        /* Option Tooltip */ gSpeedchoiceTooltipPlotless,
+        /* Option Usable  */ TRUE 
+    },
+    // ----------------------------------
+    // SPINNERS OPTION
+    // ----------------------------------
+    { 
+        /* Option Count   */ 4,
+        /* Option Type    */ NORMAL,
+        /* Option Preset  */ gSpeedchoiceOptionSpinners,
+        /* Option Text    */ OptionChoiceConfigNerfKeep,
+        /* Option Tooltip */ gSpeedchoiceTooltipSpinners,
+        /* Option Usable  */ TRUE 
+    },
+    // ----------------------------------
+    // MAX VISION OPTION
+    // ----------------------------------
+    { 
+        /* Option Count   */ 3,
+        /* Option Type    */ NORMAL,
+        /* Option Preset  */ gSpeedchoiceOptionMaxVision,
+        /* Option Text    */ OptionChoiceConfigSaneHell,
+        /* Option Tooltip */ gSpeedchoiceTooltipMaxVision,
+        /* Option Usable  */ TRUE
+    },
+    // ----------------------------------
+    // EARLY FLY OPTION
+    // ----------------------------------
+    { 
+        /* Option Count   */ 2,
+        /* Option Type    */ NORMAL,
+        /* Option Preset  */ gSpeedchoiceOptionEarlyFly,
+        /* Option Text    */ OptionChoiceConfigYesNo,
+        /* Option Tooltip */ gSpeedchoiceTooltipEarlyFly,
+        /* Option Usable  */ TRUE
+    },
+    // ----------------------------------
+    // GOOD EARLY WILDS OPTION
+    // ----------------------------------
+    { 
+        /* Option Count   */ 3,
+        /* Option Type    */ NORMAL,
+        /* Option Preset  */ gSpeedchoiceOptionGoodEarlyWilds,
+        /* Option Text    */ OptionChoiceConfigOffRand,
+        /* Option Tooltip */ gSpeedchoiceTooltipGoodEarlyWilds,
+        /* Option Usable  */ TRUE
+    },
+    // ----------------------------------
+    // EARLY SURF OPTION
+    // ----------------------------------
+    { 
+        /* Option Count   */ 2,
+        /* Option Type    */ NORMAL,
+        /* Option Preset  */ gSpeedchoiceOptionEarlySurf,
+        /* Option Text    */ OptionChoiceConfigOnOff,
+        /* Option Tooltip */ gSpeedchoiceTooltipEarlySurf,
+        /* Option Usable  */ TRUE
+    },
+    // ----------------------------------
+    // PARTY MENU OPTION
+    // ----------------------------------
+    { 
+        /* Option Count   */ 2,
+        /* Option Type    */ NORMAL,
+        /* Option Preset  */ gSpeedchoiceOptionNiceMenuOrder,
+        /* Option Text    */ OptionChoiceConfigOnOff,
+        /* Option Tooltip */ gSpeedchoiceTooltipNiceMenuOrder,
+        /* Option Usable  */ TRUE
+    },
+    // ----------------------------------
+    // EASY FALSE SWIPE OPTION
+    // ----------------------------------
+    { 
+        /* Option Count   */ 3,
+        /* Option Type    */ NORMAL,
+        /* Option Preset  */ gSpeedchoiceOptionEasyFalseSwipe,
+        /* Option Text    */ OptionChoiceConfigOffTutorHM,
+        /* Option Tooltip */ gSpeedchoiceTooltipEasyFalseSwipe,
+        /* Option Usable  */ TRUE
+    },
+    // ----------------------------------
+    // FAST CATCH OPTION
+    // ----------------------------------
+    { 
+        /* Option Count   */ 2,
+        /* Option Type    */ NORMAL,
+        /* Option Preset  */ gSpeedchoiceOptionFastCatch,
+        /* Option Text    */ OptionChoiceConfigOnOff,
+        /* Option Tooltip */ gSpeedchoiceTooltipFastCatch,
+        /* Option Usable  */ TRUE
+    },
+    // ----------------------------------
+    // GEN 7 X ITEMS OPTION
+    // ----------------------------------
+    { 
+        /* Option Count   */ 2,
+        /* Option Type    */ NORMAL,
+        /* Option Preset  */ gSpeedchoiceOptionGen7XItems,
+        /* Option Text    */ OptionChoiceConfigOnOff,
+        /* Option Tooltip */ gSpeedchoiceTooltipGen7XItems,
+        /* Option Usable  */ TRUE
+    },
+    // ----------------------------------
+    // EVO EVERY LEVEL OPTION
+    // ----------------------------------
+    { 
+        /* Option Count   */ 2,
+        /* Option Type    */ NORMAL,
+        /* Option Preset  */ gSpeedchoiceOptionEvoEveryLv,
+        /* Option Text    */ OptionChoiceConfigOnOff,
+        /* Option Tooltip */ gSpeedchoiceTooltipEvoEveryLv,
+        /* Option Usable  */ TRUE
+    },
+    // ----------------------------------
+    // PAGE STATIC OPTION
+    // ----------------------------------
+    { 
+        /* Option Count   */ MAX_PAGES,
+        /* Option Type    */ NORMAL,
+        /* Option Preset  */ gSpeedchoiceOptionPage,
+        /* Option Text    */ OptionChoiceConfigPage,
+        /* Option Tooltip */ NULL,
+        /* Option Usable  */ TRUE
+    }
+};
+
+// To avoid redrawing the page info every frame, we store the active page number
+// and compare it to the task's page number. We only redraw if they are different
+// and update accordingly.
+EWRAM_DATA u8 gStoredPageNum = 0;
+
+// See SpeedchoiceConfigStruct documentation in speedchoice.h.
+EWRAM_DATA struct SpeedchoiceConfigStruct gLocalSpeedchoiceConfig = {0};
+
+// See MapObjectTimerBackup documentation in speedchoice.h.
+EWRAM_DATA struct MapObjectTimerBackup gMapObjectTimerBackup[MAX_SPRITES] = {0};
+
+// Deprecated. Was going to be used for the timer backup hack, but a better
+// implementation was found.
+EWRAM_DATA bool8 gLastMenuWasSubmenu = {0}; // DEPRECATED
+
+// Deprecated. Was going to be used for the Pokedex area screen beep change,
+// but a better implementation was found.
+EWRAM_DATA bool8 gPokedexAreaScreenFlag = {0}; // DEPRECATED
+
+// Used to signal that the page must redraw in cases where it is needed such as
+// updating the Preset.
+EWRAM_DATA bool8 gForceUpdate = FALSE;
+
+// Stores the written player name in the options menu until it is flushed to the
+// Save Block.
+EWRAM_DATA u8 gTempPlayerName[PLAYER_NAME_LENGTH + 1] = {0};
+
+// -------------------------------------
+// PROTOTYPES
+// -------------------------------------
+u8 GetPageDrawCount(u8 page);
+void SetPageIndexFromTrueIndex(u8 taskId, s16 index);
+
+/*
+ * When initializing the menu for the first time or setting a preset, this function
+ * is invoked to set the local config and save block data from the preset or default
+ * preset.
+ */
+void SetOptionChoicesAndConfigFromPreset(const u8 *preset)
+{
+    u8 i;
+
+    // set the local config for the current menu. Do NOT overwrite the preset!
+    for(i = 1; i < CURRENT_OPTIONS_NUM; i++)
+        gLocalSpeedchoiceConfig.optionConfig[i] = preset[i];
+
+    // this would be a for loop, but i want to use the fewest bits possible to
+    // avoid shifting RAM too much: hence the ugly per-option saving.
+    gSaveBlock2Ptr->speedchoiceConfig.expsystem = preset[EXPMATH];
+    gSaveBlock2Ptr->speedchoiceConfig.plotless = preset[PLOTLESS];
+    gSaveBlock2Ptr->speedchoiceConfig.spinners = preset[SPINNERS];
+    gSaveBlock2Ptr->speedchoiceConfig.maxVision = preset[MAXVISION];
+    gSaveBlock2Ptr->speedchoiceConfig.earlyfly = preset[EARLYFLY];
+    gSaveBlock2Ptr->speedchoiceConfig.goodEarlyWilds = preset[GOOD_EARLY_WILDS];
+    gSaveBlock2Ptr->speedchoiceConfig.earlysurf = preset[EARLYSURF];
+    gSaveBlock2Ptr->speedchoiceConfig.niceMenuOrder = preset[NICE_MENU_ORDER];
+    gSaveBlock2Ptr->speedchoiceConfig.easyFalseSwipe = preset[EASY_FALSE_SWIPE];
+    gSaveBlock2Ptr->speedchoiceConfig.fastCatch = preset[FAST_CATCH];
+    gSaveBlock2Ptr->speedchoiceConfig.gen7XItems = preset[GEN_7_X_ITEMS];
+    gSaveBlock2Ptr->speedchoiceConfig.evoEveryLevel = preset[EVO_EVERY_LEVEL];
+}
+
+/*
+ * This option is used to check the currently set option data and is used when doing
+ * speedchoice checks. (Is the EXP option set to BWEXP, etc)
+ *
+ * See the speedchoice.h enums for the values to pass here.
+ */
+bool8 CheckSpeedchoiceOption(u8 option, u8 selection)
+{
+    switch(option)
+    {
+        case EXPMATH:
+            return gSaveBlock2Ptr->speedchoiceConfig.expsystem == selection;
+        case PLOTLESS:
+            return gSaveBlock2Ptr->speedchoiceConfig.plotless == selection;
+        case SPINNERS:
+            return gSaveBlock2Ptr->speedchoiceConfig.spinners == selection;
+        case MAXVISION:
+            return gSaveBlock2Ptr->speedchoiceConfig.maxVision == selection;
+        case EARLYFLY:
+            return gSaveBlock2Ptr->speedchoiceConfig.earlyfly == selection;
+        case GOOD_EARLY_WILDS:
+            return gSaveBlock2Ptr->speedchoiceConfig.goodEarlyWilds == selection;
+        case EARLYSURF:
+            return gSaveBlock2Ptr->speedchoiceConfig.earlysurf == selection;
+        case NICE_MENU_ORDER:
+            return gSaveBlock2Ptr->speedchoiceConfig.niceMenuOrder == selection;
+        case EASY_FALSE_SWIPE:
+            return gSaveBlock2Ptr->speedchoiceConfig.easyFalseSwipe == selection;
+        case FAST_CATCH:
+            return gSaveBlock2Ptr->speedchoiceConfig.fastCatch == selection;
+        case GEN_7_X_ITEMS:
+            return gSaveBlock2Ptr->speedchoiceConfig.gen7XItems == selection;
+        case EVO_EVERY_LEVEL:
+            return gSaveBlock2Ptr->speedchoiceConfig.evoEveryLevel == selection;
+        default:
+            return FALSE;
+    }
+}
+
+/*
+ * Invoked to locally format the passed text and add it to the text printer to render it.
+ */
+static void DrawOptionMenuChoice(const u8 *text, u8 x, u8 y, u8 style)
+{
+    u8 dst[16];
+    u16 i;
+
+    for (i = 0; *text != EOS && i <= 14; i++)
+        dst[i] = *(text++);
+
+    if (style != 0)
+    {
+        dst[2] = 4;
+        dst[5] = 5;
+    }
+
+    dst[i] = EOS;
+    AddTextPrinterParameterized(SPD_WIN_OPTIONS, SPEEDCHOICE_FONT_ID, dst, x, y, TEXT_SPEED_FF, NULL);
+}
+
+void DrawPageOptions(u8);
+
+/*
+ * This is used to handle the inputs per option, not the Speedchoice menu inputs overall.
+ * See Task_SpeedchoiceMenuProcessInput for that.
+ */
+static u8 ProcessGeneralInput(struct SpeedchoiceOption *option, u8 selection, bool8 indexedToOne) // if indexedToOne is true (1), i can conveniently use it as the selection anchor.
+{
+    if(gMain.newKeys & DPAD_RIGHT)
+    {
+        if(option->enabled == FALSE)
+        {
+            PlaySE(SE_FAILURE);
+            return selection;
+        }
+        if(selection == (option->optionCount - (!indexedToOne))) // i invert the option because when indexedToOne is set to true (or 1) it means i do not subtract 1 since it's not 0 indexed, so invert the boolean in both cases to get the correct modifier.
+            selection = indexedToOne;
+        else
+            selection++;
+        if(option->string != gSpeedchoiceOptionPage)
+            PlaySE(SE_SELECT);
+        else
+            PlaySE(SE_WIN_OPEN); // page scrolling.
+    }
+    // i dont return immediately because emulators could hold both right and left down.
+    if(gMain.newKeys & DPAD_LEFT)
+    {
+        if(option->enabled == FALSE)
+        {
+            PlaySE(SE_FAILURE);
+            return selection;
+        }
+        if(selection == indexedToOne)
+            selection = (option->optionCount - (!indexedToOne));
+        else
+            selection--;
+        if(option->string != gSpeedchoiceOptionPage)
+            PlaySE(SE_SELECT);
+        else
+            PlaySE(SE_WIN_OPEN); // page scrolling.
+    }
+    return selection;
+}
+
+// --------------------------------------------
+// Standard callbacks for Main and VBlankCB.
+// --------------------------------------------
+static void MainCB2(void)
+{
+    RunTasks();
+    AnimateSprites();
+    BuildOamBuffer();
+    UpdatePaletteFade();
+}
+
+static void VBlankCB(void)
+{
+    LoadOam();
+    ProcessSpriteCopyRequests();
+    TransferPlttBuffer();
+}
+
+// We dim the whole menu except the header and currently selected option. This is invoked when the menu
+// is initialized or re-initialized.
+void HighlightHeaderBox(void)
+{
+    SetGpuReg(REG_OFFSET_WIN1H, WIN_RANGE(17, 223));
+    SetGpuReg(REG_OFFSET_WIN1V, WIN_RANGE(1, 31));
+}
+
+//This version uses addition '+' instead of OR '|'.
+#define WIN_RANGE_(a, b) (((a) << 8) + (b))
+
+// Same as above, but for the option instead.
+static void HighlightOptionMenuItem(u8 index)
+{
+    SetGpuReg(REG_OFFSET_WIN0H, WIN_RANGE(16, 224));
+    SetGpuReg(REG_OFFSET_WIN0V, WIN_RANGE_(index * 16 + 40, index * 16 + 56));
+}
+
+void CB2_InitSpeedchoice(void);
+
+// The Options menu relies on a CB2 init while New Game relied on a task switchover. As a hack, I
+// used this to transition it over. It's a bit messy but whatever.
+void Task_InitSpeedchoiceMenu(u8 taskId)
+{
+    SetMainCallback2(CB2_InitSpeedchoice);
+    DestroyTask(taskId);
+}
+
+static void DrawHeaderWindow(void);
+static void Task_SpeedchoiceMenuFadeIn(u8 taskId);
+static void sub_80BB154(void);
+
+extern const u8 *const gFemalePresetNames[];
+
+/*
+ * Initialize the default player name similar to how Birch intro does it.
+ */
+void FormatInitialTempName(u8 nameId)
+{
+    const u8* name;
+    u8 i;
+
+    // who needs male anyway
+    name = gFemalePresetNames[nameId];
+    for (i = 0; i < 7; i++)
+        gTempPlayerName[i] = name[i];
+    gTempPlayerName[7] = 0xFF;
+}
+
+// Used to signal to avoid redrawing specific stuff. This is used for the naming screen switchover
+// and the first time tooltip.
+EWRAM_DATA bool32 gAlreadyLoaded = FALSE;
+
+/*
+ * Initialize the CB2 Speedchoice Menu.
+ */
+void CB2_InitSpeedchoice(void)
+{
+    switch (gMain.state)
+    {
+    default:
+    case 0:
+        SetVBlankCallback(NULL);
+        gSpeedchoiceTaskId = -1;
+        gMain.state++;
+        break;
+    case 1:
+    {
+        u8 *addr;
+        u32 size;
+
+        addr = (u8 *)VRAM;
+        size = 0x18000;
+        while (1)
+        {
+            DmaFill16(3, 0, addr, 0x1000);
+            addr += 0x1000;
+            size -= 0x1000;
+            if (size <= 0x1000)
+            {
+                DmaFill16(3, 0, addr, size);
+                break;
+            }
+        }
+        DmaClear32(3, OAM, OAM_SIZE);
+        DmaClear16(3, PLTT, PLTT_SIZE);
+        // dont forget to clear BG PLTT RAM you dingus.
+        CpuFill16(0, (void*)(BG_PLTT), BG_PLTT_SIZE);
+        FillPalette(RGB_BLACK, 0, PLTT_SIZE);
+        SetGpuReg(REG_OFFSET_DISPCNT, 0);
+        ResetBgsAndClearDma3BusyFlags(0);
+        InitBgsFromTemplates(0, sSpeedchoiceMenuBgTemplates, ARRAY_COUNT(sSpeedchoiceMenuBgTemplates));
+        ChangeBgX(0, 0, 0);
+        ChangeBgY(0, 0, 0);
+        ChangeBgX(1, 0, 0);
+        ChangeBgY(1, 0, 0);
+        ChangeBgX(2, 0, 0);
+        ChangeBgY(2, 0, 0);
+        ChangeBgX(3, 0, 0);
+        ChangeBgY(3, 0, 0);
+        InitWindows(sSpeedchoiceMenuWinTemplates);
+        DeactivateAllTextPrinters();
+        SetGpuReg(REG_OFFSET_WIN0H, 0);
+        SetGpuReg(REG_OFFSET_WIN0V, 0);
+        SetGpuReg(REG_OFFSET_WININ, 5);
+        SetGpuReg(REG_OFFSET_WINOUT, 39);
+        SetGpuReg(REG_OFFSET_BLDCNT, 193);
+        SetGpuReg(REG_OFFSET_BLDALPHA, 0);
+        SetGpuReg(REG_OFFSET_BLDY, 4);
+        SetGpuReg(REG_OFFSET_DISPCNT, DISPCNT_WIN0_ON | DISPCNT_OBJ_ON | DISPCNT_OBJ_1D_MAP);
+        ShowBg(0);
+        ShowBg(1);
+        ShowBg(2);
+        gMain.state++;
+    }
+        break;
+    case 2:
+        ResetPaletteFade();
+        ScanlineEffect_Stop();
+        ResetTasks();
+        ResetSpriteData();
+        gMain.state++;
+        break;
+    case 3:
+        LoadBgTiles(1, GetWindowFrameTilesPal(gSaveBlock2Ptr->optionsWindowFrameType)->tiles, 0x120, 0x1A2);
+        gMain.state++;
+        break;
+    case 4:
+        LoadPalette(sOptionMenuBg_Pal, 0, sizeof(sOptionMenuBg_Pal));
+        LoadPalette(GetWindowFrameTilesPal(gSaveBlock2Ptr->optionsWindowFrameType)->pal, 0x70, 0x20);
+        LoadPalette(GetWindowFrameTilesPal(gSaveBlock2Ptr->optionsWindowFrameType)->pal, 0x20, 0x20); // again for the hardcoded border
+        gMain.state++;
+        break;
+    case 5:
+        LoadPalette(sOptionMenuText_Pal, 0x10, sizeof(sOptionMenuText_Pal));
+        LoadPalette(sMainMenuTextPal, 0xF0, sizeof(sMainMenuTextPal));
+        gMain.state++;
+        break;
+    case 6:
+        PutWindowTilemap(0);
+        DrawHeaderWindow();
+        gMain.state++;
+        break;
+    case 7:
+        gMain.state++;
+        break;
+    case 8:
+        PutWindowTilemap(1);
+        //DrawOptionMenuTexts();
+        gMain.state++;
+    case 9:
+        sub_80BB154();
+        gMain.state++;
+        break;
+    case 10:
+    {
+        gSpeedchoiceTaskId = CreateTask(Task_SpeedchoiceMenuFadeIn, 0);
+
+        gStoredPageNum = 1;
+
+        if(!gAlreadyLoaded)
+        {
+            gLocalSpeedchoiceConfig.trueIndex = 0;
+            gLocalSpeedchoiceConfig.pageIndex = 0;
+            gLocalSpeedchoiceConfig.pageNum = 1;
+    
+            SetOptionChoicesAndConfigFromPreset(gPresetVanilla);
+    
+            FormatInitialTempName(Random() % 20);
+        }
+        DrawHeaderWindow();
+        DrawPageOptions(gLocalSpeedchoiceConfig.pageNum);
+
+        /*TextSpeed_DrawChoices(gTasks[taskId].data[TD_TEXTSPEED]);
+        BattleScene_DrawChoices(gTasks[taskId].data[TD_BATTLESCENE]);
+        BattleStyle_DrawChoices(gTasks[taskId].data[TD_BATTLESTYLE]);
+        Sound_DrawChoices(gTasks[taskId].data[TD_SOUND]);
+        ButtonMode_DrawChoices(gTasks[taskId].data[TD_BUTTONMODE]);
+        FrameType_DrawChoices(gTasks[taskId].data[TD_FRAMETYPE]);
+        HighlightOptionMenuItem(gTasks[taskId].data[TD_MENUSELECTION]);*/
+
+        HighlightHeaderBox();
+        HighlightOptionMenuItem(gLocalSpeedchoiceConfig.pageIndex);
+        if(!gAlreadyLoaded)
+            PlayBGM(MUS_CONTEST_LOBBY);
+        gMain.state++;
+        break;
+    }
+    case 11:
+        BeginNormalPaletteFade(-1, 0, 0x10, 0, 0);
+        SetVBlankCallback(VBlankCB);
+        SetMainCallback2(MainCB2);
+        return;
+    }
+}
+
+// from charmap.txt
+#define CHAR_0 0xA1
+#define CHAR_PERCENT 0x5B
+
+// Replaces MENUOPTIONCOORDS in speedchoice.h.
+#define NEWMENUOPTIONCOORDS(i)  ((i * 16) + 2)
+
+// Deprecated function. Originally was going to be used to select % of experience, I think.
+static u8 *FormatPercentNumber(char *text, u8 selection, u8 x, u8 y, u8 style) // style is unused
+{
+    memcpy(text, gSystemText_TerminatorS, 3); // copy the palette control code.
+
+    // there are no more than 10 pages, so format it as a single digit.
+    text[3] = (selection / 100) + CHAR_0; // hundreds
+    text[4] = ((selection % 100) / 10) + CHAR_0;    // tens
+    text[5] = ((selection % 100) % 10) + CHAR_0; // ones
+    text[6] = CHAR_PERCENT;
+    text[7] = EOS;
+}
+
+// Render the page number.
+static void DrawPageChoice(u8 selection)
+{
+    u8 text[5];
+
+    memcpy(text, gSystemText_TerminatorS, 3);
+
+    text[3] = selection + CHAR_0;
+    text[4] = EOS;
+
+    AddTextPrinterParameterized(SPD_WIN_OPTIONS, SPEEDCHOICE_FONT_ID, text, 40, NEWMENUOPTIONCOORDS(5), TEXT_SPEED_FF, NULL);
+}
+
+// Render the text for the choices for each option.
+static void DrawGeneralChoices(struct SpeedchoiceOption *option, u8 selection, u8 row, bool8 isPercent)
+{
+    u8 styles[MAX_CHOICES];
+    u8 numChoices = option->optionCount;
+    u8 i;
+
+    // Format the array.
+    if(numChoices < MAX_CHOICES)
+    {
+        for(i = 0; i < numChoices; i++)
+            styles[i] = 0;
+
+        styles[selection] = 1;
+    }
+
+    // Arrows needs special handling for positioning the arrows and text.
+    if(option->optionType == ARROW)
+    {
+        u8 text[8];
+        s16 x_left = Arrows[0].x;
+        s16 x_right = Arrows[1].x;
+        s16 y = NEWMENUOPTIONCOORDS(row);
+        // perform centering, add 4 pixels for the 8x8 arrow centering
+        s16 x_preset = 4 + x_left + (x_right - x_left - GetStringWidth(SPEEDCHOICE_FONT_ID, gPresetNames[gLocalSpeedchoiceConfig.optionConfig[0]], 0)) / 2;
+
+        DrawOptionMenuChoice(Arrows[0].string, x_left, y, 0); // left arrow
+        DrawOptionMenuChoice(Arrows[1].string, x_right, y, 0); // right arrow
+        DrawOptionMenuChoice(gPresetNames[gLocalSpeedchoiceConfig.optionConfig[0]], x_preset, y, 0);
+    }
+    // Player name needs special handling as well.
+    else if(option->optionType == PLAYER_NAME)
+    {
+        u8 i;
+        u8 bufferedName[6 + PLAYER_NAME_LENGTH + 1]; // account for the color strings
+        s16 y = NEWMENUOPTIONCOORDS(row);
+        s16 x_left = OptionChoiceConfigPlayerName[0].x;
+        s16 x_right = 195; // from Arrows[1].x dont mind me just borrowing
+        s16 length = GetStringWidth(SPEEDCHOICE_FONT_ID, gTempPlayerName, 0);
+        s16 x_preset = 4 + x_left + (x_right - x_left - length) / 2;
+        
+        // format the name with {COLOR GREEN}{SHADOW LIGHT_GREEN} first.
+        bufferedName[0] = 0xFC;
+        bufferedName[1] = 0x01;
+        bufferedName[2] = 0x06;
+        bufferedName[3] = 0xFC;
+        bufferedName[4] = 0x03;
+        bufferedName[5] = 0x07;
+        // copy the name.
+        for(i = 0; i < PLAYER_NAME_LENGTH; i++) {
+            bufferedName[i + 6] = gTempPlayerName[i];
+        }
+        // add terminator.
+        bufferedName[13] = EOS;
+        DrawOptionMenuChoice(bufferedName, x_preset, y, 0);
+    }
+    // Assume everything else is a normal option render.
+    else
+    {
+        for(i = 0; i < numChoices; i++)
+        {
+            s16 x = option->options[i].x;
+            s16 y = NEWMENUOPTIONCOORDS(row);
+            u8 *string = option->options[i].string;
+
+            DrawOptionMenuChoice(string, x, y, styles[i]);
+        }
+    }
+}
+
+static void Task_SpeedchoiceMenuProcessInput(u8);
+static void DrawTooltip(u8 taskId, const u8 *str, int speed, bool32 isYesNo);
+
+/*
+ * Fade in until it's time to start processing inputs.
+ */
+static void Task_SpeedchoiceMenuFadeIn(u8 taskId)
+{
+    if (!gPaletteFade.active)
+    {
+        gTasks[taskId].func = Task_SpeedchoiceMenuProcessInput;
+    }
+}
+
+/*
+ * Get the true index of the first or last page option depending on the enum passed.
+ */
+u8 GetPageOptionTrueIndex(bool8 lastOrFirst, u8 page)
+{
+    if(lastOrFirst == LAST)
+        return (OPTIONS_PER_PAGE * (page - 1)) + GetPageDrawCount(page) - 1;
+    else
+        return (OPTIONS_PER_PAGE * (page - 1));
+}
+
+/*
+ * Same as above, but return the page index.
+ */
+u8 GetPageOptionPageIndex(bool8 lastOrFirst, u8 page)
+{
+    return (lastOrFirst) ? GetPageDrawCount(page) : 1;
+}
+
+extern void ClearMainMenuWindowTilemap(const struct WindowTemplate *template);
+
+/*
+ * Finish rendering the tooltip by holding until it has completed rendering.
+ */
+static void Task_WaitForTooltip(u8 taskId)
+{
+    RunTextPrinters();
+
+    if(!IsTextPrinterActive(SPD_WIN_TOOLTIP))
+    {
+        if(gMain.newKeys & A_BUTTON)
+        {
+            ClearWindowTilemap(SPD_WIN_TOOLTIP);
+            ClearMainMenuWindowTilemap((struct WindowTemplate *)&sSpeedchoiceMenuWinTemplates[SPD_WIN_TOOLTIP]);
+            DrawPageOptions(gLocalSpeedchoiceConfig.pageNum);
+            gTasks[taskId].func = Task_SpeedchoiceMenuProcessInput;
+        }
+    }
+}
+
+extern void DrawMainMenuWindowBorder(const struct WindowTemplate*, u16);
+
+/*
+ * Initiate the rendering for the tooltip.
+ */
+static void DrawTooltip(u8 taskId, const u8 *str, int speed, bool32 isYesNo)
+{
+    FillWindowPixelBuffer(SPD_WIN_TOOLTIP, 0x11);
+    AddTextPrinterParameterized(SPD_WIN_TOOLTIP, SPEEDCHOICE_FONT_ID, str, 0, 1, speed, NULL);
+    //sub_8098858(SPD_WIN_TOOLTIP, 0x1D5, 0);
+    DrawMainMenuWindowBorder((struct WindowTemplate *)&sSpeedchoiceMenuWinTemplates[SPD_WIN_TOOLTIP], 418);
+    PutWindowTilemap(SPD_WIN_TOOLTIP);
+    CopyWindowToVram(SPD_WIN_TOOLTIP, 3);
+    if(isYesNo)
+    {
+        FillWindowPixelBuffer(3, 0x11);
+        DrawMainMenuWindowBorder((struct WindowTemplate *)&sSpeedchoiceMenuWinTemplates[SPD_WIN_YESNO], 418);
+        PutWindowTilemap(3);
+        CopyWindowToVram(3, 3);
+    }
+    SetGpuReg(REG_OFFSET_WIN1H, WIN_RANGE(1, 241));
+    SetGpuReg(REG_OFFSET_WIN1V, WIN_RANGE_(114, 160));
+    if(!isYesNo)
+        gTasks[taskId].func = Task_WaitForTooltip;
+}
+
+// Count leading zeroes. Self-explanatory.
+u32 CountLeadingZeros(u32 value)
+{
+    u32 result = 0;
+
+    if (!value)
+        return 32;
+
+    while (value < 0x80000000)
+    {
+        result ++;
+        value <<= 1;
+    }
+
+    return result;
+}
+
+// Convert number of options to bits that are used. Used to assist calculating CV.
+u8 GetNumBitsUsed(u8 numOptions)
+{
+    if(numOptions < 2) { return 1; }
+    return 32 - CountLeadingZeros(numOptions - 1);
+}
+
+// Calculate the Check Value given a given option configuration. Used for verifying ROM
+// check value + option config before starting a run/race.
+u32 CalculateCheckValue(u8 taskId)
+{
+    u32 checkValue;
+    u8 i; // current option
+    u8 totalBitsUsed;
+
+    // do checkvalue increment for 32-bit value.
+    for(checkValue = 0, i = 0, totalBitsUsed = 0; i < CURRENT_OPTIONS_NUM; i++)
+    {
+        checkValue += gLocalSpeedchoiceConfig.optionConfig[i] << totalBitsUsed;
+        totalBitsUsed += GetNumBitsUsed(SpeedchoiceOptions[i].optionCount);
+    }
+
+    // seed RNG with checkValue for more hash-like number.
+    checkValue = 0x41c64e6d * checkValue + 0x00006073;
+
+    // xor with randomizer value, if one is present.
+    checkValue = checkValue ^ gRandomizerCheckValue;
+
+    // get rid of sign extension.
+    checkValue = abs(checkValue);
+
+    return checkValue;
+}
+
+// Flush the settings to the Save Block.
+static void SaveSpeedchoiceOptions(u8 taskId)
+{
+    u8 i;
+
+    // once again i would prefer to use an extensible for loop here, but the options
+    // being bitfields means that it cannot currently be done.
+    gSaveBlock2Ptr->speedchoiceConfig.expsystem = gLocalSpeedchoiceConfig.optionConfig[EXPMATH];
+    gSaveBlock2Ptr->speedchoiceConfig.plotless = gLocalSpeedchoiceConfig.optionConfig[PLOTLESS];
+    gSaveBlock2Ptr->speedchoiceConfig.spinners = gLocalSpeedchoiceConfig.optionConfig[SPINNERS];
+    gSaveBlock2Ptr->speedchoiceConfig.maxVision = gLocalSpeedchoiceConfig.optionConfig[MAXVISION];
+    gSaveBlock2Ptr->speedchoiceConfig.earlyfly = gLocalSpeedchoiceConfig.optionConfig[EARLYFLY];
+    gSaveBlock2Ptr->speedchoiceConfig.goodEarlyWilds = gLocalSpeedchoiceConfig.optionConfig[GOOD_EARLY_WILDS];
+    gSaveBlock2Ptr->speedchoiceConfig.earlysurf = gLocalSpeedchoiceConfig.optionConfig[EARLYSURF];
+    gSaveBlock2Ptr->speedchoiceConfig.niceMenuOrder = gLocalSpeedchoiceConfig.optionConfig[NICE_MENU_ORDER];
+    gSaveBlock2Ptr->speedchoiceConfig.easyFalseSwipe = gLocalSpeedchoiceConfig.optionConfig[EASY_FALSE_SWIPE];
+    gSaveBlock2Ptr->speedchoiceConfig.fastCatch = gLocalSpeedchoiceConfig.optionConfig[FAST_CATCH];
+    gSaveBlock2Ptr->speedchoiceConfig.gen7XItems = gLocalSpeedchoiceConfig.optionConfig[GEN_7_X_ITEMS];
+    gSaveBlock2Ptr->speedchoiceConfig.evoEveryLevel = gLocalSpeedchoiceConfig.optionConfig[EVO_EVERY_LEVEL];
+
+    // write the playername.
+    for (i = 0; i < PLAYER_NAME_LENGTH; i++) {
+        gSaveBlock2Ptr->playerName[i] = gTempPlayerName[i];
+    }
+    gSaveBlock2Ptr->playerName[7] = 0xFF;
+}
+
+extern const struct BgTemplate sMainMenuBgTemplates[];
+extern void Task_NewGameBirchSpeech_Init(u8 taskId);
+
+/*
+ * Complete the fade out of the speedchoice menu and then clear the menu data and
+ * jump to Birch Intro.
+ */
+static void Task_SpeedchoiceMenuFadeOut(u8 taskId)
+{
+    if(!gPaletteFade.active)
+    {
+        u8 *addr;
+        u32 size;
+
+        addr = (u8 *)VRAM;
+        size = 0x18000;
+        while (1)
+        {
+            DmaFill16(3, 0, addr, 0x1000);
+            addr += 0x1000;
+            size -= 0x1000;
+            if (size <= 0x1000)
+            {
+                DmaFill16(3, 0, addr, size);
+                break;
+            }
+        }
+        DmaClear32(3, OAM, OAM_SIZE);
+        DmaClear16(3, PLTT, PLTT_SIZE);
+        gPlttBufferUnfaded[0] = 0;
+        gPlttBufferFaded[0] = 0;
+        /*ClearWindowTilemap(SPD_WIN_TEXT_OPTION);
+        ClearWindowTilemap(SPD_WIN_OPTIONS);
+        ClearWindowTilemap(SPD_WIN_TOOLTIP);
+        ClearWindowTilemap(3);
+        sub_8032250(&sSpeedchoiceMenuWinTemplates[SPD_WIN_TEXT_OPTION]);
+        sub_8032250(&sSpeedchoiceMenuWinTemplates[SPD_WIN_OPTIONS]);
+        sub_8032250(&sSpeedchoiceMenuWinTemplates[SPD_WIN_TOOLTIP]);
+        sub_8032250(&sSpeedchoiceMenuWinTemplates[SPD_WIN_YESNO]);*/
+        FreeAllWindowBuffers();
+        SetGpuReg(REG_OFFSET_DISPCNT, 0);
+        SetGpuReg(REG_OFFSET_BG2CNT, 0);
+        SetGpuReg(REG_OFFSET_BG1CNT, 0);
+        SetGpuReg(REG_OFFSET_BG0CNT, 0);
+        SetGpuReg(REG_OFFSET_BG2HOFS, 0);
+        SetGpuReg(REG_OFFSET_BG2VOFS, 0);
+        SetGpuReg(REG_OFFSET_BG1HOFS, 0);
+        SetGpuReg(REG_OFFSET_BG1VOFS, 0);
+        SetGpuReg(REG_OFFSET_BG0HOFS, 0);
+        SetGpuReg(REG_OFFSET_BG0VOFS, 0);
+        ResetBgs();
+        InitBgsFromTemplates(0, sMainMenuBgTemplates, 2);
+        sInIntro = TRUE;
+        sInSubMenu = FALSE;
+        sInBattle = FALSE;
+        sInField = FALSE;
+        gTasks[taskId].func = Task_NewGameBirchSpeech_Init;
+    }
+}
+
+/*
+ * Prompt the Yes/No menu choice to determine if the run/race is started.
+ */
+static void Task_AskToStartGame(u8 taskId)
+{
+    switch (Menu_ProcessInputNoWrapClearOnChoose())
+    {
+    case 0:  // YES
+        PlayBGM(MUS_DUMMY);
+        PlaySE(SE_SELECT);
+        SaveSpeedchoiceOptions(taskId);
+        BeginNormalPaletteFade(-1, 0, 0, 0x10, 0);
+        gTasks[taskId].func = Task_SpeedchoiceMenuFadeOut;
+        break;
+    case 1:  // NO
+    case -1: // B button
+        PlaySE(SE_SELECT);
+        ClearWindowTilemap(SPD_WIN_TOOLTIP);
+        ClearWindowTilemap(3);
+        ClearMainMenuWindowTilemap((struct WindowTemplate *)&sSpeedchoiceMenuWinTemplates[SPD_WIN_TOOLTIP]);
+        ClearMainMenuWindowTilemap((struct WindowTemplate *)&sSpeedchoiceMenuWinTemplates[SPD_WIN_YESNO]);
+        DrawPageOptions(gLocalSpeedchoiceConfig.pageNum);
+        gTasks[taskId].func = Task_SpeedchoiceMenuProcessInput;
+        break;
+    }
+}
+
+/*
+ * This might be incorrectly named, but this is the function to initialize the Yes/No for start game.
+ * The flushing of the options to the Save Block may have been done here originally.
+ */
+static void Task_SpeedchoiceMenuSave(u8 taskId)
+{
+    ConvertIntToHexStringN(gStringVar1, CalculateCheckValue(taskId), STR_CONV_MODE_LEADING_ZEROS, 8);
+    StringExpandPlaceholders(gStringVar4, gSpeedchoiceStartGameText);
+    DrawTooltip(taskId, gStringVar4, TEXT_SPEED_FF, TRUE); // a bit of a hack, but whatever.
+    CreateYesNoMenu(&sSpeedchoiceMenuWinTemplates[SPD_WIN_YESNO], 418, 2, 0);
+
+    gTasks[taskId].func = Task_AskToStartGame;
+}
+
+/*
+ * Fade out Task function to initialize naming screen.
+ */
+void Task_SpeedchoiceMenuFadeOutToNamingScreen(u8 taskId)
+{
+    if(!gPaletteFade.active)
+    {
+        FreeAllWindowBuffers();
+        DestroyTask(gSpeedchoiceTaskId);
+        DoNamingScreen(NAMING_SCREEN_PLAYER, gTempPlayerName, 1, 0, 0, CB2_InitSpeedchoice);
+    }
+}
+
+/*
+ * General processor for the input on the speedchoice menu.
+ */
+static void Task_SpeedchoiceMenuProcessInput(u8 taskId)
+{
+	if(!gAlreadyLoaded)
+	{
+		DrawTooltip(taskId, gSpeedchoiceTooltipExplanation, GetPlayerTextSpeed(), FALSE);
+		gAlreadyLoaded = TRUE;
+	}
+    else if (gMain.newKeys & A_BUTTON)
+    {
+        if (gLocalSpeedchoiceConfig.trueIndex == START_GAME)
+            gTasks[taskId].func = Task_SpeedchoiceMenuSave;
+        else if (gLocalSpeedchoiceConfig.trueIndex == PRESET) {
+            SetOptionChoicesAndConfigFromPreset(GetPresetPtr(gLocalSpeedchoiceConfig.optionConfig[PRESET]));
+            PlaySE(SE_SELECT); // page scrolling.
+            gForceUpdate = TRUE;
+        }
+        else if (gLocalSpeedchoiceConfig.trueIndex == PLAYER_NAME_SET) {
+            BeginNormalPaletteFade(-1, 0, 0, 0x10, 0);
+            gTasks[taskId].func = Task_SpeedchoiceMenuFadeOutToNamingScreen;
+            PlaySE(SE_SELECT); // page scrolling.
+        }
+    }
+    else if (gMain.newKeys & SELECT_BUTTON) // do tooltip.
+    {
+        if(gLocalSpeedchoiceConfig.trueIndex <= CURRENT_OPTIONS_NUM && SpeedchoiceOptions[gLocalSpeedchoiceConfig.trueIndex].tooltip != NULL)
+            DrawTooltip(taskId, SpeedchoiceOptions[gLocalSpeedchoiceConfig.trueIndex].tooltip, GetPlayerTextSpeed(), FALSE);
+    }
+    else if (gMain.newKeys & DPAD_UP)
+    {
+        if(gLocalSpeedchoiceConfig.trueIndex == PAGE)
+            gLocalSpeedchoiceConfig.trueIndex = GetPageOptionTrueIndex(LAST, gLocalSpeedchoiceConfig.pageNum); // set the entry to the last available option.
+        else if(gLocalSpeedchoiceConfig.trueIndex > GetPageOptionTrueIndex(FIRST, gLocalSpeedchoiceConfig.pageNum))
+            gLocalSpeedchoiceConfig.trueIndex--;
+        else
+            gLocalSpeedchoiceConfig.trueIndex = START_GAME;
+
+        SetPageIndexFromTrueIndex(taskId, gLocalSpeedchoiceConfig.trueIndex);
+        HighlightOptionMenuItem(gLocalSpeedchoiceConfig.pageIndex);
+    }
+    else if (gMain.newKeys & DPAD_DOWN)
+    {
+        if(gLocalSpeedchoiceConfig.trueIndex == GetPageOptionTrueIndex(LAST, gLocalSpeedchoiceConfig.pageNum))
+            gLocalSpeedchoiceConfig.trueIndex = PAGE; // you are at the last option when you press down, go to page index.
+        else if(gLocalSpeedchoiceConfig.trueIndex == START_GAME)
+            gLocalSpeedchoiceConfig.trueIndex = GetPageOptionTrueIndex(FIRST, gLocalSpeedchoiceConfig.pageNum);
+        else
+            gLocalSpeedchoiceConfig.trueIndex++;
+
+        SetPageIndexFromTrueIndex(taskId, gLocalSpeedchoiceConfig.trueIndex);
+        HighlightOptionMenuItem(gLocalSpeedchoiceConfig.pageIndex);
+    }
+    else
+    {
+        u8 trueIndex = gLocalSpeedchoiceConfig.trueIndex;
+        u8 selection = gLocalSpeedchoiceConfig.optionConfig[trueIndex];
+        switch (trueIndex)
+        {
+            default:
+                if(trueIndex < CURRENT_OPTIONS_NUM)
+                {
+                    // lol. I don't know why I hardcoded this in Sapphire.
+                    //if(trueIndex == NERFROXANNE)
+                    //    gLocalSpeedchoiceConfig.optionConfig[trueIndex] = ProcessGeneralInput((struct SpeedchoiceOption *)&SpeedchoiceOptions[trueIndex], selection, TRUE);
+                    //else
+                    u8 oldSelection = gLocalSpeedchoiceConfig.optionConfig[trueIndex];
+                    gLocalSpeedchoiceConfig.optionConfig[trueIndex] = ProcessGeneralInput((struct SpeedchoiceOption *)&SpeedchoiceOptions[trueIndex], selection, FALSE);
+                    DrawGeneralChoices((struct SpeedchoiceOption *)&SpeedchoiceOptions[trueIndex], gLocalSpeedchoiceConfig.optionConfig[trueIndex], gLocalSpeedchoiceConfig.pageIndex, FALSE);
+                    if(oldSelection != gLocalSpeedchoiceConfig.optionConfig[trueIndex] || gForceUpdate) {
+                        DrawPageOptions(gLocalSpeedchoiceConfig.pageNum); // HACK!!! The page has to redraw. But only redraw it if the selection changed, otherwise it lags.
+                        gForceUpdate = FALSE;
+                    }
+                }
+                break;
+            case PAGE:
+                gLocalSpeedchoiceConfig.pageNum = ProcessGeneralInput((struct SpeedchoiceOption *)&SpeedchoiceOptions[CURRENT_OPTIONS_NUM], gLocalSpeedchoiceConfig.pageNum, TRUE);
+                //DrawPageChoice(gLocalSpeedchoiceConfig.pageNum); Deprecated.
+                if(gLocalSpeedchoiceConfig.pageNum != gStoredPageNum) // only redraw if the page updates!
+                {
+                    DrawPageOptions(gLocalSpeedchoiceConfig.pageNum);
+                    gStoredPageNum = gLocalSpeedchoiceConfig.pageNum; // update the page.
+                }
+                break;
+            case START_GAME:
+                break;
+        }
+    }
+    gTasks[taskId].data[0]++; // arrow timer
+}
+
+// Self-explanatory. Draws the header window.
+static void DrawHeaderWindow(void)
+{
+    s32 width;
+    
+    FillWindowPixelBuffer(SPD_WIN_TEXT_OPTION, 0x11);
+    AddTextPrinterParameterized(SPD_WIN_TEXT_OPTION, SPEEDCHOICE_FONT_ID, gSpeedchoiceTextHeader, 4, 1, TEXT_SPEED_FF, NULL);
+    width = GetStringWidth(SPEEDCHOICE_FONT_ID, gSpeedchoiceCurrentVersion, GetFontAttribute(SPEEDCHOICE_FONT_ID, FONTATTR_LETTER_SPACING));
+    AddTextPrinterParameterized(SPD_WIN_TEXT_OPTION, SPEEDCHOICE_FONT_ID, gSpeedchoiceCurrentVersion, 204 - width, 1, TEXT_SPEED_FF, NULL);
+    CopyWindowToVram(SPD_WIN_TEXT_OPTION, 3);
+}
+
+// Renders the frame for the options and choices window.
+void DrawOptionsAndChoicesWindow(void)
+{
+    FillWindowPixelBuffer(SPD_WIN_OPTIONS, 0x11);
+    CopyWindowToVram(SPD_WIN_OPTIONS, 3);
+}
+
+// Self-explanatory.
+u8 GetPageDrawCount(u8 page)
+{
+    if ((page * OPTIONS_PER_PAGE) > CURRENT_OPTIONS_NUM)
+        return CURRENT_OPTIONS_NUM % OPTIONS_PER_PAGE;
+
+    return OPTIONS_PER_PAGE;
+}
+
+/*
+ * Given a page number, renders the page options.
+ */
+void DrawPageOptions(u8 page) // Page is 1-indexed
+{
+    u8 i;
+    u8 drawCount = GetPageDrawCount(page);
+
+    FillWindowPixelBuffer(SPD_WIN_OPTIONS, 0x11);
+
+    // print page options.
+    for(i = 0; i < drawCount; i++)
+    {
+        struct SpeedchoiceOption *option = (struct SpeedchoiceOption *)&SpeedchoiceOptions[i + (OPTIONS_PER_PAGE * (page - 1))];
+        const u8 *string = option->string;
+
+        AddTextPrinterParameterized(SPD_WIN_OPTIONS, SPEEDCHOICE_FONT_ID, string, 4, NEWMENUOPTIONCOORDS(i), TEXT_SPEED_FF, NULL);
+        // TODO: Draw on SPD_WIN_OPTIONS, if it's broken
+        DrawGeneralChoices(option, gLocalSpeedchoiceConfig.optionConfig[i + ((page-1) * 5)], i, FALSE);
+    }
+
+    AddTextPrinterParameterized(SPD_WIN_OPTIONS, SPEEDCHOICE_FONT_ID, gSpeedchoiceOptionPage, 4, NEWMENUOPTIONCOORDS(5), TEXT_SPEED_FF, NULL);
+    AddTextPrinterParameterized(SPD_WIN_OPTIONS, SPEEDCHOICE_FONT_ID, gSpeedchoiceOptionStartGame, 4, NEWMENUOPTIONCOORDS(6), TEXT_SPEED_FF, NULL);
+    DrawPageChoice(gLocalSpeedchoiceConfig.pageNum);
+    CopyWindowToVram(SPD_WIN_OPTIONS, 3);
+}
+
+/*
+ * Given a true index, convert it to the page index so that the general processor function can
+ * set the correctly newly selected option.
+ */
+void SetPageIndexFromTrueIndex(u8 taskId, s16 index) // data is s16.
+{
+    if(index == PAGE)
+        gLocalSpeedchoiceConfig.pageIndex = 5;
+    else if(index == START_GAME)
+        gLocalSpeedchoiceConfig.pageIndex = 6;
+    else
+        gLocalSpeedchoiceConfig.pageIndex = (oldmin((index % OPTIONS_PER_PAGE), OPTIONS_PER_PAGE));
+}
+
+// Copied from option menu. Fills the window frames.
+static void sub_80BB154(void)
+{
+    //                   bg, tileNum, x,    y,    width, height,  pal
+    FillBgTilemapBufferRect(1, 0x1A2, 1,    0,      1,      1,      7);
+    FillBgTilemapBufferRect(1, 0x1A3, 2,    0,      0x1B,   1,      7);
+    FillBgTilemapBufferRect(1, 0x1A4, 28,   0,      1,      1,      7);
+    FillBgTilemapBufferRect(1, 0x1A5, 1,    1,      1,      2,      7);
+    FillBgTilemapBufferRect(1, 0x1A7, 28,   1,      1,      2,      7);
+    FillBgTilemapBufferRect(1, 0x1A8, 1,    3,      1,      1,      7);
+    FillBgTilemapBufferRect(1, 0x1A9, 2,    3,      0x1B,   1,      7);
+    FillBgTilemapBufferRect(1, 0x1AA, 28,   3,      1,      1,      7);
+    FillBgTilemapBufferRect(1, 0x1A2, 1,    4,      1,      1,      7);
+    FillBgTilemapBufferRect(1, 0x1A3, 2,    4,      0x1A,   1,      7);
+    FillBgTilemapBufferRect(1, 0x1A4, 28,   4,      1,      1,      7);
+    FillBgTilemapBufferRect(1, 0x1A5, 1,    5,      1,      0x12,   7);
+    FillBgTilemapBufferRect(1, 0x1A7, 28,   5,      1,      0x12,   7);
+    FillBgTilemapBufferRect(1, 0x1A8, 1,    19,     1,      1,      7);
+    FillBgTilemapBufferRect(1, 0x1A9, 2,    19,     0x1A,   1,      7);
+    FillBgTilemapBufferRect(1, 0x1AA, 28,   19,     1,      1,      7);
+
+    CopyBgTilemapBufferToVram(1);
+}
diff --git a/src/start_menu.c b/src/start_menu.c
index bfced1858..829b5de6b 100644
--- a/src/start_menu.c
+++ b/src/start_menu.c
@@ -45,6 +45,8 @@
 #include "constants/songs.h"
 #include "union_room.h"
 #include "constants/rgb.h"
+#include "speedchoice.h"
+#include "done_button.h"
 
 // Menu actions
 enum
@@ -61,7 +63,8 @@ enum
     MENU_ACTION_PLAYER_LINK,
     MENU_ACTION_REST_FRONTIER,
     MENU_ACTION_RETIRE_FRONTIER,
-    MENU_ACTION_PYRAMID_BAG
+    MENU_ACTION_PYRAMID_BAG,
+    MENU_ACTION_ESCAPE
 };
 
 // Save status
@@ -82,6 +85,7 @@ EWRAM_DATA static u8 sBattlePyramidFloorWindowId = 0;
 EWRAM_DATA static u8 sStartMenuCursorPos = 0;
 EWRAM_DATA static u8 sNumStartMenuActions = 0;
 EWRAM_DATA static u8 sCurrentStartMenuActions[9] = {0};
+EWRAM_DATA bool32 sUsedEscapeOption = FALSE;
 EWRAM_DATA static u8 sInitStartMenuData[2] = {0};
 
 EWRAM_DATA static u8 (*sSaveDialogCallback)(void) = NULL;
@@ -153,6 +157,14 @@ static const u8* const sPyramidFloorNames[] =
 static const struct WindowTemplate sPyramidFloorWindowTemplate_2 = {0, 1, 1, 0xA, 4, 0xF, 8};
 static const struct WindowTemplate sPyramidFloorWindowTemplate_1 = {0, 1, 1, 0xC, 4, 0xF, 8};
 
+extern const u8 gText_MenuEscape[];
+extern void(*sItemUseOnFieldCB)(u8 taskId);
+
+bool8 StartMenu_EscapeCallback(void);
+extern struct MapObjectTimerBackup gMapObjectTimerBackup[MAX_SPRITES];
+extern void ItemUseOnFieldCB_EscapeRope(u8 taskId);
+extern void SetUpItemUseOnFieldCallback(u8 taskId);
+
 static const struct MenuAction sStartMenuItems[] =
 {
     {gText_MenuPokedex, {.u8_void = StartMenuPokedexCallback}},
@@ -167,7 +179,8 @@ static const struct MenuAction sStartMenuItems[] =
     {gText_MenuPlayer, {.u8_void = StartMenuLinkModePlayerNameCallback}},
     {gText_MenuRest, {.u8_void = StartMenuSaveCallback}},
     {gText_MenuRetire, {.u8_void = StartMenuBattlePyramidRetireCallback}},
-    {gText_MenuBag, {.u8_void = StartMenuBattlePyramidBagCallback}}
+    {gText_MenuBag, {.u8_void = StartMenuBattlePyramidBagCallback}},
+    {gText_MenuEscape, {.u8_void = StartMenu_EscapeCallback}}
 };
 
 static const struct BgTemplate sUnknown_085105A8[] =
@@ -224,6 +237,59 @@ static void ShowSaveInfoWindow(void);
 static void RemoveSaveInfoWindow(void);
 static void HideStartMenuWindow(void);
 
+void DoMapObjectTimerBackup(void)
+{
+    u8 i;
+
+    for(i = 0; i < MAX_SPRITES; i++)
+    {
+        gMapObjectTimerBackup[i].backedUp = TRUE;
+        gMapObjectTimerBackup[i].spriteId = gSprites[i].data[0];
+        gMapObjectTimerBackup[i].timer = gSprites[i].data[3];
+    }
+}
+
+bool8 CanUseFly(void)
+{
+    if(Overworld_MapTypeAllowsTeleportAndFly(gMapHeader.mapType) == TRUE)
+        return TRUE;
+    else
+        return FALSE;
+}
+
+void CloseMenuWithoutScriptContext(void)
+{
+    ClearStdWindowAndFrame(GetStartMenuWindowId(), 1);
+    RemoveStartMenuWindow();
+    ScriptUnfreezeObjectEvents();
+}
+
+static void ItemUseInEscape_EscapeRope(u8 taskId)
+{
+    sUsedEscapeOption = TRUE;
+    sItemUseOnFieldCB = ItemUseOnFieldCB_EscapeRope; // do escape rope attempt.
+    gTasks[taskId].data[3] = 1; // dont fade to black! Not in a submenu.
+    SetUpItemUseOnFieldCallback(taskId);
+}
+
+bool8 StartMenu_EscapeCallback(void)
+{
+	CloseMenuWithoutScriptContext();
+    CreateTask(ItemUseInEscape_EscapeRope, 0xFF);
+    return TRUE;
+}
+
+bool8 IsMapEscapeOption(void)
+{
+    u8 i;
+
+    for(i = 0; i < 16; i++)
+        if((gObjectEvents[i].trainerType == 1 || gObjectEvents[i].trainerType == 3) && CanUseFly() == FALSE)
+            return TRUE;
+
+    return FALSE;
+}
+
 void SetDexPokemonPokenavFlags(void) // unused
 {
     FlagSet(FLAG_SYS_POKEDEX_GET);
@@ -291,7 +357,10 @@ static void BuildNormalStartMenu(void)
     AddStartMenuAction(MENU_ACTION_PLAYER);
     AddStartMenuAction(MENU_ACTION_SAVE);
     AddStartMenuAction(MENU_ACTION_OPTION);
-    AddStartMenuAction(MENU_ACTION_EXIT);
+    if(IsMapEscapeOption() == TRUE)
+        AddStartMenuAction(MENU_ACTION_ESCAPE);
+    else
+        AddStartMenuAction(MENU_ACTION_EXIT);
 }
 
 static void BuildSafariZoneStartMenu(void)
@@ -494,6 +563,9 @@ static void CreateStartMenuTask(TaskFunc followupFunc)
 
     sInitStartMenuData[0] = 0;
     sInitStartMenuData[1] = 0;
+
+    DoMapObjectTimerBackup();
+
     taskId = CreateTask(StartMenuTask, 0x50);
     SetTaskFuncWithFollowupFunc(taskId, StartMenuTask, followupFunc);
 }
@@ -546,10 +618,16 @@ void ShowStartMenu(void)
     }
     CreateStartMenuTask(Task_ShowStartMenu);
     ScriptContext2_Enable();
+    sInSubMenu = TRUE;
+    sInField = FALSE;
+    sInBattle = FALSE;
 }
 
 static bool8 HandleStartMenuInput(void)
 {
+    sInSubMenu = TRUE;
+    sInBattle = FALSE;
+    sInField = FALSE;
     if (JOY_NEW(DPAD_UP))
     {
         PlaySE(SE_SELECT);
@@ -789,6 +867,9 @@ static bool8 SaveCallback(void)
         ScriptUnfreezeObjectEvents();
         ScriptContext2_Disable();
         SoftResetInBattlePyramid();
+        sInSubMenu = FALSE;
+        sInField = TRUE;
+        sInBattle = FALSE;
         return TRUE;
     }
 
@@ -1023,6 +1104,7 @@ static u8 SaveOverwriteInputCallback(void)
     switch (Menu_ProcessInputNoWrapClearOnChoose())
     {
     case 0: // Yes
+        TryIncrementButtonStat(DB_SAVE_COUNT);
         sSaveDialogCallback = SaveSavingMessageCallback;
         return SAVE_IN_PROGRESS;
     case -1: // B Button
@@ -1388,6 +1470,9 @@ void HideStartMenu(void)
 {
     PlaySE(SE_SELECT);
     HideStartMenuWindow();
+    sInSubMenu = FALSE;
+    sInField = TRUE;
+    sInBattle = FALSE;
 }
 
 void AppendToList(u8 *list, u8 *pos, u8 newEntry)
diff --git a/src/strings.c b/src/strings.c
index fe5051d71..10bef92fe 100644
--- a/src/strings.c
+++ b/src/strings.c
@@ -732,6 +732,7 @@ const u8 gText_Blank[] = _("");
 const u8 gText_MenuOptionSave[] = _("SAVE");
 const u8 gText_MenuOptionOption[] = _("OPTION");
 const u8 gText_MenuOptionExit[] = _("EXIT");
+const u8 gText_MenuEscape[] = _("ESCAPE");
 const u8 gText_5BP[] = _("  5BP");
 const u8 gText_10BP[] = _("10BP");
 const u8 gText_15BP[] = _("15BP");
@@ -1481,6 +1482,7 @@ const u8 gText_ButtonMode[] = _("BUTTON MODE");
 const u8 gText_TextSpeedSlow[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}SLOW");
 const u8 gText_TextSpeedMid[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}MID");
 const u8 gText_TextSpeedFast[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}FAST");
+const u8 gText_TextSpeedInst[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}INST");
 const u8 gText_BattleSceneOn[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}ON");
 const u8 gText_BattleSceneOff[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}OFF");
 const u8 gText_BattleStyleShift[] = _("{COLOR GREEN}{SHADOW LIGHT_GREEN}SHIFT");
diff --git a/src/task.c b/src/task.c
index a97496009..f28b9cd6a 100644
--- a/src/task.c
+++ b/src/task.c
@@ -1,11 +1,34 @@
 #include "global.h"
 #include "task.h"
+#include "main.h"
 
 struct Task gTasks[NUM_TASKS];
 
 static void InsertTask(u8 newTaskId);
 static u8 FindFirstActiveTask(void);
 
+extern void BattleIntroSlide2(u8);
+extern void BattleIntroSlide1(u8);
+extern void BattleIntroSlide3(u8);
+extern void BattleIntroSlideLink(u8);
+
+// SPEEDCHOICE
+bool8 IsTaskFuncInList(u8 taskId)
+{
+	TaskFunc func = gTasks[taskId].func;
+
+	if(func == BattleIntroSlide2)
+		return TRUE;
+	else if(func == BattleIntroSlide1)
+		return TRUE;
+	else if(func == BattleIntroSlide3)
+		return TRUE;
+	else if(func == BattleIntroSlideLink)
+		return TRUE;
+	else
+		return FALSE;
+}
+
 void ResetTasks(void)
 {
     u8 i;
@@ -115,7 +138,13 @@ void RunTasks(void)
     {
         do
         {
-            gTasks[taskId].func(taskId);
+            if(IsTaskFuncInList(taskId) == TRUE && (gMain.vblankCounter1 % 2 == 0)) // 1.5x
+            {
+                gTasks[taskId].func(taskId);
+                gTasks[taskId].func(taskId);
+            }
+            else
+                gTasks[taskId].func(taskId);
             taskId = gTasks[taskId].next;
         } while (taskId != TAIL_SENTINEL);
     }
diff --git a/src/time_events.c b/src/time_events.c
index 3f56d3ab5..634cf8848 100644
--- a/src/time_events.c
+++ b/src/time_events.c
@@ -8,6 +8,7 @@
 #include "rtc.h"
 #include "script.h"
 #include "task.h"
+#include "speedchoice.h"
 
 static u32 GetMirageRnd(void)
 {
@@ -41,14 +42,21 @@ void UpdateMirageRnd(u16 days)
 
 bool8 IsMirageIslandPresent(void)
 {
-    u16 rnd = GetMirageRnd() >> 16;
-    int i;
-
-    for (i = 0; i < PARTY_SIZE; i++)
-        if (GetMonData(&gPlayerParty[i], MON_DATA_SPECIES) && (GetMonData(&gPlayerParty[i], MON_DATA_PERSONALITY) & 0xFFFF) == rnd)
-            return TRUE;
-
-    return FALSE;
+    //if(CheckSpeedchoiceOption(MEME_ISLAND, MEME_BIG) == TRUE)
+        return TRUE; // always present.
+    /*
+    else
+    {
+        u16 rnd = GetMirageRnd() >> 16;
+        int i;
+    
+        for (i = 0; i < PARTY_SIZE; i++)
+            if (GetMonData(&gPlayerParty[i], MON_DATA_SPECIES) && (GetMonData(&gPlayerParty[i], MON_DATA_PERSONALITY) & 0xFFFF) == rnd)
+                return TRUE;
+    
+        return FALSE;
+    }
+    */
 }
 
 void UpdateShoalTideFlag(void)
diff --git a/src/title_screen.c b/src/title_screen.c
index 1d6f90d74..75917ff4c 100644
--- a/src/title_screen.c
+++ b/src/title_screen.c
@@ -724,6 +724,55 @@ static void Task_TitleScreenPhase2(u8 taskId)
     gTasks[taskId].data[6] = 6;
 }
 
+enum {
+    RTC_NO_BUTTONS,
+    RTC_DOWN_SELECT_B,
+    RTC_JUST_SELECT,
+    RTC_SELECT_LEFT_UP,
+    RTC_JUST_LEFT_UP // you did it!    
+};
+
+#define RTC_ACCESS_START RTC_NO_BUTTONS
+#define RTC_ACCESS_SUCCESS RTC_JUST_LEFT_UP
+
+EWRAM_DATA u8 rtcstate = RTC_ACCESS_START;
+
+// speedchoice addition
+static int GetRTCButtonState(void)
+{
+    switch (rtcstate)
+    {
+    default:
+        rtcstate = RTC_ACCESS_START;
+        //fallthrough
+    case RTC_ACCESS_START:
+        if (JOY_HELD(B_BUTTON) && JOY_HELD(SELECT_BUTTON) && JOY_HELD(DPAD_DOWN))
+            rtcstate++;
+        break;
+    case RTC_DOWN_SELECT_B:
+        if (!JOY_HELD(SELECT_BUTTON))
+            rtcstate = RTC_ACCESS_START;
+        else if (!JOY_HELD(B_BUTTON | DPAD_DOWN))
+            rtcstate++;
+        break;
+    case RTC_JUST_SELECT:
+        if (!JOY_HELD(SELECT_BUTTON))
+            rtcstate = RTC_ACCESS_START;
+        else if (JOY_HELD(DPAD_LEFT | DPAD_UP))
+            rtcstate++;
+        break;
+    case RTC_SELECT_LEFT_UP:
+        if (JOY_HELD(DPAD_LEFT | DPAD_UP) && !JOY_HELD(SELECT_BUTTON))
+            rtcstate++;
+        else if (!JOY_HELD(DPAD_LEFT | DPAD_UP))
+            rtcstate = RTC_ACCESS_START;
+        break;
+    case RTC_ACCESS_SUCCESS:
+        break;
+    }
+    return rtcstate;
+}
+
 // Show Rayquaza silhouette and process main title screen input
 static void Task_TitleScreenPhase3(u8 taskId)
 {
@@ -737,14 +786,13 @@ static void Task_TitleScreenPhase3(u8 taskId)
     {
         SetMainCallback2(CB2_GoToClearSaveDataScreen);
     }
-    else if (JOY_HELD(RESET_RTC_BUTTON_COMBO) == RESET_RTC_BUTTON_COMBO
-      && CanResetRTC() == TRUE)
+    else if (GetRTCButtonState() == RTC_ACCESS_SUCCESS)
     {
         FadeOutBGM(4);
         BeginNormalPaletteFade(0xFFFFFFFF, 0, 0, 0x10, RGB_BLACK);
         SetMainCallback2(CB2_GoToResetRtcScreen);
     }
-    else if (JOY_HELD(BERRY_UPDATE_BUTTON_COMBO) == BERRY_UPDATE_BUTTON_COMBO)
+    else if (0)
     {
         FadeOutBGM(4);
         BeginNormalPaletteFade(0xFFFFFFFF, 0, 0, 0x10, RGB_BLACK);
diff --git a/src/trainer_see.c b/src/trainer_see.c
index 46fafa7e3..fada66493 100644
--- a/src/trainer_see.c
+++ b/src/trainer_see.c
@@ -18,6 +18,7 @@
 #include "constants/event_object_movement.h"
 #include "constants/field_effects.h"
 #include "constants/trainer_types.h"
+#include "speedchoice.h"
 
 // this file's functions
 static u8 CheckTrainer(u8 objectEventId);
@@ -311,6 +312,9 @@ static u8 GetTrainerApproachDistance(struct ObjectEvent *trainerObj)
 // Returns how far south the player is from trainer. 0 if out of trainer's sight.
 static u8 GetTrainerApproachDistanceSouth(struct ObjectEvent *trainerObj, s16 range, s16 x, s16 y)
 {
+    if(CheckSpeedchoiceOption(MAXVISION, MAX_OFF) == FALSE)
+        range = MAX_VISION_RANGE;
+
     if (trainerObj->currentCoords.x == x
      && y > trainerObj->currentCoords.y
      && y <= trainerObj->currentCoords.y + range)
@@ -322,6 +326,9 @@ static u8 GetTrainerApproachDistanceSouth(struct ObjectEvent *trainerObj, s16 ra
 // Returns how far north the player is from trainer. 0 if out of trainer's sight.
 static u8 GetTrainerApproachDistanceNorth(struct ObjectEvent *trainerObj, s16 range, s16 x, s16 y)
 {
+    if(CheckSpeedchoiceOption(MAXVISION, MAX_OFF) == FALSE)
+        range = MAX_VISION_RANGE;
+
     if (trainerObj->currentCoords.x == x
      && y < trainerObj->currentCoords.y
      && y >= trainerObj->currentCoords.y - range)
@@ -333,6 +340,9 @@ static u8 GetTrainerApproachDistanceNorth(struct ObjectEvent *trainerObj, s16 ra
 // Returns how far west the player is from trainer. 0 if out of trainer's sight.
 static u8 GetTrainerApproachDistanceWest(struct ObjectEvent *trainerObj, s16 range, s16 x, s16 y)
 {
+    if(CheckSpeedchoiceOption(MAXVISION, MAX_OFF) == FALSE)
+        range = MAX_VISION_RANGE;
+
     if (trainerObj->currentCoords.y == y
      && x < trainerObj->currentCoords.x
      && x >= trainerObj->currentCoords.x - range)
@@ -344,6 +354,9 @@ static u8 GetTrainerApproachDistanceWest(struct ObjectEvent *trainerObj, s16 ran
 // Returns how far east the player is from trainer. 0 if out of trainer's sight.
 static u8 GetTrainerApproachDistanceEast(struct ObjectEvent *trainerObj, s16 range, s16 x, s16 y)
 {
+    if(CheckSpeedchoiceOption(MAXVISION, MAX_OFF) == FALSE)
+        range = MAX_VISION_RANGE;
+
     if (trainerObj->currentCoords.y == y
      && x > trainerObj->currentCoords.x
      && x <= trainerObj->currentCoords.x + range)
@@ -372,8 +385,10 @@ static u8 CheckPathBetweenTrainerAndPlayer(struct ObjectEvent *trainerObj, u8 ap
     for (i = 0; i < approachDistance - 1; i++, MoveCoords(direction, &x, &y))
     {
         collision = GetCollisionFlagsAtCoords(trainerObj, x, y, direction);
-        if (collision != 0 && (collision & COLLISION_MASK))
-            return 0;
+		if(CheckSpeedchoiceOption(MAXVISION, MAX_SANE) == TRUE && (collision && (collision & ~COLLISION_MASK)))
+            return FALSE;
+		else if(CheckSpeedchoiceOption(MAXVISION, MAX_OFF) == TRUE && (collision && (collision & COLLISION_MASK))) // normal handling
+            return FALSE;
     }
 
     // preserve mapobj_unk_19 before clearing.
@@ -386,7 +401,7 @@ static u8 CheckPathBetweenTrainerAndPlayer(struct ObjectEvent *trainerObj, u8 ap
 
     trainerObj->rangeX = unk19_temp;
     trainerObj->rangeY = unk19b_temp;
-    if (collision == 4)
+    if (collision == 4 || CheckSpeedchoiceOption(MAXVISION, MAX_HELL) == TRUE)
         return approachDistance;
 
     return 0;
diff --git a/src/unk_text_util_2.c b/src/unk_text_util_2.c
index b92b34fbd..00723fbb4 100644
--- a/src/unk_text_util_2.c
+++ b/src/unk_text_util_2.c
@@ -5,7 +5,7 @@
 #include "sound.h"
 
 ALIGNED(4)
-static const u8 sUnknown_08616124[] = {1, 2, 4};
+static const u8 sUnknown_08616124[] = {1, 2, 4, 4};
 static const u16 sFont6BrailleGlyphs[] = INCBIN_U16("graphics/fonts/font6.fwjpnfont");
 
 static void DecompressGlyphFont6(u16);
diff --git a/src/wild_encounter.c b/src/wild_encounter.c
index 9f81a3b3e..0eb91284c 100644
--- a/src/wild_encounter.c
+++ b/src/wild_encounter.c
@@ -22,6 +22,7 @@
 #include "constants/layouts.h"
 #include "constants/maps.h"
 #include "constants/weather.h"
+#include "speedchoice.h"
 
 extern const u8 EventScript_RepelWoreOff[];
 
@@ -105,8 +106,9 @@ static bool8 CheckFeebas(void)
         if (y >= gRoute119WaterTileData[3 * 2 + 0] && y <= gRoute119WaterTileData[3 * 2 + 1])
             route119Section = 2;
 
-        if (Random() % 100 > 49) // 50% chance of encountering Feebas
-            return FALSE;
+        // SPEEDCHOICE (Feebas is guaranteed on any feebas tile.)
+        //if (Random() % 100 > 49) // 50% chance of encountering Feebas
+        //    return FALSE;
 
         FeebasSeedRng(gSaveBlock1Ptr->easyChatPairs[0].unk2);
         for (i = 0; i != NUM_FEEBAS_SPOTS;)
@@ -138,50 +140,115 @@ static void FeebasSeedRng(u16 seed)
     sFeebasRngValue = seed;
 }
 
+// -----------------------------------------
+// SPEEDCHOICE CHANGE
+// -----------------------------------------
+// Change: New Wild Encounters used to be set here, but is default now.
 static u8 ChooseWildMonIndex_Land(void)
 {
     u8 rand = Random() % ENCOUNTER_CHANCE_LAND_MONS_TOTAL;
 
-    if (rand < ENCOUNTER_CHANCE_LAND_MONS_SLOT_0)
+    // 20/20/20/15/15/20 for new wild encounter table
+
+    // COMMONS
+    // slot 1 (20%)
+    if(rand < 10)
         return 0;
-    else if (rand >= ENCOUNTER_CHANCE_LAND_MONS_SLOT_0 && rand < ENCOUNTER_CHANCE_LAND_MONS_SLOT_1)
-        return 1;
-    else if (rand >= ENCOUNTER_CHANCE_LAND_MONS_SLOT_1 && rand < ENCOUNTER_CHANCE_LAND_MONS_SLOT_2)
-        return 2;
-    else if (rand >= ENCOUNTER_CHANCE_LAND_MONS_SLOT_2 && rand < ENCOUNTER_CHANCE_LAND_MONS_SLOT_3)
-        return 3;
-    else if (rand >= ENCOUNTER_CHANCE_LAND_MONS_SLOT_3 && rand < ENCOUNTER_CHANCE_LAND_MONS_SLOT_4)
-        return 4;
-    else if (rand >= ENCOUNTER_CHANCE_LAND_MONS_SLOT_4 && rand < ENCOUNTER_CHANCE_LAND_MONS_SLOT_5)
-        return 5;
-    else if (rand >= ENCOUNTER_CHANCE_LAND_MONS_SLOT_5 && rand < ENCOUNTER_CHANCE_LAND_MONS_SLOT_6)
+    if(rand >= 10 && rand < 20)
         return 6;
-    else if (rand >= ENCOUNTER_CHANCE_LAND_MONS_SLOT_6 && rand < ENCOUNTER_CHANCE_LAND_MONS_SLOT_7)
+    // slot 2 (20%)
+    if(rand >= 20 && rand < 30)
+        return 1;
+    if(rand >= 30 && rand < 40)
         return 7;
-    else if (rand >= ENCOUNTER_CHANCE_LAND_MONS_SLOT_7 && rand < ENCOUNTER_CHANCE_LAND_MONS_SLOT_8)
+    // slot 3 (20%)
+    if(rand >= 40 && rand < 50)
+        return 2;
+    if(rand >= 50 && rand < 60)
         return 8;
-    else if (rand >= ENCOUNTER_CHANCE_LAND_MONS_SLOT_8 && rand < ENCOUNTER_CHANCE_LAND_MONS_SLOT_9)
+    
+    // UNCOMMONS
+    // slot 4 (15%)
+    if(rand >= 60 && rand < 67)
+        return 3;
+    if(rand >= 67 && rand < 75)
         return 9;
-    else if (rand == ENCOUNTER_CHANCE_LAND_MONS_SLOT_9)
+    // slot 5 (15%)
+    if(rand >= 75 && rand < 82)
+        return 4;
+    if(rand >= 82 && rand < 90)
         return 10;
-    else
-        return 11;
+    
+    // RARE
+    // slot 6 (10%)
+    if(rand >= 90 && rand < 95)
+        return 5;
+    return 11;
+/*
+        if (rand < ENCOUNTER_CHANCE_LAND_MONS_SLOT_0)
+            return 0;
+        else if (rand >= ENCOUNTER_CHANCE_LAND_MONS_SLOT_0 && rand < ENCOUNTER_CHANCE_LAND_MONS_SLOT_1)
+            return 1;
+        else if (rand >= ENCOUNTER_CHANCE_LAND_MONS_SLOT_1 && rand < ENCOUNTER_CHANCE_LAND_MONS_SLOT_2)
+            return 2;
+        else if (rand >= ENCOUNTER_CHANCE_LAND_MONS_SLOT_2 && rand < ENCOUNTER_CHANCE_LAND_MONS_SLOT_3)
+            return 3;
+        else if (rand >= ENCOUNTER_CHANCE_LAND_MONS_SLOT_3 && rand < ENCOUNTER_CHANCE_LAND_MONS_SLOT_4)
+            return 4;
+        else if (rand >= ENCOUNTER_CHANCE_LAND_MONS_SLOT_4 && rand < ENCOUNTER_CHANCE_LAND_MONS_SLOT_5)
+            return 5;
+        else if (rand >= ENCOUNTER_CHANCE_LAND_MONS_SLOT_5 && rand < ENCOUNTER_CHANCE_LAND_MONS_SLOT_6)
+            return 6;
+        else if (rand >= ENCOUNTER_CHANCE_LAND_MONS_SLOT_6 && rand < ENCOUNTER_CHANCE_LAND_MONS_SLOT_7)
+            return 7;
+        else if (rand >= ENCOUNTER_CHANCE_LAND_MONS_SLOT_7 && rand < ENCOUNTER_CHANCE_LAND_MONS_SLOT_8)
+            return 8;
+        else if (rand >= ENCOUNTER_CHANCE_LAND_MONS_SLOT_8 && rand < ENCOUNTER_CHANCE_LAND_MONS_SLOT_9)
+            return 9;
+        else if (rand == ENCOUNTER_CHANCE_LAND_MONS_SLOT_9)
+            return 10;
+        else
+            return 11;
+*/
 }
 
 static u8 ChooseWildMonIndex_WaterRock(void)
 {
     u8 rand = Random() % ENCOUNTER_CHANCE_WATER_MONS_TOTAL;
 
-    if (rand < ENCOUNTER_CHANCE_WATER_MONS_SLOT_0)
-        return 0;
-    else if (rand >= ENCOUNTER_CHANCE_WATER_MONS_SLOT_0 && rand < ENCOUNTER_CHANCE_WATER_MONS_SLOT_1)
-        return 1;
-    else if (rand >= ENCOUNTER_CHANCE_WATER_MONS_SLOT_1 && rand < ENCOUNTER_CHANCE_WATER_MONS_SLOT_2)
-        return 2;
-    else if (rand >= ENCOUNTER_CHANCE_WATER_MONS_SLOT_2 && rand < ENCOUNTER_CHANCE_WATER_MONS_SLOT_3)
-        return 3;
-    else
-        return 4;
+    // 35/25/15/15/10 for new wild encounter table
+
+        // COMMONS
+        // slot 1 (35%)
+        if(rand < 35) // 35%
+            return 0;
+        // slot 2 (25%)
+        if(rand >= 35 && rand < 60) // 25%
+            return 1;
+
+        // UNCOMMONS
+        // slot 3 (15%)
+        if(rand >= 60 && rand < 75) // 15%
+            return 2;
+        // slot 4 (15%)
+        if(rand >= 75 && rand < 90) // 15%
+            return 3;
+    
+        // RARE
+        // slot 5 (10%)
+        return 4; // 10%
+/*
+        if (rand < ENCOUNTER_CHANCE_WATER_MONS_SLOT_0)
+            return 0;
+        else if (rand >= ENCOUNTER_CHANCE_WATER_MONS_SLOT_0 && rand < ENCOUNTER_CHANCE_WATER_MONS_SLOT_1)
+            return 1;
+        else if (rand >= ENCOUNTER_CHANCE_WATER_MONS_SLOT_1 && rand < ENCOUNTER_CHANCE_WATER_MONS_SLOT_2)
+            return 2;
+        else if (rand >= ENCOUNTER_CHANCE_WATER_MONS_SLOT_2 && rand < ENCOUNTER_CHANCE_WATER_MONS_SLOT_3)
+            return 3;
+        else
+            return 4;
+*/
 }
 
 static u8 ChooseWildMonIndex_Fishing(u8 rod)
@@ -190,36 +257,64 @@ static u8 ChooseWildMonIndex_Fishing(u8 rod)
     u8 rand = Random() % max(max(ENCOUNTER_CHANCE_FISHING_MONS_OLD_ROD_TOTAL, ENCOUNTER_CHANCE_FISHING_MONS_GOOD_ROD_TOTAL),
                              ENCOUNTER_CHANCE_FISHING_MONS_SUPER_ROD_TOTAL);
 
-    switch (rod)
-    {
-    case OLD_ROD:
-        if (rand < ENCOUNTER_CHANCE_FISHING_MONS_OLD_ROD_SLOT_0)
-            wildMonIndex = 0;
-        else
-            wildMonIndex = 1;
-        break;
-    case GOOD_ROD:
-        if (rand < ENCOUNTER_CHANCE_FISHING_MONS_GOOD_ROD_SLOT_2)
-            wildMonIndex = 2;
-        if (rand >= ENCOUNTER_CHANCE_FISHING_MONS_GOOD_ROD_SLOT_2 && rand < ENCOUNTER_CHANCE_FISHING_MONS_GOOD_ROD_SLOT_3)
-            wildMonIndex = 3;
-        if (rand >= ENCOUNTER_CHANCE_FISHING_MONS_GOOD_ROD_SLOT_3 && rand < ENCOUNTER_CHANCE_FISHING_MONS_GOOD_ROD_SLOT_4)
-            wildMonIndex = 4;
-        break;
-    case SUPER_ROD:
-        if (rand < ENCOUNTER_CHANCE_FISHING_MONS_SUPER_ROD_SLOT_5)
-            wildMonIndex = 5;
-        if (rand >= ENCOUNTER_CHANCE_FISHING_MONS_SUPER_ROD_SLOT_5 && rand < ENCOUNTER_CHANCE_FISHING_MONS_SUPER_ROD_SLOT_6)
-            wildMonIndex = 6;
-        if (rand >= ENCOUNTER_CHANCE_FISHING_MONS_SUPER_ROD_SLOT_6 && rand < ENCOUNTER_CHANCE_FISHING_MONS_SUPER_ROD_SLOT_7)
-            wildMonIndex = 7;
-        if (rand >= ENCOUNTER_CHANCE_FISHING_MONS_SUPER_ROD_SLOT_7 && rand < ENCOUNTER_CHANCE_FISHING_MONS_SUPER_ROD_SLOT_8)
-            wildMonIndex = 8;
-        if (rand == ENCOUNTER_CHANCE_FISHING_MONS_SUPER_ROD_SLOT_8)
-            wildMonIndex = 9;
-        break;
-    }
-    return wildMonIndex;
+    // 60/40 for new wild encounter table
+
+    // COMMONS
+    // slot 1 (60%)
+    if(rand < 12)
+        return 0;
+    if(rand >= 12 && rand < 24)
+        return 2;
+    if(rand >= 24 && rand < 36)
+        return 4;
+    if(rand >= 36 && rand < 48)
+        return 6;
+    if(rand >= 48 && rand < 60)
+        return 8;
+
+    // UNCOMMONS
+    // slot 2 (40%)
+    if(rand >= 60 && rand < 70)
+        return 1;
+    if(rand >= 70 && rand < 80)
+        return 3;
+    if(rand >= 80 && rand < 90)
+        return 5;
+    if(rand >= 90 && rand < 95)
+        return 7;
+    return 9;
+/*
+        switch (rod)
+        {
+        case OLD_ROD:
+            if (rand < ENCOUNTER_CHANCE_FISHING_MONS_OLD_ROD_SLOT_0)
+                wildMonIndex = 0;
+            else
+                wildMonIndex = 1;
+            break;
+        case GOOD_ROD:
+            if (rand < ENCOUNTER_CHANCE_FISHING_MONS_GOOD_ROD_SLOT_2)
+                wildMonIndex = 2;
+            if (rand >= ENCOUNTER_CHANCE_FISHING_MONS_GOOD_ROD_SLOT_2 && rand < ENCOUNTER_CHANCE_FISHING_MONS_GOOD_ROD_SLOT_3)
+                wildMonIndex = 3;
+            if (rand >= ENCOUNTER_CHANCE_FISHING_MONS_GOOD_ROD_SLOT_3 && rand < ENCOUNTER_CHANCE_FISHING_MONS_GOOD_ROD_SLOT_4)
+                wildMonIndex = 4;
+            break;
+        case SUPER_ROD:
+            if (rand < ENCOUNTER_CHANCE_FISHING_MONS_SUPER_ROD_SLOT_5)
+                wildMonIndex = 5;
+            if (rand >= ENCOUNTER_CHANCE_FISHING_MONS_SUPER_ROD_SLOT_5 && rand < ENCOUNTER_CHANCE_FISHING_MONS_SUPER_ROD_SLOT_6)
+                wildMonIndex = 6;
+            if (rand >= ENCOUNTER_CHANCE_FISHING_MONS_SUPER_ROD_SLOT_6 && rand < ENCOUNTER_CHANCE_FISHING_MONS_SUPER_ROD_SLOT_7)
+                wildMonIndex = 7;
+            if (rand >= ENCOUNTER_CHANCE_FISHING_MONS_SUPER_ROD_SLOT_7 && rand < ENCOUNTER_CHANCE_FISHING_MONS_SUPER_ROD_SLOT_8)
+                wildMonIndex = 8;
+            if (rand == ENCOUNTER_CHANCE_FISHING_MONS_SUPER_ROD_SLOT_8)
+                wildMonIndex = 9;
+            break;
+        }
+        return wildMonIndex;
+*/
 }
 
 static u8 ChooseWildMonLevel(const struct WildPokemon *wildPokemon)
@@ -383,6 +478,33 @@ enum
 #define WILD_CHECK_REPEL    0x1
 #define WILD_CHECK_KEEN_EYE 0x2
 
+u8 GetEvolutionBranchCount(u16 species)
+{
+    u8 i;
+
+    for(i = 0; (gEvolutionTable[species][i].targetSpecies != SPECIES_NONE && i < 5); i++)
+        ;
+
+    return i;
+}
+
+u16 GetRandomFinalEvolution(u16 species)
+{
+    // maybe this can be written as a for loop.
+    while(1)
+    {
+        u8 evoCount = GetEvolutionBranchCount(species);
+
+        if(evoCount == 0) // there are no further evolutions, so return the current one.
+            return species;
+            
+        if(CheckSpeedchoiceOption(GOOD_EARLY_WILDS, GOOD_STATIC) == TRUE)
+            SeedRng(gRandomizerCheckValue + species); // prevent samey pattern-ness
+
+        species = gEvolutionTable[species][Random() % evoCount].targetSpecies;
+    }
+}
+
 static bool8 TryGenerateWildMon(const struct WildPokemonInfo *wildMonInfo, u8 area, u8 flags)
 {
     u8 wildMonIndex = 0;
@@ -414,9 +536,18 @@ static bool8 TryGenerateWildMon(const struct WildPokemonInfo *wildMonInfo, u8 ar
         return FALSE;
     if (gMapHeader.mapLayoutId != LAYOUT_BATTLE_FRONTIER_BATTLE_PIKE_ROOM_WILD_MONS && flags & WILD_CHECK_KEEN_EYE && !IsAbilityAllowingEncounter(level))
         return FALSE;
+    else
+    {
+        u16 newSpecies;
 
-    CreateWildMon(wildMonInfo->wildPokemon[wildMonIndex].species, level);
-    return TRUE;
+        if(CheckSpeedchoiceOption(GOOD_EARLY_WILDS, GOOD_OFF) == FALSE && level < 10)
+            newSpecies = GetRandomFinalEvolution(wildMonInfo->wildPokemon[wildMonIndex].species);
+        else
+            newSpecies = wildMonInfo->wildPokemon[wildMonIndex].species;
+
+        CreateWildMon(newSpecies, level);
+        return TRUE;
+    }
 }
 
 static u16 GenerateFishingWildMon(const struct WildPokemonInfo *wildMonInfo, u8 rod)
@@ -510,6 +641,57 @@ static bool8 AreLegendariesInSootopolisPreventingEncounters(void)
     return FlagGet(FLAG_LEGENDARIES_IN_SOOTOPOLIS);
 }
 
+bool32 IsWildMonInCurrentMap(u16 species)
+{
+    u16 headerId = GetCurrentMapWildMonHeaderId();
+    if(headerId != 0xFFFF)
+    {
+        const struct WildPokemonInfo *landMonsInfo = gWildMonHeaders[headerId].landMonsInfo;
+        const struct WildPokemonInfo *waterMonsInfo = gWildMonHeaders[headerId].waterMonsInfo;
+        const struct WildPokemonInfo *rockSmashMonsInfo = gWildMonHeaders[headerId].rockSmashMonsInfo;
+        const struct WildPokemonInfo *fishingMonsInfo = gWildMonHeaders[headerId].fishingMonsInfo;
+        int i;
+
+        if(landMonsInfo && landMonsInfo->wildPokemon)
+        {
+            for(i = 0; i < LAND_WILD_COUNT; i++)
+            {
+                if (landMonsInfo->wildPokemon[i].species == species)
+                    return TRUE;
+            }
+        }
+        
+        if(waterMonsInfo && waterMonsInfo->wildPokemon)
+        {
+            for(i = 0; i < WATER_WILD_COUNT; i++)
+            {
+                if (waterMonsInfo->wildPokemon[i].species == species)
+                    return TRUE;
+            }
+        }
+        
+        if(rockSmashMonsInfo && rockSmashMonsInfo->wildPokemon)
+        {
+            for(i = 0; i < ROCK_WILD_COUNT; i++)
+            {
+                if (rockSmashMonsInfo->wildPokemon[i].species == species)
+                    return TRUE;
+            }
+        }
+        
+        if(fishingMonsInfo && fishingMonsInfo->wildPokemon)
+        {
+            for(i = 0; i < FISH_WILD_COUNT; i++)
+            {
+                if (fishingMonsInfo->wildPokemon[i].species == species)
+                    return TRUE;
+            }
+        }
+    }
+
+    return FALSE;
+};
+
 bool8 StandardWildEncounter(u16 currMetaTileBehavior, u16 previousMetaTileBehavior)
 {
     u16 headerId;
@@ -638,7 +820,7 @@ void RockSmashWildEncounter(void)
         {
             gSpecialVar_Result = FALSE;
         }
-        else if (DoWildEncounterRateTest(wildPokemonInfo->encounterRate, 1) == TRUE
+        else if (DoWildEncounterRateTest(180, 1) == TRUE
          && TryGenerateWildMon(wildPokemonInfo, 2, WILD_CHECK_REPEL | WILD_CHECK_KEEN_EYE) == TRUE)
         {
             BattleSetup_StartWildBattle();
diff --git a/sym_ewram.txt b/sym_ewram.txt
index 88c4461cb..f239fce13 100644
--- a/sym_ewram.txt
+++ b/sym_ewram.txt
@@ -148,3 +148,6 @@
 	.include "src/faraway_island.o"
 	.include "src/trainer_hill.o"
 	.include "src/rayquaza_scene.o"
+    .include "src/speedchoice.o"
+    .include "src/done_button.o"
+    .include "src/title_screen.o"
diff --git a/tools/inigen/.gitignore b/tools/inigen/.gitignore
new file mode 100644
index 000000000..96d45a263
--- /dev/null
+++ b/tools/inigen/.gitignore
@@ -0,0 +1,2 @@
+inigen
+inigen.exe
diff --git a/tools/inigen/Makefile b/tools/inigen/Makefile
new file mode 100644
index 000000000..3ec0671e5
--- /dev/null
+++ b/tools/inigen/Makefile
@@ -0,0 +1,28 @@
+CC := gcc
+CFLAGS := -g -Og -Wall -iquote ../../include
+SRCS := inigen.c elf.c util.c
+HEADERS := \
+	global.h \
+	elf.h \
+	util.h \
+	../../include/constants/global.h \
+    ../../include/constants/species.h \
+    ../../include/constants/trainers.h \
+    ../../include/constants/items.h \
+    ../../include/constants/abilities.h \
+    ../../include/constants/moves.h \
+    ../../include/constants/pokemon.h \
+    ../../include/constants/event_objects.h
+
+LDFLAGS := -lcapstone
+
+.PHONY: all clean
+
+all: inigen
+	@:
+
+inigen: $(SRCS) $(HEADERS)
+	$(CC) $(CFLAGS) $(SRCS) -o $@ $(LDFLAGS)
+
+clean:
+	$(RM) inigen inigen.exe
diff --git a/tools/inigen/README b/tools/inigen/README
new file mode 100644
index 000000000..80da46a02
--- /dev/null
+++ b/tools/inigen/README
@@ -0,0 +1,3 @@
+To run:
+
+    python inigen ELF-FILE OUTPUT-FILE --code GAME_CODE --name GAME_NAME
diff --git a/tools/inigen/elf-internal.h b/tools/inigen/elf-internal.h
new file mode 100644
index 000000000..79d3b974b
--- /dev/null
+++ b/tools/inigen/elf-internal.h
@@ -0,0 +1,3147 @@
+/*
+From musl include/elf.h
+
+Copyright © 2005-2014 Rich Felker, et al.
+
+Permission is hereby granted, free of charge, to any person obtaining
+a copy of this software and associated documentation files (the
+"Software"), to deal in the Software without restriction, including
+without limitation the rights to use, copy, modify, merge, publish,
+distribute, sublicense, and/or sell copies of the Software, and to
+permit persons to whom the Software is furnished to do so, subject to
+the following conditions:
+
+The above copyright notice and this permission notice shall be
+included in all copies or substantial portions of the Software.
+
+THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
+IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
+CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
+TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
+SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+*/
+
+#ifndef _ELF_H
+#define _ELF_H
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+#include <stdint.h>
+
+typedef uint16_t Elf32_Half;
+typedef uint16_t Elf64_Half;
+
+typedef uint32_t Elf32_Word;
+typedef	int32_t  Elf32_Sword;
+typedef uint32_t Elf64_Word;
+typedef	int32_t  Elf64_Sword;
+
+typedef uint64_t Elf32_Xword;
+typedef	int64_t  Elf32_Sxword;
+typedef uint64_t Elf64_Xword;
+typedef	int64_t  Elf64_Sxword;
+
+typedef uint32_t Elf32_Addr;
+typedef uint64_t Elf64_Addr;
+
+typedef uint32_t Elf32_Off;
+typedef uint64_t Elf64_Off;
+
+typedef uint16_t Elf32_Section;
+typedef uint16_t Elf64_Section;
+
+typedef Elf32_Half Elf32_Versym;
+typedef Elf64_Half Elf64_Versym;
+
+#define EI_NIDENT (16)
+
+typedef struct {
+  unsigned char	e_ident[EI_NIDENT];
+  Elf32_Half	e_type;
+  Elf32_Half	e_machine;
+  Elf32_Word	e_version;
+  Elf32_Addr	e_entry;
+  Elf32_Off	e_phoff;
+  Elf32_Off	e_shoff;
+  Elf32_Word	e_flags;
+  Elf32_Half	e_ehsize;
+  Elf32_Half	e_phentsize;
+  Elf32_Half	e_phnum;
+  Elf32_Half	e_shentsize;
+  Elf32_Half	e_shnum;
+  Elf32_Half	e_shstrndx;
+} Elf32_Ehdr;
+
+typedef struct {
+  unsigned char	e_ident[EI_NIDENT];
+  Elf64_Half	e_type;
+  Elf64_Half	e_machine;
+  Elf64_Word	e_version;
+  Elf64_Addr	e_entry;
+  Elf64_Off	e_phoff;
+  Elf64_Off	e_shoff;
+  Elf64_Word	e_flags;
+  Elf64_Half	e_ehsize;
+  Elf64_Half	e_phentsize;
+  Elf64_Half	e_phnum;
+  Elf64_Half	e_shentsize;
+  Elf64_Half	e_shnum;
+  Elf64_Half	e_shstrndx;
+} Elf64_Ehdr;
+
+#define EI_MAG0		0
+#define ELFMAG0		0x7f
+
+#define EI_MAG1		1
+#define ELFMAG1		'E'
+
+#define EI_MAG2		2
+#define ELFMAG2		'L'
+
+#define EI_MAG3		3
+#define ELFMAG3		'F'
+
+
+#define	ELFMAG		"\177ELF"
+#define	SELFMAG		4
+
+#define EI_CLASS	4
+#define ELFCLASSNONE	0
+#define ELFCLASS32	1
+#define ELFCLASS64	2
+#define ELFCLASSNUM	3
+
+#define EI_DATA		5
+#define ELFDATANONE	0
+#define ELFDATA2LSB	1
+#define ELFDATA2MSB	2
+#define ELFDATANUM	3
+
+#define EI_VERSION	6
+
+
+#define EI_OSABI	7
+#define ELFOSABI_NONE		0
+#define ELFOSABI_SYSV		0
+#define ELFOSABI_HPUX		1
+#define ELFOSABI_NETBSD		2
+#define ELFOSABI_LINUX		3
+#define ELFOSABI_GNU		3
+#define ELFOSABI_SOLARIS	6
+#define ELFOSABI_AIX		7
+#define ELFOSABI_IRIX		8
+#define ELFOSABI_FREEBSD	9
+#define ELFOSABI_TRU64		10
+#define ELFOSABI_MODESTO	11
+#define ELFOSABI_OPENBSD	12
+#define ELFOSABI_ARM		97
+#define ELFOSABI_STANDALONE	255
+
+#define EI_ABIVERSION	8
+
+#define EI_PAD		9
+
+
+
+#define ET_NONE		0
+#define ET_REL		1
+#define ET_EXEC		2
+#define ET_DYN		3
+#define ET_CORE		4
+#define	ET_NUM		5
+#define ET_LOOS		0xfe00
+#define ET_HIOS		0xfeff
+#define ET_LOPROC	0xff00
+#define ET_HIPROC	0xffff
+
+
+
+#define EM_NONE		 0
+#define EM_M32		 1
+#define EM_SPARC	 2
+#define EM_386		 3
+#define EM_68K		 4
+#define EM_88K		 5
+#define EM_860		 7
+#define EM_MIPS		 8
+#define EM_S370		 9
+#define EM_MIPS_RS3_LE	10
+
+#define EM_PARISC	15
+#define EM_VPP500	17
+#define EM_SPARC32PLUS	18
+#define EM_960		19
+#define EM_PPC		20
+#define EM_PPC64	21
+#define EM_S390		22
+
+#define EM_V800		36
+#define EM_FR20		37
+#define EM_RH32		38
+#define EM_RCE		39
+#define EM_ARM		40
+#define EM_FAKE_ALPHA	41
+#define EM_SH		42
+#define EM_SPARCV9	43
+#define EM_TRICORE	44
+#define EM_ARC		45
+#define EM_H8_300	46
+#define EM_H8_300H	47
+#define EM_H8S		48
+#define EM_H8_500	49
+#define EM_IA_64	50
+#define EM_MIPS_X	51
+#define EM_COLDFIRE	52
+#define EM_68HC12	53
+#define EM_MMA		54
+#define EM_PCP		55
+#define EM_NCPU		56
+#define EM_NDR1		57
+#define EM_STARCORE	58
+#define EM_ME16		59
+#define EM_ST100	60
+#define EM_TINYJ	61
+#define EM_X86_64	62
+#define EM_PDSP		63
+
+#define EM_FX66		66
+#define EM_ST9PLUS	67
+#define EM_ST7		68
+#define EM_68HC16	69
+#define EM_68HC11	70
+#define EM_68HC08	71
+#define EM_68HC05	72
+#define EM_SVX		73
+#define EM_ST19		74
+#define EM_VAX		75
+#define EM_CRIS		76
+#define EM_JAVELIN	77
+#define EM_FIREPATH	78
+#define EM_ZSP		79
+#define EM_MMIX		80
+#define EM_HUANY	81
+#define EM_PRISM	82
+#define EM_AVR		83
+#define EM_FR30		84
+#define EM_D10V		85
+#define EM_D30V		86
+#define EM_V850		87
+#define EM_M32R		88
+#define EM_MN10300	89
+#define EM_MN10200	90
+#define EM_PJ		91
+#define EM_OR1K		92
+#define EM_OPENRISC	92
+#define EM_ARC_A5	93
+#define EM_ARC_COMPACT	93
+#define EM_XTENSA	94
+#define EM_VIDEOCORE	95
+#define EM_TMM_GPP	96
+#define EM_NS32K	97
+#define EM_TPC		98
+#define EM_SNP1K	99
+#define EM_ST200	100
+#define EM_IP2K		101
+#define EM_MAX		102
+#define EM_CR		103
+#define EM_F2MC16	104
+#define EM_MSP430	105
+#define EM_BLACKFIN	106
+#define EM_SE_C33	107
+#define EM_SEP		108
+#define EM_ARCA		109
+#define EM_UNICORE	110
+#define EM_EXCESS	111
+#define EM_DXP		112
+#define EM_ALTERA_NIOS2 113
+#define EM_CRX		114
+#define EM_XGATE	115
+#define EM_C166		116
+#define EM_M16C		117
+#define EM_DSPIC30F	118
+#define EM_CE		119
+#define EM_M32C		120
+#define EM_TSK3000	131
+#define EM_RS08		132
+#define EM_SHARC	133
+#define EM_ECOG2	134
+#define EM_SCORE7	135
+#define EM_DSP24	136
+#define EM_VIDEOCORE3	137
+#define EM_LATTICEMICO32 138
+#define EM_SE_C17	139
+#define EM_TI_C6000	140
+#define EM_TI_C2000	141
+#define EM_TI_C5500	142
+#define EM_TI_ARP32	143
+#define EM_TI_PRU	144
+#define EM_MMDSP_PLUS	160
+#define EM_CYPRESS_M8C	161
+#define EM_R32C		162
+#define EM_TRIMEDIA	163
+#define EM_QDSP6	164
+#define EM_8051		165
+#define EM_STXP7X	166
+#define EM_NDS32	167
+#define EM_ECOG1X	168
+#define EM_MAXQ30	169
+#define EM_XIMO16	170
+#define EM_MANIK	171
+#define EM_CRAYNV2	172
+#define EM_RX		173
+#define EM_METAG	174
+#define EM_MCST_ELBRUS	175
+#define EM_ECOG16	176
+#define EM_CR16		177
+#define EM_ETPU		178
+#define EM_SLE9X	179
+#define EM_L10M		180
+#define EM_K10M		181
+#define EM_AARCH64	183
+#define EM_AVR32	185
+#define EM_STM8		186
+#define EM_TILE64	187
+#define EM_TILEPRO	188
+#define EM_MICROBLAZE	189
+#define EM_CUDA		190
+#define EM_TILEGX	191
+#define EM_CLOUDSHIELD	192
+#define EM_COREA_1ST	193
+#define EM_COREA_2ND	194
+#define EM_ARC_COMPACT2	195
+#define EM_OPEN8	196
+#define EM_RL78		197
+#define EM_VIDEOCORE5	198
+#define EM_78KOR	199
+#define EM_56800EX	200
+#define EM_BA1		201
+#define EM_BA2		202
+#define EM_XCORE	203
+#define EM_MCHP_PIC	204
+#define EM_KM32		210
+#define EM_KMX32	211
+#define EM_EMX16	212
+#define EM_EMX8		213
+#define EM_KVARC	214
+#define EM_CDP		215
+#define EM_COGE		216
+#define EM_COOL		217
+#define EM_NORC		218
+#define EM_CSR_KALIMBA	219
+#define EM_Z80		220
+#define EM_VISIUM	221
+#define EM_FT32		222
+#define EM_MOXIE	223
+#define EM_AMDGPU	224
+#define EM_RISCV	243
+#define EM_BPF		247
+#define EM_NUM		248
+
+#define EM_ALPHA	0x9026
+
+#define EV_NONE		0
+#define EV_CURRENT	1
+#define EV_NUM		2
+
+typedef struct {
+  Elf32_Word	sh_name;
+  Elf32_Word	sh_type;
+  Elf32_Word	sh_flags;
+  Elf32_Addr	sh_addr;
+  Elf32_Off	sh_offset;
+  Elf32_Word	sh_size;
+  Elf32_Word	sh_link;
+  Elf32_Word	sh_info;
+  Elf32_Word	sh_addralign;
+  Elf32_Word	sh_entsize;
+} Elf32_Shdr;
+
+typedef struct {
+  Elf64_Word	sh_name;
+  Elf64_Word	sh_type;
+  Elf64_Xword	sh_flags;
+  Elf64_Addr	sh_addr;
+  Elf64_Off	sh_offset;
+  Elf64_Xword	sh_size;
+  Elf64_Word	sh_link;
+  Elf64_Word	sh_info;
+  Elf64_Xword	sh_addralign;
+  Elf64_Xword	sh_entsize;
+} Elf64_Shdr;
+
+
+
+#define SHN_UNDEF	0
+#define SHN_LORESERVE	0xff00
+#define SHN_LOPROC	0xff00
+#define SHN_BEFORE	0xff00
+
+#define SHN_AFTER	0xff01
+
+#define SHN_HIPROC	0xff1f
+#define SHN_LOOS	0xff20
+#define SHN_HIOS	0xff3f
+#define SHN_ABS		0xfff1
+#define SHN_COMMON	0xfff2
+#define SHN_XINDEX	0xffff
+#define SHN_HIRESERVE	0xffff
+
+
+
+#define SHT_NULL	  0
+#define SHT_PROGBITS	  1
+#define SHT_SYMTAB	  2
+#define SHT_STRTAB	  3
+#define SHT_RELA	  4
+#define SHT_HASH	  5
+#define SHT_DYNAMIC	  6
+#define SHT_NOTE	  7
+#define SHT_NOBITS	  8
+#define SHT_REL		  9
+#define SHT_SHLIB	  10
+#define SHT_DYNSYM	  11
+#define SHT_INIT_ARRAY	  14
+#define SHT_FINI_ARRAY	  15
+#define SHT_PREINIT_ARRAY 16
+#define SHT_GROUP	  17
+#define SHT_SYMTAB_SHNDX  18
+#define	SHT_NUM		  19
+#define SHT_LOOS	  0x60000000
+#define SHT_GNU_ATTRIBUTES 0x6ffffff5
+#define SHT_GNU_HASH	  0x6ffffff6
+#define SHT_GNU_LIBLIST	  0x6ffffff7
+#define SHT_CHECKSUM	  0x6ffffff8
+#define SHT_LOSUNW	  0x6ffffffa
+#define SHT_SUNW_move	  0x6ffffffa
+#define SHT_SUNW_COMDAT   0x6ffffffb
+#define SHT_SUNW_syminfo  0x6ffffffc
+#define SHT_GNU_verdef	  0x6ffffffd
+#define SHT_GNU_verneed	  0x6ffffffe
+#define SHT_GNU_versym	  0x6fffffff
+#define SHT_HISUNW	  0x6fffffff
+#define SHT_HIOS	  0x6fffffff
+#define SHT_LOPROC	  0x70000000
+#define SHT_HIPROC	  0x7fffffff
+#define SHT_LOUSER	  0x80000000
+#define SHT_HIUSER	  0x8fffffff
+
+#define SHF_WRITE	     (1 << 0)
+#define SHF_ALLOC	     (1 << 1)
+#define SHF_EXECINSTR	     (1 << 2)
+#define SHF_MERGE	     (1 << 4)
+#define SHF_STRINGS	     (1 << 5)
+#define SHF_INFO_LINK	     (1 << 6)
+#define SHF_LINK_ORDER	     (1 << 7)
+#define SHF_OS_NONCONFORMING (1 << 8)
+
+#define SHF_GROUP	     (1 << 9)
+#define SHF_TLS		     (1 << 10)
+#define SHF_COMPRESSED	     (1 << 11)
+#define SHF_MASKOS	     0x0ff00000
+#define SHF_MASKPROC	     0xf0000000
+#define SHF_ORDERED	     (1 << 30)
+#define SHF_EXCLUDE	     (1U << 31)
+
+typedef struct {
+  Elf32_Word	ch_type;
+  Elf32_Word	ch_size;
+  Elf32_Word	ch_addralign;
+} Elf32_Chdr;
+
+typedef struct {
+  Elf64_Word	ch_type;
+  Elf64_Word	ch_reserved;
+  Elf64_Xword	ch_size;
+  Elf64_Xword	ch_addralign;
+} Elf64_Chdr;
+
+#define ELFCOMPRESS_ZLIB	1
+#define ELFCOMPRESS_LOOS	0x60000000
+#define ELFCOMPRESS_HIOS	0x6fffffff
+#define ELFCOMPRESS_LOPROC	0x70000000
+#define ELFCOMPRESS_HIPROC	0x7fffffff
+
+
+#define GRP_COMDAT	0x1
+
+typedef struct {
+  Elf32_Word	st_name;
+  Elf32_Addr	st_value;
+  Elf32_Word	st_size;
+  unsigned char	st_info;
+  unsigned char	st_other;
+  Elf32_Section	st_shndx;
+} Elf32_Sym;
+
+typedef struct {
+  Elf64_Word	st_name;
+  unsigned char	st_info;
+  unsigned char st_other;
+  Elf64_Section	st_shndx;
+  Elf64_Addr	st_value;
+  Elf64_Xword	st_size;
+} Elf64_Sym;
+
+typedef struct {
+  Elf32_Half si_boundto;
+  Elf32_Half si_flags;
+} Elf32_Syminfo;
+
+typedef struct {
+  Elf64_Half si_boundto;
+  Elf64_Half si_flags;
+} Elf64_Syminfo;
+
+#define SYMINFO_BT_SELF		0xffff
+#define SYMINFO_BT_PARENT	0xfffe
+#define SYMINFO_BT_LOWRESERVE	0xff00
+
+#define SYMINFO_FLG_DIRECT	0x0001
+#define SYMINFO_FLG_PASSTHRU	0x0002
+#define SYMINFO_FLG_COPY	0x0004
+#define SYMINFO_FLG_LAZYLOAD	0x0008
+
+#define SYMINFO_NONE		0
+#define SYMINFO_CURRENT		1
+#define SYMINFO_NUM		2
+
+#define ELF32_ST_BIND(val)		(((unsigned char) (val)) >> 4)
+#define ELF32_ST_TYPE(val)		((val) & 0xf)
+#define ELF32_ST_INFO(bind, type)	(((bind) << 4) + ((type) & 0xf))
+
+#define ELF64_ST_BIND(val)		ELF32_ST_BIND (val)
+#define ELF64_ST_TYPE(val)		ELF32_ST_TYPE (val)
+#define ELF64_ST_INFO(bind, type)	ELF32_ST_INFO ((bind), (type))
+
+#define STB_LOCAL	0
+#define STB_GLOBAL	1
+#define STB_WEAK	2
+#define	STB_NUM		3
+#define STB_LOOS	10
+#define STB_GNU_UNIQUE	10
+#define STB_HIOS	12
+#define STB_LOPROC	13
+#define STB_HIPROC	15
+
+#define STT_NOTYPE	0
+#define STT_OBJECT	1
+#define STT_FUNC	2
+#define STT_SECTION	3
+#define STT_FILE	4
+#define STT_COMMON	5
+#define STT_TLS		6
+#define	STT_NUM		7
+#define STT_LOOS	10
+#define STT_GNU_IFUNC	10
+#define STT_HIOS	12
+#define STT_LOPROC	13
+#define STT_HIPROC	15
+
+#define STN_UNDEF	0
+
+#define ELF32_ST_VISIBILITY(o)	((o) & 0x03)
+#define ELF64_ST_VISIBILITY(o)	ELF32_ST_VISIBILITY (o)
+
+#define STV_DEFAULT	0
+#define STV_INTERNAL	1
+#define STV_HIDDEN	2
+#define STV_PROTECTED	3
+
+
+
+
+typedef struct {
+  Elf32_Addr	r_offset;
+  Elf32_Word	r_info;
+} Elf32_Rel;
+
+typedef struct {
+  Elf64_Addr	r_offset;
+  Elf64_Xword	r_info;
+} Elf64_Rel;
+
+
+
+typedef struct {
+  Elf32_Addr	r_offset;
+  Elf32_Word	r_info;
+  Elf32_Sword	r_addend;
+} Elf32_Rela;
+
+typedef struct {
+  Elf64_Addr	r_offset;
+  Elf64_Xword	r_info;
+  Elf64_Sxword	r_addend;
+} Elf64_Rela;
+
+
+
+#define ELF32_R_SYM(val)		((val) >> 8)
+#define ELF32_R_TYPE(val)		((val) & 0xff)
+#define ELF32_R_INFO(sym, type)		(((sym) << 8) + ((type) & 0xff))
+
+#define ELF64_R_SYM(i)			((i) >> 32)
+#define ELF64_R_TYPE(i)			((i) & 0xffffffff)
+#define ELF64_R_INFO(sym,type)		((((Elf64_Xword) (sym)) << 32) + (type))
+
+
+
+typedef struct {
+  Elf32_Word	p_type;
+  Elf32_Off	p_offset;
+  Elf32_Addr	p_vaddr;
+  Elf32_Addr	p_paddr;
+  Elf32_Word	p_filesz;
+  Elf32_Word	p_memsz;
+  Elf32_Word	p_flags;
+  Elf32_Word	p_align;
+} Elf32_Phdr;
+
+typedef struct {
+  Elf64_Word	p_type;
+  Elf64_Word	p_flags;
+  Elf64_Off	p_offset;
+  Elf64_Addr	p_vaddr;
+  Elf64_Addr	p_paddr;
+  Elf64_Xword	p_filesz;
+  Elf64_Xword	p_memsz;
+  Elf64_Xword	p_align;
+} Elf64_Phdr;
+
+
+
+#define	PT_NULL		0
+#define PT_LOAD		1
+#define PT_DYNAMIC	2
+#define PT_INTERP	3
+#define PT_NOTE		4
+#define PT_SHLIB	5
+#define PT_PHDR		6
+#define PT_TLS		7
+#define	PT_NUM		8
+#define PT_LOOS		0x60000000
+#define PT_GNU_EH_FRAME	0x6474e550
+#define PT_GNU_STACK	0x6474e551
+#define PT_GNU_RELRO	0x6474e552
+#define PT_LOSUNW	0x6ffffffa
+#define PT_SUNWBSS	0x6ffffffa
+#define PT_SUNWSTACK	0x6ffffffb
+#define PT_HISUNW	0x6fffffff
+#define PT_HIOS		0x6fffffff
+#define PT_LOPROC	0x70000000
+#define PT_HIPROC	0x7fffffff
+
+
+#define PN_XNUM 0xffff
+
+
+#define PF_X		(1 << 0)
+#define PF_W		(1 << 1)
+#define PF_R		(1 << 2)
+#define PF_MASKOS	0x0ff00000
+#define PF_MASKPROC	0xf0000000
+
+
+
+#define NT_PRSTATUS	1
+#define NT_FPREGSET	2
+#define NT_PRPSINFO	3
+#define NT_PRXREG	4
+#define NT_TASKSTRUCT	4
+#define NT_PLATFORM	5
+#define NT_AUXV		6
+#define NT_GWINDOWS	7
+#define NT_ASRS		8
+#define NT_PSTATUS	10
+#define NT_PSINFO	13
+#define NT_PRCRED	14
+#define NT_UTSNAME	15
+#define NT_LWPSTATUS	16
+#define NT_LWPSINFO	17
+#define NT_PRFPXREG	20
+#define NT_SIGINFO	0x53494749
+#define NT_FILE		0x46494c45
+#define NT_PRXFPREG	0x46e62b7f
+#define NT_PPC_VMX	0x100
+#define NT_PPC_SPE	0x101
+#define NT_PPC_VSX	0x102
+#define NT_386_TLS	0x200
+#define NT_386_IOPERM	0x201
+#define NT_X86_XSTATE	0x202
+#define NT_S390_HIGH_GPRS	0x300
+#define NT_S390_TIMER	0x301
+#define NT_S390_TODCMP	0x302
+#define NT_S390_TODPREG	0x303
+#define NT_S390_CTRS	0x304
+#define NT_S390_PREFIX	0x305
+#define NT_S390_LAST_BREAK	0x306
+#define NT_S390_SYSTEM_CALL	0x307
+#define NT_S390_TDB	0x308
+#define NT_ARM_VFP	0x400
+#define NT_ARM_TLS	0x401
+#define NT_ARM_HW_BREAK	0x402
+#define NT_ARM_HW_WATCH	0x403
+#define NT_ARM_SYSTEM_CALL	0x404
+#define NT_ARM_SVE	0x405
+#define NT_METAG_CBUF	0x500
+#define NT_METAG_RPIPE	0x501
+#define NT_METAG_TLS	0x502
+#define NT_VERSION	1
+
+
+
+
+typedef struct {
+  Elf32_Sword d_tag;
+  union {
+      Elf32_Word d_val;
+      Elf32_Addr d_ptr;
+  } d_un;
+} Elf32_Dyn;
+
+typedef struct {
+  Elf64_Sxword d_tag;
+  union {
+      Elf64_Xword d_val;
+      Elf64_Addr d_ptr;
+  } d_un;
+} Elf64_Dyn;
+
+
+
+#define DT_NULL		0
+#define DT_NEEDED	1
+#define DT_PLTRELSZ	2
+#define DT_PLTGOT	3
+#define DT_HASH		4
+#define DT_STRTAB	5
+#define DT_SYMTAB	6
+#define DT_RELA		7
+#define DT_RELASZ	8
+#define DT_RELAENT	9
+#define DT_STRSZ	10
+#define DT_SYMENT	11
+#define DT_INIT		12
+#define DT_FINI		13
+#define DT_SONAME	14
+#define DT_RPATH	15
+#define DT_SYMBOLIC	16
+#define DT_REL		17
+#define DT_RELSZ	18
+#define DT_RELENT	19
+#define DT_PLTREL	20
+#define DT_DEBUG	21
+#define DT_TEXTREL	22
+#define DT_JMPREL	23
+#define	DT_BIND_NOW	24
+#define	DT_INIT_ARRAY	25
+#define	DT_FINI_ARRAY	26
+#define	DT_INIT_ARRAYSZ	27
+#define	DT_FINI_ARRAYSZ	28
+#define DT_RUNPATH	29
+#define DT_FLAGS	30
+#define DT_ENCODING	32
+#define DT_PREINIT_ARRAY 32
+#define DT_PREINIT_ARRAYSZ 33
+#define	DT_NUM		34
+#define DT_LOOS		0x6000000d
+#define DT_HIOS		0x6ffff000
+#define DT_LOPROC	0x70000000
+#define DT_HIPROC	0x7fffffff
+#define	DT_PROCNUM	DT_MIPS_NUM
+
+#define DT_VALRNGLO	0x6ffffd00
+#define DT_GNU_PRELINKED 0x6ffffdf5
+#define DT_GNU_CONFLICTSZ 0x6ffffdf6
+#define DT_GNU_LIBLISTSZ 0x6ffffdf7
+#define DT_CHECKSUM	0x6ffffdf8
+#define DT_PLTPADSZ	0x6ffffdf9
+#define DT_MOVEENT	0x6ffffdfa
+#define DT_MOVESZ	0x6ffffdfb
+#define DT_FEATURE_1	0x6ffffdfc
+#define DT_POSFLAG_1	0x6ffffdfd
+
+#define DT_SYMINSZ	0x6ffffdfe
+#define DT_SYMINENT	0x6ffffdff
+#define DT_VALRNGHI	0x6ffffdff
+#define DT_VALTAGIDX(tag)	(DT_VALRNGHI - (tag))
+#define DT_VALNUM 12
+
+#define DT_ADDRRNGLO	0x6ffffe00
+#define DT_GNU_HASH	0x6ffffef5
+#define DT_TLSDESC_PLT	0x6ffffef6
+#define DT_TLSDESC_GOT	0x6ffffef7
+#define DT_GNU_CONFLICT	0x6ffffef8
+#define DT_GNU_LIBLIST	0x6ffffef9
+#define DT_CONFIG	0x6ffffefa
+#define DT_DEPAUDIT	0x6ffffefb
+#define DT_AUDIT	0x6ffffefc
+#define	DT_PLTPAD	0x6ffffefd
+#define	DT_MOVETAB	0x6ffffefe
+#define DT_SYMINFO	0x6ffffeff
+#define DT_ADDRRNGHI	0x6ffffeff
+#define DT_ADDRTAGIDX(tag)	(DT_ADDRRNGHI - (tag))
+#define DT_ADDRNUM 11
+
+
+
+#define DT_VERSYM	0x6ffffff0
+
+#define DT_RELACOUNT	0x6ffffff9
+#define DT_RELCOUNT	0x6ffffffa
+
+
+#define DT_FLAGS_1	0x6ffffffb
+#define	DT_VERDEF	0x6ffffffc
+
+#define	DT_VERDEFNUM	0x6ffffffd
+#define	DT_VERNEED	0x6ffffffe
+
+#define	DT_VERNEEDNUM	0x6fffffff
+#define DT_VERSIONTAGIDX(tag)	(DT_VERNEEDNUM - (tag))
+#define DT_VERSIONTAGNUM 16
+
+
+
+#define DT_AUXILIARY    0x7ffffffd
+#define DT_FILTER       0x7fffffff
+#define DT_EXTRATAGIDX(tag)	((Elf32_Word)-((Elf32_Sword) (tag) <<1>>1)-1)
+#define DT_EXTRANUM	3
+
+
+#define DF_ORIGIN	0x00000001
+#define DF_SYMBOLIC	0x00000002
+#define DF_TEXTREL	0x00000004
+#define DF_BIND_NOW	0x00000008
+#define DF_STATIC_TLS	0x00000010
+
+
+
+#define DF_1_NOW	0x00000001
+#define DF_1_GLOBAL	0x00000002
+#define DF_1_GROUP	0x00000004
+#define DF_1_NODELETE	0x00000008
+#define DF_1_LOADFLTR	0x00000010
+#define DF_1_INITFIRST	0x00000020
+#define DF_1_NOOPEN	0x00000040
+#define DF_1_ORIGIN	0x00000080
+#define DF_1_DIRECT	0x00000100
+#define DF_1_TRANS	0x00000200
+#define DF_1_INTERPOSE	0x00000400
+#define DF_1_NODEFLIB	0x00000800
+#define DF_1_NODUMP	0x00001000
+#define DF_1_CONFALT	0x00002000
+#define DF_1_ENDFILTEE	0x00004000
+#define	DF_1_DISPRELDNE	0x00008000
+#define	DF_1_DISPRELPND	0x00010000
+#define	DF_1_NODIRECT	0x00020000
+#define	DF_1_IGNMULDEF	0x00040000
+#define	DF_1_NOKSYMS	0x00080000
+#define	DF_1_NOHDR	0x00100000
+#define	DF_1_EDITED	0x00200000
+#define	DF_1_NORELOC	0x00400000
+#define	DF_1_SYMINTPOSE	0x00800000
+#define	DF_1_GLOBAUDIT	0x01000000
+#define	DF_1_SINGLETON	0x02000000
+
+#define DTF_1_PARINIT	0x00000001
+#define DTF_1_CONFEXP	0x00000002
+
+
+#define DF_P1_LAZYLOAD	0x00000001
+#define DF_P1_GROUPPERM	0x00000002
+
+
+
+
+typedef struct {
+  Elf32_Half	vd_version;
+  Elf32_Half	vd_flags;
+  Elf32_Half	vd_ndx;
+  Elf32_Half	vd_cnt;
+  Elf32_Word	vd_hash;
+  Elf32_Word	vd_aux;
+  Elf32_Word	vd_next;
+} Elf32_Verdef;
+
+typedef struct {
+  Elf64_Half	vd_version;
+  Elf64_Half	vd_flags;
+  Elf64_Half	vd_ndx;
+  Elf64_Half	vd_cnt;
+  Elf64_Word	vd_hash;
+  Elf64_Word	vd_aux;
+  Elf64_Word	vd_next;
+} Elf64_Verdef;
+
+
+
+#define VER_DEF_NONE	0
+#define VER_DEF_CURRENT	1
+#define VER_DEF_NUM	2
+
+
+#define VER_FLG_BASE	0x1
+#define VER_FLG_WEAK	0x2
+
+
+#define	VER_NDX_LOCAL		0
+#define	VER_NDX_GLOBAL		1
+#define	VER_NDX_LORESERVE	0xff00
+#define	VER_NDX_ELIMINATE	0xff01
+
+
+
+typedef struct {
+  Elf32_Word	vda_name;
+  Elf32_Word	vda_next;
+} Elf32_Verdaux;
+
+typedef struct {
+  Elf64_Word	vda_name;
+  Elf64_Word	vda_next;
+} Elf64_Verdaux;
+
+
+
+
+typedef struct {
+  Elf32_Half	vn_version;
+  Elf32_Half	vn_cnt;
+  Elf32_Word	vn_file;
+  Elf32_Word	vn_aux;
+  Elf32_Word	vn_next;
+} Elf32_Verneed;
+
+typedef struct {
+  Elf64_Half	vn_version;
+  Elf64_Half	vn_cnt;
+  Elf64_Word	vn_file;
+  Elf64_Word	vn_aux;
+  Elf64_Word	vn_next;
+} Elf64_Verneed;
+
+
+
+#define VER_NEED_NONE	 0
+#define VER_NEED_CURRENT 1
+#define VER_NEED_NUM	 2
+
+
+
+typedef struct {
+  Elf32_Word	vna_hash;
+  Elf32_Half	vna_flags;
+  Elf32_Half	vna_other;
+  Elf32_Word	vna_name;
+  Elf32_Word	vna_next;
+} Elf32_Vernaux;
+
+typedef struct {
+  Elf64_Word	vna_hash;
+  Elf64_Half	vna_flags;
+  Elf64_Half	vna_other;
+  Elf64_Word	vna_name;
+  Elf64_Word	vna_next;
+} Elf64_Vernaux;
+
+
+
+#define VER_FLG_WEAK	0x2
+
+
+
+typedef struct {
+  uint32_t a_type;
+  union {
+      uint32_t a_val;
+  } a_un;
+} Elf32_auxv_t;
+
+typedef struct {
+  uint64_t a_type;
+  union {
+      uint64_t a_val;
+  } a_un;
+} Elf64_auxv_t;
+
+
+
+#define AT_NULL		0
+#define AT_IGNORE	1
+#define AT_EXECFD	2
+#define AT_PHDR		3
+#define AT_PHENT	4
+#define AT_PHNUM	5
+#define AT_PAGESZ	6
+#define AT_BASE		7
+#define AT_FLAGS	8
+#define AT_ENTRY	9
+#define AT_NOTELF	10
+#define AT_UID		11
+#define AT_EUID		12
+#define AT_GID		13
+#define AT_EGID		14
+#define AT_CLKTCK	17
+
+
+#define AT_PLATFORM	15
+#define AT_HWCAP	16
+
+
+
+
+#define AT_FPUCW	18
+
+
+#define AT_DCACHEBSIZE	19
+#define AT_ICACHEBSIZE	20
+#define AT_UCACHEBSIZE	21
+
+
+
+#define AT_IGNOREPPC	22
+
+#define	AT_SECURE	23
+
+#define AT_BASE_PLATFORM 24
+
+#define AT_RANDOM	25
+
+#define AT_HWCAP2	26
+
+#define AT_EXECFN	31
+
+
+
+#define AT_SYSINFO	32
+#define AT_SYSINFO_EHDR	33
+
+
+
+#define AT_L1I_CACHESHAPE	34
+#define AT_L1D_CACHESHAPE	35
+#define AT_L2_CACHESHAPE	36
+#define AT_L3_CACHESHAPE	37
+
+
+
+
+typedef struct {
+  Elf32_Word n_namesz;
+  Elf32_Word n_descsz;
+  Elf32_Word n_type;
+} Elf32_Nhdr;
+
+typedef struct {
+  Elf64_Word n_namesz;
+  Elf64_Word n_descsz;
+  Elf64_Word n_type;
+} Elf64_Nhdr;
+
+
+
+
+#define ELF_NOTE_SOLARIS	"SUNW Solaris"
+
+
+#define ELF_NOTE_GNU		"GNU"
+
+
+
+
+
+#define ELF_NOTE_PAGESIZE_HINT	1
+
+
+#define NT_GNU_ABI_TAG	1
+#define ELF_NOTE_ABI	NT_GNU_ABI_TAG
+
+
+
+#define ELF_NOTE_OS_LINUX	0
+#define ELF_NOTE_OS_GNU		1
+#define ELF_NOTE_OS_SOLARIS2	2
+#define ELF_NOTE_OS_FREEBSD	3
+
+#define NT_GNU_BUILD_ID	3
+#define NT_GNU_GOLD_VERSION	4
+
+
+
+typedef struct {
+  Elf32_Xword m_value;
+  Elf32_Word m_info;
+  Elf32_Word m_poffset;
+  Elf32_Half m_repeat;
+  Elf32_Half m_stride;
+} Elf32_Move;
+
+typedef struct {
+  Elf64_Xword m_value;
+  Elf64_Xword m_info;
+  Elf64_Xword m_poffset;
+  Elf64_Half m_repeat;
+  Elf64_Half m_stride;
+} Elf64_Move;
+
+
+#define ELF32_M_SYM(info)	((info) >> 8)
+#define ELF32_M_SIZE(info)	((unsigned char) (info))
+#define ELF32_M_INFO(sym, size)	(((sym) << 8) + (unsigned char) (size))
+
+#define ELF64_M_SYM(info)	ELF32_M_SYM (info)
+#define ELF64_M_SIZE(info)	ELF32_M_SIZE (info)
+#define ELF64_M_INFO(sym, size)	ELF32_M_INFO (sym, size)
+
+#define EF_CPU32	0x00810000
+
+#define R_68K_NONE	0
+#define R_68K_32	1
+#define R_68K_16	2
+#define R_68K_8		3
+#define R_68K_PC32	4
+#define R_68K_PC16	5
+#define R_68K_PC8	6
+#define R_68K_GOT32	7
+#define R_68K_GOT16	8
+#define R_68K_GOT8	9
+#define R_68K_GOT32O	10
+#define R_68K_GOT16O	11
+#define R_68K_GOT8O	12
+#define R_68K_PLT32	13
+#define R_68K_PLT16	14
+#define R_68K_PLT8	15
+#define R_68K_PLT32O	16
+#define R_68K_PLT16O	17
+#define R_68K_PLT8O	18
+#define R_68K_COPY	19
+#define R_68K_GLOB_DAT	20
+#define R_68K_JMP_SLOT	21
+#define R_68K_RELATIVE	22
+#define R_68K_NUM	23
+
+#define R_386_NONE	   0
+#define R_386_32	   1
+#define R_386_PC32	   2
+#define R_386_GOT32	   3
+#define R_386_PLT32	   4
+#define R_386_COPY	   5
+#define R_386_GLOB_DAT	   6
+#define R_386_JMP_SLOT	   7
+#define R_386_RELATIVE	   8
+#define R_386_GOTOFF	   9
+#define R_386_GOTPC	   10
+#define R_386_32PLT	   11
+#define R_386_TLS_TPOFF	   14
+#define R_386_TLS_IE	   15
+#define R_386_TLS_GOTIE	   16
+#define R_386_TLS_LE	   17
+#define R_386_TLS_GD	   18
+#define R_386_TLS_LDM	   19
+#define R_386_16	   20
+#define R_386_PC16	   21
+#define R_386_8		   22
+#define R_386_PC8	   23
+#define R_386_TLS_GD_32	   24
+#define R_386_TLS_GD_PUSH  25
+#define R_386_TLS_GD_CALL  26
+#define R_386_TLS_GD_POP   27
+#define R_386_TLS_LDM_32   28
+#define R_386_TLS_LDM_PUSH 29
+#define R_386_TLS_LDM_CALL 30
+#define R_386_TLS_LDM_POP  31
+#define R_386_TLS_LDO_32   32
+#define R_386_TLS_IE_32	   33
+#define R_386_TLS_LE_32	   34
+#define R_386_TLS_DTPMOD32 35
+#define R_386_TLS_DTPOFF32 36
+#define R_386_TLS_TPOFF32  37
+#define R_386_SIZE32       38
+#define R_386_TLS_GOTDESC  39
+#define R_386_TLS_DESC_CALL 40
+#define R_386_TLS_DESC     41
+#define R_386_IRELATIVE	   42
+#define R_386_GOT32X	   43
+#define R_386_NUM	   44
+
+
+
+
+
+#define STT_SPARC_REGISTER	13
+
+
+
+#define EF_SPARCV9_MM		3
+#define EF_SPARCV9_TSO		0
+#define EF_SPARCV9_PSO		1
+#define EF_SPARCV9_RMO		2
+#define EF_SPARC_LEDATA		0x800000
+#define EF_SPARC_EXT_MASK	0xFFFF00
+#define EF_SPARC_32PLUS		0x000100
+#define EF_SPARC_SUN_US1	0x000200
+#define EF_SPARC_HAL_R1		0x000400
+#define EF_SPARC_SUN_US3	0x000800
+
+
+
+#define R_SPARC_NONE		0
+#define R_SPARC_8		1
+#define R_SPARC_16		2
+#define R_SPARC_32		3
+#define R_SPARC_DISP8		4
+#define R_SPARC_DISP16		5
+#define R_SPARC_DISP32		6
+#define R_SPARC_WDISP30		7
+#define R_SPARC_WDISP22		8
+#define R_SPARC_HI22		9
+#define R_SPARC_22		10
+#define R_SPARC_13		11
+#define R_SPARC_LO10		12
+#define R_SPARC_GOT10		13
+#define R_SPARC_GOT13		14
+#define R_SPARC_GOT22		15
+#define R_SPARC_PC10		16
+#define R_SPARC_PC22		17
+#define R_SPARC_WPLT30		18
+#define R_SPARC_COPY		19
+#define R_SPARC_GLOB_DAT	20
+#define R_SPARC_JMP_SLOT	21
+#define R_SPARC_RELATIVE	22
+#define R_SPARC_UA32		23
+
+
+
+#define R_SPARC_PLT32		24
+#define R_SPARC_HIPLT22		25
+#define R_SPARC_LOPLT10		26
+#define R_SPARC_PCPLT32		27
+#define R_SPARC_PCPLT22		28
+#define R_SPARC_PCPLT10		29
+#define R_SPARC_10		30
+#define R_SPARC_11		31
+#define R_SPARC_64		32
+#define R_SPARC_OLO10		33
+#define R_SPARC_HH22		34
+#define R_SPARC_HM10		35
+#define R_SPARC_LM22		36
+#define R_SPARC_PC_HH22		37
+#define R_SPARC_PC_HM10		38
+#define R_SPARC_PC_LM22		39
+#define R_SPARC_WDISP16		40
+#define R_SPARC_WDISP19		41
+#define R_SPARC_GLOB_JMP	42
+#define R_SPARC_7		43
+#define R_SPARC_5		44
+#define R_SPARC_6		45
+#define R_SPARC_DISP64		46
+#define R_SPARC_PLT64		47
+#define R_SPARC_HIX22		48
+#define R_SPARC_LOX10		49
+#define R_SPARC_H44		50
+#define R_SPARC_M44		51
+#define R_SPARC_L44		52
+#define R_SPARC_REGISTER	53
+#define R_SPARC_UA64		54
+#define R_SPARC_UA16		55
+#define R_SPARC_TLS_GD_HI22	56
+#define R_SPARC_TLS_GD_LO10	57
+#define R_SPARC_TLS_GD_ADD	58
+#define R_SPARC_TLS_GD_CALL	59
+#define R_SPARC_TLS_LDM_HI22	60
+#define R_SPARC_TLS_LDM_LO10	61
+#define R_SPARC_TLS_LDM_ADD	62
+#define R_SPARC_TLS_LDM_CALL	63
+#define R_SPARC_TLS_LDO_HIX22	64
+#define R_SPARC_TLS_LDO_LOX10	65
+#define R_SPARC_TLS_LDO_ADD	66
+#define R_SPARC_TLS_IE_HI22	67
+#define R_SPARC_TLS_IE_LO10	68
+#define R_SPARC_TLS_IE_LD	69
+#define R_SPARC_TLS_IE_LDX	70
+#define R_SPARC_TLS_IE_ADD	71
+#define R_SPARC_TLS_LE_HIX22	72
+#define R_SPARC_TLS_LE_LOX10	73
+#define R_SPARC_TLS_DTPMOD32	74
+#define R_SPARC_TLS_DTPMOD64	75
+#define R_SPARC_TLS_DTPOFF32	76
+#define R_SPARC_TLS_DTPOFF64	77
+#define R_SPARC_TLS_TPOFF32	78
+#define R_SPARC_TLS_TPOFF64	79
+#define R_SPARC_GOTDATA_HIX22	80
+#define R_SPARC_GOTDATA_LOX10	81
+#define R_SPARC_GOTDATA_OP_HIX22	82
+#define R_SPARC_GOTDATA_OP_LOX10	83
+#define R_SPARC_GOTDATA_OP	84
+#define R_SPARC_H34		85
+#define R_SPARC_SIZE32		86
+#define R_SPARC_SIZE64		87
+#define R_SPARC_GNU_VTINHERIT	250
+#define R_SPARC_GNU_VTENTRY	251
+#define R_SPARC_REV32		252
+
+#define R_SPARC_NUM		253
+
+
+
+#define DT_SPARC_REGISTER 0x70000001
+#define DT_SPARC_NUM	2
+
+
+#define EF_MIPS_NOREORDER   1
+#define EF_MIPS_PIC	    2
+#define EF_MIPS_CPIC	    4
+#define EF_MIPS_XGOT	    8
+#define EF_MIPS_64BIT_WHIRL 16
+#define EF_MIPS_ABI2	    32
+#define EF_MIPS_ABI_ON32    64
+#define EF_MIPS_FP64	    512
+#define EF_MIPS_NAN2008     1024
+#define EF_MIPS_ARCH	    0xf0000000
+
+
+
+#define EF_MIPS_ARCH_1	    0x00000000
+#define EF_MIPS_ARCH_2	    0x10000000
+#define EF_MIPS_ARCH_3	    0x20000000
+#define EF_MIPS_ARCH_4	    0x30000000
+#define EF_MIPS_ARCH_5	    0x40000000
+#define EF_MIPS_ARCH_32     0x50000000
+#define EF_MIPS_ARCH_64     0x60000000
+#define EF_MIPS_ARCH_32R2   0x70000000
+#define EF_MIPS_ARCH_64R2   0x80000000
+
+
+#define E_MIPS_ARCH_1	  0x00000000
+#define E_MIPS_ARCH_2	  0x10000000
+#define E_MIPS_ARCH_3	  0x20000000
+#define E_MIPS_ARCH_4	  0x30000000
+#define E_MIPS_ARCH_5	  0x40000000
+#define E_MIPS_ARCH_32	  0x50000000
+#define E_MIPS_ARCH_64	  0x60000000
+
+
+
+#define SHN_MIPS_ACOMMON    0xff00
+#define SHN_MIPS_TEXT	    0xff01
+#define SHN_MIPS_DATA	    0xff02
+#define SHN_MIPS_SCOMMON    0xff03
+#define SHN_MIPS_SUNDEFINED 0xff04
+
+
+
+#define SHT_MIPS_LIBLIST       0x70000000
+#define SHT_MIPS_MSYM	       0x70000001
+#define SHT_MIPS_CONFLICT      0x70000002
+#define SHT_MIPS_GPTAB	       0x70000003
+#define SHT_MIPS_UCODE	       0x70000004
+#define SHT_MIPS_DEBUG	       0x70000005
+#define SHT_MIPS_REGINFO       0x70000006
+#define SHT_MIPS_PACKAGE       0x70000007
+#define SHT_MIPS_PACKSYM       0x70000008
+#define SHT_MIPS_RELD	       0x70000009
+#define SHT_MIPS_IFACE         0x7000000b
+#define SHT_MIPS_CONTENT       0x7000000c
+#define SHT_MIPS_OPTIONS       0x7000000d
+#define SHT_MIPS_SHDR	       0x70000010
+#define SHT_MIPS_FDESC	       0x70000011
+#define SHT_MIPS_EXTSYM	       0x70000012
+#define SHT_MIPS_DENSE	       0x70000013
+#define SHT_MIPS_PDESC	       0x70000014
+#define SHT_MIPS_LOCSYM	       0x70000015
+#define SHT_MIPS_AUXSYM	       0x70000016
+#define SHT_MIPS_OPTSYM	       0x70000017
+#define SHT_MIPS_LOCSTR	       0x70000018
+#define SHT_MIPS_LINE	       0x70000019
+#define SHT_MIPS_RFDESC	       0x7000001a
+#define SHT_MIPS_DELTASYM      0x7000001b
+#define SHT_MIPS_DELTAINST     0x7000001c
+#define SHT_MIPS_DELTACLASS    0x7000001d
+#define SHT_MIPS_DWARF         0x7000001e
+#define SHT_MIPS_DELTADECL     0x7000001f
+#define SHT_MIPS_SYMBOL_LIB    0x70000020
+#define SHT_MIPS_EVENTS	       0x70000021
+#define SHT_MIPS_TRANSLATE     0x70000022
+#define SHT_MIPS_PIXIE	       0x70000023
+#define SHT_MIPS_XLATE	       0x70000024
+#define SHT_MIPS_XLATE_DEBUG   0x70000025
+#define SHT_MIPS_WHIRL	       0x70000026
+#define SHT_MIPS_EH_REGION     0x70000027
+#define SHT_MIPS_XLATE_OLD     0x70000028
+#define SHT_MIPS_PDR_EXCEPTION 0x70000029
+
+
+
+#define SHF_MIPS_GPREL	 0x10000000
+#define SHF_MIPS_MERGE	 0x20000000
+#define SHF_MIPS_ADDR	 0x40000000
+#define SHF_MIPS_STRINGS 0x80000000
+#define SHF_MIPS_NOSTRIP 0x08000000
+#define SHF_MIPS_LOCAL	 0x04000000
+#define SHF_MIPS_NAMES	 0x02000000
+#define SHF_MIPS_NODUPE	 0x01000000
+
+
+
+
+
+#define STO_MIPS_DEFAULT		0x0
+#define STO_MIPS_INTERNAL		0x1
+#define STO_MIPS_HIDDEN			0x2
+#define STO_MIPS_PROTECTED		0x3
+#define STO_MIPS_PLT			0x8
+#define STO_MIPS_SC_ALIGN_UNUSED	0xff
+
+
+#define STB_MIPS_SPLIT_COMMON		13
+
+
+
+typedef union {
+  struct {
+      Elf32_Word gt_current_g_value;
+      Elf32_Word gt_unused;
+  } gt_header;
+  struct {
+      Elf32_Word gt_g_value;
+      Elf32_Word gt_bytes;
+  } gt_entry;
+} Elf32_gptab;
+
+
+
+typedef struct {
+  Elf32_Word	ri_gprmask;
+  Elf32_Word	ri_cprmask[4];
+  Elf32_Sword	ri_gp_value;
+} Elf32_RegInfo;
+
+
+
+typedef struct {
+  unsigned char kind;
+
+  unsigned char size;
+  Elf32_Section section;
+
+  Elf32_Word info;
+} Elf_Options;
+
+
+
+#define ODK_NULL	0
+#define ODK_REGINFO	1
+#define ODK_EXCEPTIONS	2
+#define ODK_PAD		3
+#define ODK_HWPATCH	4
+#define ODK_FILL	5
+#define ODK_TAGS	6
+#define ODK_HWAND	7
+#define ODK_HWOR	8
+
+
+
+#define OEX_FPU_MIN	0x1f
+#define OEX_FPU_MAX	0x1f00
+#define OEX_PAGE0	0x10000
+#define OEX_SMM		0x20000
+#define OEX_FPDBUG	0x40000
+#define OEX_PRECISEFP	OEX_FPDBUG
+#define OEX_DISMISS	0x80000
+
+#define OEX_FPU_INVAL	0x10
+#define OEX_FPU_DIV0	0x08
+#define OEX_FPU_OFLO	0x04
+#define OEX_FPU_UFLO	0x02
+#define OEX_FPU_INEX	0x01
+
+
+
+#define OHW_R4KEOP	0x1
+#define OHW_R8KPFETCH	0x2
+#define OHW_R5KEOP	0x4
+#define OHW_R5KCVTL	0x8
+
+#define OPAD_PREFIX	0x1
+#define OPAD_POSTFIX	0x2
+#define OPAD_SYMBOL	0x4
+
+
+
+typedef struct {
+  Elf32_Word hwp_flags1;
+  Elf32_Word hwp_flags2;
+} Elf_Options_Hw;
+
+
+
+#define OHWA0_R4KEOP_CHECKED	0x00000001
+#define OHWA1_R4KEOP_CLEAN	0x00000002
+
+
+
+#define R_MIPS_NONE		0
+#define R_MIPS_16		1
+#define R_MIPS_32		2
+#define R_MIPS_REL32		3
+#define R_MIPS_26		4
+#define R_MIPS_HI16		5
+#define R_MIPS_LO16		6
+#define R_MIPS_GPREL16		7
+#define R_MIPS_LITERAL		8
+#define R_MIPS_GOT16		9
+#define R_MIPS_PC16		10
+#define R_MIPS_CALL16		11
+#define R_MIPS_GPREL32		12
+
+#define R_MIPS_SHIFT5		16
+#define R_MIPS_SHIFT6		17
+#define R_MIPS_64		18
+#define R_MIPS_GOT_DISP		19
+#define R_MIPS_GOT_PAGE		20
+#define R_MIPS_GOT_OFST		21
+#define R_MIPS_GOT_HI16		22
+#define R_MIPS_GOT_LO16		23
+#define R_MIPS_SUB		24
+#define R_MIPS_INSERT_A		25
+#define R_MIPS_INSERT_B		26
+#define R_MIPS_DELETE		27
+#define R_MIPS_HIGHER		28
+#define R_MIPS_HIGHEST		29
+#define R_MIPS_CALL_HI16	30
+#define R_MIPS_CALL_LO16	31
+#define R_MIPS_SCN_DISP		32
+#define R_MIPS_REL16		33
+#define R_MIPS_ADD_IMMEDIATE	34
+#define R_MIPS_PJUMP		35
+#define R_MIPS_RELGOT		36
+#define R_MIPS_JALR		37
+#define R_MIPS_TLS_DTPMOD32	38
+#define R_MIPS_TLS_DTPREL32	39
+#define R_MIPS_TLS_DTPMOD64	40
+#define R_MIPS_TLS_DTPREL64	41
+#define R_MIPS_TLS_GD		42
+#define R_MIPS_TLS_LDM		43
+#define R_MIPS_TLS_DTPREL_HI16	44
+#define R_MIPS_TLS_DTPREL_LO16	45
+#define R_MIPS_TLS_GOTTPREL	46
+#define R_MIPS_TLS_TPREL32	47
+#define R_MIPS_TLS_TPREL64	48
+#define R_MIPS_TLS_TPREL_HI16	49
+#define R_MIPS_TLS_TPREL_LO16	50
+#define R_MIPS_GLOB_DAT		51
+#define R_MIPS_COPY		126
+#define R_MIPS_JUMP_SLOT        127
+
+#define R_MIPS_NUM		128
+
+
+
+#define PT_MIPS_REGINFO	0x70000000
+#define PT_MIPS_RTPROC  0x70000001
+#define PT_MIPS_OPTIONS 0x70000002
+#define PT_MIPS_ABIFLAGS 0x70000003
+
+
+
+#define PF_MIPS_LOCAL	0x10000000
+
+
+
+#define DT_MIPS_RLD_VERSION  0x70000001
+#define DT_MIPS_TIME_STAMP   0x70000002
+#define DT_MIPS_ICHECKSUM    0x70000003
+#define DT_MIPS_IVERSION     0x70000004
+#define DT_MIPS_FLAGS	     0x70000005
+#define DT_MIPS_BASE_ADDRESS 0x70000006
+#define DT_MIPS_MSYM	     0x70000007
+#define DT_MIPS_CONFLICT     0x70000008
+#define DT_MIPS_LIBLIST	     0x70000009
+#define DT_MIPS_LOCAL_GOTNO  0x7000000a
+#define DT_MIPS_CONFLICTNO   0x7000000b
+#define DT_MIPS_LIBLISTNO    0x70000010
+#define DT_MIPS_SYMTABNO     0x70000011
+#define DT_MIPS_UNREFEXTNO   0x70000012
+#define DT_MIPS_GOTSYM	     0x70000013
+#define DT_MIPS_HIPAGENO     0x70000014
+#define DT_MIPS_RLD_MAP	     0x70000016
+#define DT_MIPS_DELTA_CLASS  0x70000017
+#define DT_MIPS_DELTA_CLASS_NO    0x70000018
+
+#define DT_MIPS_DELTA_INSTANCE    0x70000019
+#define DT_MIPS_DELTA_INSTANCE_NO 0x7000001a
+
+#define DT_MIPS_DELTA_RELOC  0x7000001b
+#define DT_MIPS_DELTA_RELOC_NO 0x7000001c
+
+#define DT_MIPS_DELTA_SYM    0x7000001d
+
+#define DT_MIPS_DELTA_SYM_NO 0x7000001e
+
+#define DT_MIPS_DELTA_CLASSSYM 0x70000020
+
+#define DT_MIPS_DELTA_CLASSSYM_NO 0x70000021
+
+#define DT_MIPS_CXX_FLAGS    0x70000022
+#define DT_MIPS_PIXIE_INIT   0x70000023
+#define DT_MIPS_SYMBOL_LIB   0x70000024
+#define DT_MIPS_LOCALPAGE_GOTIDX 0x70000025
+#define DT_MIPS_LOCAL_GOTIDX 0x70000026
+#define DT_MIPS_HIDDEN_GOTIDX 0x70000027
+#define DT_MIPS_PROTECTED_GOTIDX 0x70000028
+#define DT_MIPS_OPTIONS	     0x70000029
+#define DT_MIPS_INTERFACE    0x7000002a
+#define DT_MIPS_DYNSTR_ALIGN 0x7000002b
+#define DT_MIPS_INTERFACE_SIZE 0x7000002c
+#define DT_MIPS_RLD_TEXT_RESOLVE_ADDR 0x7000002d
+
+#define DT_MIPS_PERF_SUFFIX  0x7000002e
+
+#define DT_MIPS_COMPACT_SIZE 0x7000002f
+#define DT_MIPS_GP_VALUE     0x70000030
+#define DT_MIPS_AUX_DYNAMIC  0x70000031
+
+#define DT_MIPS_PLTGOT	     0x70000032
+
+#define DT_MIPS_RWPLT        0x70000034
+#define DT_MIPS_RLD_MAP_REL  0x70000035
+#define DT_MIPS_NUM	     0x36
+
+
+
+#define RHF_NONE		   0
+#define RHF_QUICKSTART		   (1 << 0)
+#define RHF_NOTPOT		   (1 << 1)
+#define RHF_NO_LIBRARY_REPLACEMENT (1 << 2)
+#define RHF_NO_MOVE		   (1 << 3)
+#define RHF_SGI_ONLY		   (1 << 4)
+#define RHF_GUARANTEE_INIT	   (1 << 5)
+#define RHF_DELTA_C_PLUS_PLUS	   (1 << 6)
+#define RHF_GUARANTEE_START_INIT   (1 << 7)
+#define RHF_PIXIE		   (1 << 8)
+#define RHF_DEFAULT_DELAY_LOAD	   (1 << 9)
+#define RHF_REQUICKSTART	   (1 << 10)
+#define RHF_REQUICKSTARTED	   (1 << 11)
+#define RHF_CORD		   (1 << 12)
+#define RHF_NO_UNRES_UNDEF	   (1 << 13)
+#define RHF_RLD_ORDER_SAFE	   (1 << 14)
+
+
+
+typedef struct {
+  Elf32_Word l_name;
+  Elf32_Word l_time_stamp;
+  Elf32_Word l_checksum;
+  Elf32_Word l_version;
+  Elf32_Word l_flags;
+} Elf32_Lib;
+
+typedef struct {
+  Elf64_Word l_name;
+  Elf64_Word l_time_stamp;
+  Elf64_Word l_checksum;
+  Elf64_Word l_version;
+  Elf64_Word l_flags;
+} Elf64_Lib;
+
+
+
+
+#define LL_NONE		  0
+#define LL_EXACT_MATCH	  (1 << 0)
+#define LL_IGNORE_INT_VER (1 << 1)
+#define LL_REQUIRE_MINOR  (1 << 2)
+#define LL_EXPORTS	  (1 << 3)
+#define LL_DELAY_LOAD	  (1 << 4)
+#define LL_DELTA	  (1 << 5)
+
+
+
+typedef Elf32_Addr Elf32_Conflict;
+
+typedef struct {
+  Elf32_Half version;
+  unsigned char isa_level;
+  unsigned char isa_rev;
+  unsigned char gpr_size;
+  unsigned char cpr1_size;
+  unsigned char cpr2_size;
+  unsigned char fp_abi;
+  Elf32_Word isa_ext;
+  Elf32_Word ases;
+  Elf32_Word flags1;
+  Elf32_Word flags2;
+} Elf_MIPS_ABIFlags_v0;
+
+#define MIPS_AFL_REG_NONE	0x00
+#define MIPS_AFL_REG_32		0x01
+#define MIPS_AFL_REG_64		0x02
+#define MIPS_AFL_REG_128	0x03
+
+#define MIPS_AFL_ASE_DSP	0x00000001
+#define MIPS_AFL_ASE_DSPR2	0x00000002
+#define MIPS_AFL_ASE_EVA	0x00000004
+#define MIPS_AFL_ASE_MCU	0x00000008
+#define MIPS_AFL_ASE_MDMX	0x00000010
+#define MIPS_AFL_ASE_MIPS3D	0x00000020
+#define MIPS_AFL_ASE_MT		0x00000040
+#define MIPS_AFL_ASE_SMARTMIPS	0x00000080
+#define MIPS_AFL_ASE_VIRT	0x00000100
+#define MIPS_AFL_ASE_MSA	0x00000200
+#define MIPS_AFL_ASE_MIPS16	0x00000400
+#define MIPS_AFL_ASE_MICROMIPS	0x00000800
+#define MIPS_AFL_ASE_XPA	0x00001000
+#define MIPS_AFL_ASE_MASK	0x00001fff
+
+#define MIPS_AFL_EXT_XLR	  1
+#define MIPS_AFL_EXT_OCTEON2	  2
+#define MIPS_AFL_EXT_OCTEONP	  3
+#define MIPS_AFL_EXT_LOONGSON_3A  4
+#define MIPS_AFL_EXT_OCTEON	  5
+#define MIPS_AFL_EXT_5900	  6
+#define MIPS_AFL_EXT_4650	  7
+#define MIPS_AFL_EXT_4010	  8
+#define MIPS_AFL_EXT_4100	  9
+#define MIPS_AFL_EXT_3900	  10
+#define MIPS_AFL_EXT_10000	  11
+#define MIPS_AFL_EXT_SB1	  12
+#define MIPS_AFL_EXT_4111	  13
+#define MIPS_AFL_EXT_4120	  14
+#define MIPS_AFL_EXT_5400	  15
+#define MIPS_AFL_EXT_5500	  16
+#define MIPS_AFL_EXT_LOONGSON_2E  17
+#define MIPS_AFL_EXT_LOONGSON_2F  18
+
+#define MIPS_AFL_FLAGS1_ODDSPREG  1
+
+enum
+{
+  Val_GNU_MIPS_ABI_FP_ANY = 0,
+  Val_GNU_MIPS_ABI_FP_DOUBLE = 1,
+  Val_GNU_MIPS_ABI_FP_SINGLE = 2,
+  Val_GNU_MIPS_ABI_FP_SOFT = 3,
+  Val_GNU_MIPS_ABI_FP_OLD_64 = 4,
+  Val_GNU_MIPS_ABI_FP_XX = 5,
+  Val_GNU_MIPS_ABI_FP_64 = 6,
+  Val_GNU_MIPS_ABI_FP_64A = 7,
+  Val_GNU_MIPS_ABI_FP_MAX = 7
+};
+
+
+
+
+#define EF_PARISC_TRAPNIL	0x00010000
+#define EF_PARISC_EXT		0x00020000
+#define EF_PARISC_LSB		0x00040000
+#define EF_PARISC_WIDE		0x00080000
+#define EF_PARISC_NO_KABP	0x00100000
+
+#define EF_PARISC_LAZYSWAP	0x00400000
+#define EF_PARISC_ARCH		0x0000ffff
+
+
+
+#define EFA_PARISC_1_0		    0x020b
+#define EFA_PARISC_1_1		    0x0210
+#define EFA_PARISC_2_0		    0x0214
+
+
+
+#define SHN_PARISC_ANSI_COMMON	0xff00
+
+#define SHN_PARISC_HUGE_COMMON	0xff01
+
+
+
+#define SHT_PARISC_EXT		0x70000000
+#define SHT_PARISC_UNWIND	0x70000001
+#define SHT_PARISC_DOC		0x70000002
+
+
+
+#define SHF_PARISC_SHORT	0x20000000
+#define SHF_PARISC_HUGE		0x40000000
+#define SHF_PARISC_SBP		0x80000000
+
+
+
+#define STT_PARISC_MILLICODE	13
+
+#define STT_HP_OPAQUE		(STT_LOOS + 0x1)
+#define STT_HP_STUB		(STT_LOOS + 0x2)
+
+
+
+#define R_PARISC_NONE		0
+#define R_PARISC_DIR32		1
+#define R_PARISC_DIR21L		2
+#define R_PARISC_DIR17R		3
+#define R_PARISC_DIR17F		4
+#define R_PARISC_DIR14R		6
+#define R_PARISC_PCREL32	9
+#define R_PARISC_PCREL21L	10
+#define R_PARISC_PCREL17R	11
+#define R_PARISC_PCREL17F	12
+#define R_PARISC_PCREL14R	14
+#define R_PARISC_DPREL21L	18
+#define R_PARISC_DPREL14R	22
+#define R_PARISC_GPREL21L	26
+#define R_PARISC_GPREL14R	30
+#define R_PARISC_LTOFF21L	34
+#define R_PARISC_LTOFF14R	38
+#define R_PARISC_SECREL32	41
+#define R_PARISC_SEGBASE	48
+#define R_PARISC_SEGREL32	49
+#define R_PARISC_PLTOFF21L	50
+#define R_PARISC_PLTOFF14R	54
+#define R_PARISC_LTOFF_FPTR32	57
+#define R_PARISC_LTOFF_FPTR21L	58
+#define R_PARISC_LTOFF_FPTR14R	62
+#define R_PARISC_FPTR64		64
+#define R_PARISC_PLABEL32	65
+#define R_PARISC_PLABEL21L	66
+#define R_PARISC_PLABEL14R	70
+#define R_PARISC_PCREL64	72
+#define R_PARISC_PCREL22F	74
+#define R_PARISC_PCREL14WR	75
+#define R_PARISC_PCREL14DR	76
+#define R_PARISC_PCREL16F	77
+#define R_PARISC_PCREL16WF	78
+#define R_PARISC_PCREL16DF	79
+#define R_PARISC_DIR64		80
+#define R_PARISC_DIR14WR	83
+#define R_PARISC_DIR14DR	84
+#define R_PARISC_DIR16F		85
+#define R_PARISC_DIR16WF	86
+#define R_PARISC_DIR16DF	87
+#define R_PARISC_GPREL64	88
+#define R_PARISC_GPREL14WR	91
+#define R_PARISC_GPREL14DR	92
+#define R_PARISC_GPREL16F	93
+#define R_PARISC_GPREL16WF	94
+#define R_PARISC_GPREL16DF	95
+#define R_PARISC_LTOFF64	96
+#define R_PARISC_LTOFF14WR	99
+#define R_PARISC_LTOFF14DR	100
+#define R_PARISC_LTOFF16F	101
+#define R_PARISC_LTOFF16WF	102
+#define R_PARISC_LTOFF16DF	103
+#define R_PARISC_SECREL64	104
+#define R_PARISC_SEGREL64	112
+#define R_PARISC_PLTOFF14WR	115
+#define R_PARISC_PLTOFF14DR	116
+#define R_PARISC_PLTOFF16F	117
+#define R_PARISC_PLTOFF16WF	118
+#define R_PARISC_PLTOFF16DF	119
+#define R_PARISC_LTOFF_FPTR64	120
+#define R_PARISC_LTOFF_FPTR14WR	123
+#define R_PARISC_LTOFF_FPTR14DR	124
+#define R_PARISC_LTOFF_FPTR16F	125
+#define R_PARISC_LTOFF_FPTR16WF	126
+#define R_PARISC_LTOFF_FPTR16DF	127
+#define R_PARISC_LORESERVE	128
+#define R_PARISC_COPY		128
+#define R_PARISC_IPLT		129
+#define R_PARISC_EPLT		130
+#define R_PARISC_TPREL32	153
+#define R_PARISC_TPREL21L	154
+#define R_PARISC_TPREL14R	158
+#define R_PARISC_LTOFF_TP21L	162
+#define R_PARISC_LTOFF_TP14R	166
+#define R_PARISC_LTOFF_TP14F	167
+#define R_PARISC_TPREL64	216
+#define R_PARISC_TPREL14WR	219
+#define R_PARISC_TPREL14DR	220
+#define R_PARISC_TPREL16F	221
+#define R_PARISC_TPREL16WF	222
+#define R_PARISC_TPREL16DF	223
+#define R_PARISC_LTOFF_TP64	224
+#define R_PARISC_LTOFF_TP14WR	227
+#define R_PARISC_LTOFF_TP14DR	228
+#define R_PARISC_LTOFF_TP16F	229
+#define R_PARISC_LTOFF_TP16WF	230
+#define R_PARISC_LTOFF_TP16DF	231
+#define R_PARISC_GNU_VTENTRY	232
+#define R_PARISC_GNU_VTINHERIT	233
+#define R_PARISC_TLS_GD21L	234
+#define R_PARISC_TLS_GD14R	235
+#define R_PARISC_TLS_GDCALL	236
+#define R_PARISC_TLS_LDM21L	237
+#define R_PARISC_TLS_LDM14R	238
+#define R_PARISC_TLS_LDMCALL	239
+#define R_PARISC_TLS_LDO21L	240
+#define R_PARISC_TLS_LDO14R	241
+#define R_PARISC_TLS_DTPMOD32	242
+#define R_PARISC_TLS_DTPMOD64	243
+#define R_PARISC_TLS_DTPOFF32	244
+#define R_PARISC_TLS_DTPOFF64	245
+#define R_PARISC_TLS_LE21L	R_PARISC_TPREL21L
+#define R_PARISC_TLS_LE14R	R_PARISC_TPREL14R
+#define R_PARISC_TLS_IE21L	R_PARISC_LTOFF_TP21L
+#define R_PARISC_TLS_IE14R	R_PARISC_LTOFF_TP14R
+#define R_PARISC_TLS_TPREL32	R_PARISC_TPREL32
+#define R_PARISC_TLS_TPREL64	R_PARISC_TPREL64
+#define R_PARISC_HIRESERVE	255
+
+
+
+#define PT_HP_TLS		(PT_LOOS + 0x0)
+#define PT_HP_CORE_NONE		(PT_LOOS + 0x1)
+#define PT_HP_CORE_VERSION	(PT_LOOS + 0x2)
+#define PT_HP_CORE_KERNEL	(PT_LOOS + 0x3)
+#define PT_HP_CORE_COMM		(PT_LOOS + 0x4)
+#define PT_HP_CORE_PROC		(PT_LOOS + 0x5)
+#define PT_HP_CORE_LOADABLE	(PT_LOOS + 0x6)
+#define PT_HP_CORE_STACK	(PT_LOOS + 0x7)
+#define PT_HP_CORE_SHM		(PT_LOOS + 0x8)
+#define PT_HP_CORE_MMF		(PT_LOOS + 0x9)
+#define PT_HP_PARALLEL		(PT_LOOS + 0x10)
+#define PT_HP_FASTBIND		(PT_LOOS + 0x11)
+#define PT_HP_OPT_ANNOT		(PT_LOOS + 0x12)
+#define PT_HP_HSL_ANNOT		(PT_LOOS + 0x13)
+#define PT_HP_STACK		(PT_LOOS + 0x14)
+
+#define PT_PARISC_ARCHEXT	0x70000000
+#define PT_PARISC_UNWIND	0x70000001
+
+
+
+#define PF_PARISC_SBP		0x08000000
+
+#define PF_HP_PAGE_SIZE		0x00100000
+#define PF_HP_FAR_SHARED	0x00200000
+#define PF_HP_NEAR_SHARED	0x00400000
+#define PF_HP_CODE		0x01000000
+#define PF_HP_MODIFY		0x02000000
+#define PF_HP_LAZYSWAP		0x04000000
+#define PF_HP_SBP		0x08000000
+
+
+
+
+
+
+#define EF_ALPHA_32BIT		1
+#define EF_ALPHA_CANRELAX	2
+
+
+
+
+#define SHT_ALPHA_DEBUG		0x70000001
+#define SHT_ALPHA_REGINFO	0x70000002
+
+
+
+#define SHF_ALPHA_GPREL		0x10000000
+
+
+#define STO_ALPHA_NOPV		0x80
+#define STO_ALPHA_STD_GPLOAD	0x88
+
+
+
+#define R_ALPHA_NONE		0
+#define R_ALPHA_REFLONG		1
+#define R_ALPHA_REFQUAD		2
+#define R_ALPHA_GPREL32		3
+#define R_ALPHA_LITERAL		4
+#define R_ALPHA_LITUSE		5
+#define R_ALPHA_GPDISP		6
+#define R_ALPHA_BRADDR		7
+#define R_ALPHA_HINT		8
+#define R_ALPHA_SREL16		9
+#define R_ALPHA_SREL32		10
+#define R_ALPHA_SREL64		11
+#define R_ALPHA_GPRELHIGH	17
+#define R_ALPHA_GPRELLOW	18
+#define R_ALPHA_GPREL16		19
+#define R_ALPHA_COPY		24
+#define R_ALPHA_GLOB_DAT	25
+#define R_ALPHA_JMP_SLOT	26
+#define R_ALPHA_RELATIVE	27
+#define R_ALPHA_TLS_GD_HI	28
+#define R_ALPHA_TLSGD		29
+#define R_ALPHA_TLS_LDM		30
+#define R_ALPHA_DTPMOD64	31
+#define R_ALPHA_GOTDTPREL	32
+#define R_ALPHA_DTPREL64	33
+#define R_ALPHA_DTPRELHI	34
+#define R_ALPHA_DTPRELLO	35
+#define R_ALPHA_DTPREL16	36
+#define R_ALPHA_GOTTPREL	37
+#define R_ALPHA_TPREL64		38
+#define R_ALPHA_TPRELHI		39
+#define R_ALPHA_TPRELLO		40
+#define R_ALPHA_TPREL16		41
+
+#define R_ALPHA_NUM		46
+
+
+#define LITUSE_ALPHA_ADDR	0
+#define LITUSE_ALPHA_BASE	1
+#define LITUSE_ALPHA_BYTOFF	2
+#define LITUSE_ALPHA_JSR	3
+#define LITUSE_ALPHA_TLS_GD	4
+#define LITUSE_ALPHA_TLS_LDM	5
+
+
+#define DT_ALPHA_PLTRO		(DT_LOPROC + 0)
+#define DT_ALPHA_NUM		1
+
+
+
+
+#define EF_PPC_EMB		0x80000000
+
+
+#define EF_PPC_RELOCATABLE	0x00010000
+#define EF_PPC_RELOCATABLE_LIB	0x00008000
+
+
+
+#define R_PPC_NONE		0
+#define R_PPC_ADDR32		1
+#define R_PPC_ADDR24		2
+#define R_PPC_ADDR16		3
+#define R_PPC_ADDR16_LO		4
+#define R_PPC_ADDR16_HI		5
+#define R_PPC_ADDR16_HA		6
+#define R_PPC_ADDR14		7
+#define R_PPC_ADDR14_BRTAKEN	8
+#define R_PPC_ADDR14_BRNTAKEN	9
+#define R_PPC_REL24		10
+#define R_PPC_REL14		11
+#define R_PPC_REL14_BRTAKEN	12
+#define R_PPC_REL14_BRNTAKEN	13
+#define R_PPC_GOT16		14
+#define R_PPC_GOT16_LO		15
+#define R_PPC_GOT16_HI		16
+#define R_PPC_GOT16_HA		17
+#define R_PPC_PLTREL24		18
+#define R_PPC_COPY		19
+#define R_PPC_GLOB_DAT		20
+#define R_PPC_JMP_SLOT		21
+#define R_PPC_RELATIVE		22
+#define R_PPC_LOCAL24PC		23
+#define R_PPC_UADDR32		24
+#define R_PPC_UADDR16		25
+#define R_PPC_REL32		26
+#define R_PPC_PLT32		27
+#define R_PPC_PLTREL32		28
+#define R_PPC_PLT16_LO		29
+#define R_PPC_PLT16_HI		30
+#define R_PPC_PLT16_HA		31
+#define R_PPC_SDAREL16		32
+#define R_PPC_SECTOFF		33
+#define R_PPC_SECTOFF_LO	34
+#define R_PPC_SECTOFF_HI	35
+#define R_PPC_SECTOFF_HA	36
+
+
+#define R_PPC_TLS		67
+#define R_PPC_DTPMOD32		68
+#define R_PPC_TPREL16		69
+#define R_PPC_TPREL16_LO	70
+#define R_PPC_TPREL16_HI	71
+#define R_PPC_TPREL16_HA	72
+#define R_PPC_TPREL32		73
+#define R_PPC_DTPREL16		74
+#define R_PPC_DTPREL16_LO	75
+#define R_PPC_DTPREL16_HI	76
+#define R_PPC_DTPREL16_HA	77
+#define R_PPC_DTPREL32		78
+#define R_PPC_GOT_TLSGD16	79
+#define R_PPC_GOT_TLSGD16_LO	80
+#define R_PPC_GOT_TLSGD16_HI	81
+#define R_PPC_GOT_TLSGD16_HA	82
+#define R_PPC_GOT_TLSLD16	83
+#define R_PPC_GOT_TLSLD16_LO	84
+#define R_PPC_GOT_TLSLD16_HI	85
+#define R_PPC_GOT_TLSLD16_HA	86
+#define R_PPC_GOT_TPREL16	87
+#define R_PPC_GOT_TPREL16_LO	88
+#define R_PPC_GOT_TPREL16_HI	89
+#define R_PPC_GOT_TPREL16_HA	90
+#define R_PPC_GOT_DTPREL16	91
+#define R_PPC_GOT_DTPREL16_LO	92
+#define R_PPC_GOT_DTPREL16_HI	93
+#define R_PPC_GOT_DTPREL16_HA	94
+#define R_PPC_TLSGD		95
+#define R_PPC_TLSLD		96
+
+
+#define R_PPC_EMB_NADDR32	101
+#define R_PPC_EMB_NADDR16	102
+#define R_PPC_EMB_NADDR16_LO	103
+#define R_PPC_EMB_NADDR16_HI	104
+#define R_PPC_EMB_NADDR16_HA	105
+#define R_PPC_EMB_SDAI16	106
+#define R_PPC_EMB_SDA2I16	107
+#define R_PPC_EMB_SDA2REL	108
+#define R_PPC_EMB_SDA21		109
+#define R_PPC_EMB_MRKREF	110
+#define R_PPC_EMB_RELSEC16	111
+#define R_PPC_EMB_RELST_LO	112
+#define R_PPC_EMB_RELST_HI	113
+#define R_PPC_EMB_RELST_HA	114
+#define R_PPC_EMB_BIT_FLD	115
+#define R_PPC_EMB_RELSDA	116
+
+
+#define R_PPC_DIAB_SDA21_LO	180
+#define R_PPC_DIAB_SDA21_HI	181
+#define R_PPC_DIAB_SDA21_HA	182
+#define R_PPC_DIAB_RELSDA_LO	183
+#define R_PPC_DIAB_RELSDA_HI	184
+#define R_PPC_DIAB_RELSDA_HA	185
+
+
+#define R_PPC_IRELATIVE		248
+
+
+#define R_PPC_REL16		249
+#define R_PPC_REL16_LO		250
+#define R_PPC_REL16_HI		251
+#define R_PPC_REL16_HA		252
+
+
+
+#define R_PPC_TOC16		255
+
+
+#define DT_PPC_GOT		(DT_LOPROC + 0)
+#define DT_PPC_OPT		(DT_LOPROC + 1)
+#define DT_PPC_NUM		2
+
+#define PPC_OPT_TLS		1
+
+
+#define R_PPC64_NONE		R_PPC_NONE
+#define R_PPC64_ADDR32		R_PPC_ADDR32
+#define R_PPC64_ADDR24		R_PPC_ADDR24
+#define R_PPC64_ADDR16		R_PPC_ADDR16
+#define R_PPC64_ADDR16_LO	R_PPC_ADDR16_LO
+#define R_PPC64_ADDR16_HI	R_PPC_ADDR16_HI
+#define R_PPC64_ADDR16_HA	R_PPC_ADDR16_HA
+#define R_PPC64_ADDR14		R_PPC_ADDR14
+#define R_PPC64_ADDR14_BRTAKEN	R_PPC_ADDR14_BRTAKEN
+#define R_PPC64_ADDR14_BRNTAKEN	R_PPC_ADDR14_BRNTAKEN
+#define R_PPC64_REL24		R_PPC_REL24
+#define R_PPC64_REL14		R_PPC_REL14
+#define R_PPC64_REL14_BRTAKEN	R_PPC_REL14_BRTAKEN
+#define R_PPC64_REL14_BRNTAKEN	R_PPC_REL14_BRNTAKEN
+#define R_PPC64_GOT16		R_PPC_GOT16
+#define R_PPC64_GOT16_LO	R_PPC_GOT16_LO
+#define R_PPC64_GOT16_HI	R_PPC_GOT16_HI
+#define R_PPC64_GOT16_HA	R_PPC_GOT16_HA
+
+#define R_PPC64_COPY		R_PPC_COPY
+#define R_PPC64_GLOB_DAT	R_PPC_GLOB_DAT
+#define R_PPC64_JMP_SLOT	R_PPC_JMP_SLOT
+#define R_PPC64_RELATIVE	R_PPC_RELATIVE
+
+#define R_PPC64_UADDR32		R_PPC_UADDR32
+#define R_PPC64_UADDR16		R_PPC_UADDR16
+#define R_PPC64_REL32		R_PPC_REL32
+#define R_PPC64_PLT32		R_PPC_PLT32
+#define R_PPC64_PLTREL32	R_PPC_PLTREL32
+#define R_PPC64_PLT16_LO	R_PPC_PLT16_LO
+#define R_PPC64_PLT16_HI	R_PPC_PLT16_HI
+#define R_PPC64_PLT16_HA	R_PPC_PLT16_HA
+
+#define R_PPC64_SECTOFF		R_PPC_SECTOFF
+#define R_PPC64_SECTOFF_LO	R_PPC_SECTOFF_LO
+#define R_PPC64_SECTOFF_HI	R_PPC_SECTOFF_HI
+#define R_PPC64_SECTOFF_HA	R_PPC_SECTOFF_HA
+#define R_PPC64_ADDR30		37
+#define R_PPC64_ADDR64		38
+#define R_PPC64_ADDR16_HIGHER	39
+#define R_PPC64_ADDR16_HIGHERA	40
+#define R_PPC64_ADDR16_HIGHEST	41
+#define R_PPC64_ADDR16_HIGHESTA	42
+#define R_PPC64_UADDR64		43
+#define R_PPC64_REL64		44
+#define R_PPC64_PLT64		45
+#define R_PPC64_PLTREL64	46
+#define R_PPC64_TOC16		47
+#define R_PPC64_TOC16_LO	48
+#define R_PPC64_TOC16_HI	49
+#define R_PPC64_TOC16_HA	50
+#define R_PPC64_TOC		51
+#define R_PPC64_PLTGOT16	52
+#define R_PPC64_PLTGOT16_LO	53
+#define R_PPC64_PLTGOT16_HI	54
+#define R_PPC64_PLTGOT16_HA	55
+
+#define R_PPC64_ADDR16_DS	56
+#define R_PPC64_ADDR16_LO_DS	57
+#define R_PPC64_GOT16_DS	58
+#define R_PPC64_GOT16_LO_DS	59
+#define R_PPC64_PLT16_LO_DS	60
+#define R_PPC64_SECTOFF_DS	61
+#define R_PPC64_SECTOFF_LO_DS	62
+#define R_PPC64_TOC16_DS	63
+#define R_PPC64_TOC16_LO_DS	64
+#define R_PPC64_PLTGOT16_DS	65
+#define R_PPC64_PLTGOT16_LO_DS	66
+
+
+#define R_PPC64_TLS		67
+#define R_PPC64_DTPMOD64	68
+#define R_PPC64_TPREL16		69
+#define R_PPC64_TPREL16_LO	70
+#define R_PPC64_TPREL16_HI	71
+#define R_PPC64_TPREL16_HA	72
+#define R_PPC64_TPREL64		73
+#define R_PPC64_DTPREL16	74
+#define R_PPC64_DTPREL16_LO	75
+#define R_PPC64_DTPREL16_HI	76
+#define R_PPC64_DTPREL16_HA	77
+#define R_PPC64_DTPREL64	78
+#define R_PPC64_GOT_TLSGD16	79
+#define R_PPC64_GOT_TLSGD16_LO	80
+#define R_PPC64_GOT_TLSGD16_HI	81
+#define R_PPC64_GOT_TLSGD16_HA	82
+#define R_PPC64_GOT_TLSLD16	83
+#define R_PPC64_GOT_TLSLD16_LO	84
+#define R_PPC64_GOT_TLSLD16_HI	85
+#define R_PPC64_GOT_TLSLD16_HA	86
+#define R_PPC64_GOT_TPREL16_DS	87
+#define R_PPC64_GOT_TPREL16_LO_DS 88
+#define R_PPC64_GOT_TPREL16_HI	89
+#define R_PPC64_GOT_TPREL16_HA	90
+#define R_PPC64_GOT_DTPREL16_DS	91
+#define R_PPC64_GOT_DTPREL16_LO_DS 92
+#define R_PPC64_GOT_DTPREL16_HI	93
+#define R_PPC64_GOT_DTPREL16_HA	94
+#define R_PPC64_TPREL16_DS	95
+#define R_PPC64_TPREL16_LO_DS	96
+#define R_PPC64_TPREL16_HIGHER	97
+#define R_PPC64_TPREL16_HIGHERA	98
+#define R_PPC64_TPREL16_HIGHEST	99
+#define R_PPC64_TPREL16_HIGHESTA 100
+#define R_PPC64_DTPREL16_DS	101
+#define R_PPC64_DTPREL16_LO_DS	102
+#define R_PPC64_DTPREL16_HIGHER	103
+#define R_PPC64_DTPREL16_HIGHERA 104
+#define R_PPC64_DTPREL16_HIGHEST 105
+#define R_PPC64_DTPREL16_HIGHESTA 106
+#define R_PPC64_TLSGD		107
+#define R_PPC64_TLSLD		108
+#define R_PPC64_TOCSAVE		109
+#define R_PPC64_ADDR16_HIGH	110
+#define R_PPC64_ADDR16_HIGHA	111
+#define R_PPC64_TPREL16_HIGH	112
+#define R_PPC64_TPREL16_HIGHA	113
+#define R_PPC64_DTPREL16_HIGH	114
+#define R_PPC64_DTPREL16_HIGHA	115
+
+
+#define R_PPC64_JMP_IREL	247
+#define R_PPC64_IRELATIVE	248
+#define R_PPC64_REL16		249
+#define R_PPC64_REL16_LO	250
+#define R_PPC64_REL16_HI	251
+#define R_PPC64_REL16_HA	252
+
+#define EF_PPC64_ABI	3
+
+#define DT_PPC64_GLINK  (DT_LOPROC + 0)
+#define DT_PPC64_OPD	(DT_LOPROC + 1)
+#define DT_PPC64_OPDSZ	(DT_LOPROC + 2)
+#define DT_PPC64_OPT	(DT_LOPROC + 3)
+#define DT_PPC64_NUM	4
+
+#define PPC64_OPT_TLS		1
+#define PPC64_OPT_MULTI_TOC	2
+
+#define STO_PPC64_LOCAL_BIT	5
+#define STO_PPC64_LOCAL_MASK	0xe0
+#define PPC64_LOCAL_ENTRY_OFFSET(x) (1 << (((x)&0xe0)>>5) & 0xfc)
+
+
+#define EF_ARM_RELEXEC		0x01
+#define EF_ARM_HASENTRY		0x02
+#define EF_ARM_INTERWORK	0x04
+#define EF_ARM_APCS_26		0x08
+#define EF_ARM_APCS_FLOAT	0x10
+#define EF_ARM_PIC		0x20
+#define EF_ARM_ALIGN8		0x40
+#define EF_ARM_NEW_ABI		0x80
+#define EF_ARM_OLD_ABI		0x100
+#define EF_ARM_SOFT_FLOAT	0x200
+#define EF_ARM_VFP_FLOAT	0x400
+#define EF_ARM_MAVERICK_FLOAT	0x800
+
+#define EF_ARM_ABI_FLOAT_SOFT	0x200
+#define EF_ARM_ABI_FLOAT_HARD	0x400
+
+
+#define EF_ARM_SYMSARESORTED	0x04
+#define EF_ARM_DYNSYMSUSESEGIDX	0x08
+#define EF_ARM_MAPSYMSFIRST	0x10
+#define EF_ARM_EABIMASK		0XFF000000
+
+
+#define EF_ARM_BE8	    0x00800000
+#define EF_ARM_LE8	    0x00400000
+
+#define EF_ARM_EABI_VERSION(flags)	((flags) & EF_ARM_EABIMASK)
+#define EF_ARM_EABI_UNKNOWN	0x00000000
+#define EF_ARM_EABI_VER1	0x01000000
+#define EF_ARM_EABI_VER2	0x02000000
+#define EF_ARM_EABI_VER3	0x03000000
+#define EF_ARM_EABI_VER4	0x04000000
+#define EF_ARM_EABI_VER5	0x05000000
+
+
+#define STT_ARM_TFUNC		STT_LOPROC
+#define STT_ARM_16BIT		STT_HIPROC
+
+
+#define SHF_ARM_ENTRYSECT	0x10000000
+#define SHF_ARM_COMDEF		0x80000000
+
+
+
+#define PF_ARM_SB		0x10000000
+
+#define PF_ARM_PI		0x20000000
+#define PF_ARM_ABS		0x40000000
+
+
+#define PT_ARM_EXIDX		(PT_LOPROC + 1)
+
+
+#define SHT_ARM_EXIDX		(SHT_LOPROC + 1)
+#define SHT_ARM_PREEMPTMAP	(SHT_LOPROC + 2)
+#define SHT_ARM_ATTRIBUTES	(SHT_LOPROC + 3)
+
+#define R_AARCH64_NONE            0
+#define R_AARCH64_P32_ABS32	1
+#define R_AARCH64_P32_COPY	180
+#define R_AARCH64_P32_GLOB_DAT	181
+#define R_AARCH64_P32_JUMP_SLOT	182
+#define R_AARCH64_P32_RELATIVE	183
+#define R_AARCH64_P32_TLS_DTPMOD 184
+#define R_AARCH64_P32_TLS_DTPREL 185
+#define R_AARCH64_P32_TLS_TPREL	186
+#define R_AARCH64_P32_TLSDESC	187
+#define R_AARCH64_P32_IRELATIVE	188
+#define R_AARCH64_ABS64         257
+#define R_AARCH64_ABS32         258
+#define R_AARCH64_ABS16		259
+#define R_AARCH64_PREL64	260
+#define R_AARCH64_PREL32	261
+#define R_AARCH64_PREL16	262
+#define R_AARCH64_MOVW_UABS_G0	263
+#define R_AARCH64_MOVW_UABS_G0_NC 264
+#define R_AARCH64_MOVW_UABS_G1	265
+#define R_AARCH64_MOVW_UABS_G1_NC 266
+#define R_AARCH64_MOVW_UABS_G2	267
+#define R_AARCH64_MOVW_UABS_G2_NC 268
+#define R_AARCH64_MOVW_UABS_G3	269
+#define R_AARCH64_MOVW_SABS_G0	270
+#define R_AARCH64_MOVW_SABS_G1	271
+#define R_AARCH64_MOVW_SABS_G2	272
+#define R_AARCH64_LD_PREL_LO19	273
+#define R_AARCH64_ADR_PREL_LO21	274
+#define R_AARCH64_ADR_PREL_PG_HI21 275
+#define R_AARCH64_ADR_PREL_PG_HI21_NC 276
+#define R_AARCH64_ADD_ABS_LO12_NC 277
+#define R_AARCH64_LDST8_ABS_LO12_NC 278
+#define R_AARCH64_TSTBR14	279
+#define R_AARCH64_CONDBR19	280
+#define R_AARCH64_JUMP26	282
+#define R_AARCH64_CALL26	283
+#define R_AARCH64_LDST16_ABS_LO12_NC 284
+#define R_AARCH64_LDST32_ABS_LO12_NC 285
+#define R_AARCH64_LDST64_ABS_LO12_NC 286
+#define R_AARCH64_MOVW_PREL_G0	287
+#define R_AARCH64_MOVW_PREL_G0_NC 288
+#define R_AARCH64_MOVW_PREL_G1	289
+#define R_AARCH64_MOVW_PREL_G1_NC 290
+#define R_AARCH64_MOVW_PREL_G2	291
+#define R_AARCH64_MOVW_PREL_G2_NC 292
+#define R_AARCH64_MOVW_PREL_G3	293
+#define R_AARCH64_LDST128_ABS_LO12_NC 299
+#define R_AARCH64_MOVW_GOTOFF_G0 300
+#define R_AARCH64_MOVW_GOTOFF_G0_NC 301
+#define R_AARCH64_MOVW_GOTOFF_G1 302
+#define R_AARCH64_MOVW_GOTOFF_G1_NC 303
+#define R_AARCH64_MOVW_GOTOFF_G2 304
+#define R_AARCH64_MOVW_GOTOFF_G2_NC 305
+#define R_AARCH64_MOVW_GOTOFF_G3 306
+#define R_AARCH64_GOTREL64	307
+#define R_AARCH64_GOTREL32	308
+#define R_AARCH64_GOT_LD_PREL19	309
+#define R_AARCH64_LD64_GOTOFF_LO15 310
+#define R_AARCH64_ADR_GOT_PAGE	311
+#define R_AARCH64_LD64_GOT_LO12_NC 312
+#define R_AARCH64_LD64_GOTPAGE_LO15 313
+#define R_AARCH64_TLSGD_ADR_PREL21 512
+#define R_AARCH64_TLSGD_ADR_PAGE21 513
+#define R_AARCH64_TLSGD_ADD_LO12_NC 514
+#define R_AARCH64_TLSGD_MOVW_G1	515
+#define R_AARCH64_TLSGD_MOVW_G0_NC 516
+#define R_AARCH64_TLSLD_ADR_PREL21 517
+#define R_AARCH64_TLSLD_ADR_PAGE21 518
+#define R_AARCH64_TLSLD_ADD_LO12_NC 519
+#define R_AARCH64_TLSLD_MOVW_G1	520
+#define R_AARCH64_TLSLD_MOVW_G0_NC 521
+#define R_AARCH64_TLSLD_LD_PREL19 522
+#define R_AARCH64_TLSLD_MOVW_DTPREL_G2 523
+#define R_AARCH64_TLSLD_MOVW_DTPREL_G1 524
+#define R_AARCH64_TLSLD_MOVW_DTPREL_G1_NC 525
+#define R_AARCH64_TLSLD_MOVW_DTPREL_G0 526
+#define R_AARCH64_TLSLD_MOVW_DTPREL_G0_NC 527
+#define R_AARCH64_TLSLD_ADD_DTPREL_HI12 528
+#define R_AARCH64_TLSLD_ADD_DTPREL_LO12 529
+#define R_AARCH64_TLSLD_ADD_DTPREL_LO12_NC 530
+#define R_AARCH64_TLSLD_LDST8_DTPREL_LO12 531
+#define R_AARCH64_TLSLD_LDST8_DTPREL_LO12_NC 532
+#define R_AARCH64_TLSLD_LDST16_DTPREL_LO12 533
+#define R_AARCH64_TLSLD_LDST16_DTPREL_LO12_NC 534
+#define R_AARCH64_TLSLD_LDST32_DTPREL_LO12 535
+#define R_AARCH64_TLSLD_LDST32_DTPREL_LO12_NC 536
+#define R_AARCH64_TLSLD_LDST64_DTPREL_LO12 537
+#define R_AARCH64_TLSLD_LDST64_DTPREL_LO12_NC 538
+#define R_AARCH64_TLSIE_MOVW_GOTTPREL_G1 539
+#define R_AARCH64_TLSIE_MOVW_GOTTPREL_G0_NC 540
+#define R_AARCH64_TLSIE_ADR_GOTTPREL_PAGE21 541
+#define R_AARCH64_TLSIE_LD64_GOTTPREL_LO12_NC 542
+#define R_AARCH64_TLSIE_LD_GOTTPREL_PREL19 543
+#define R_AARCH64_TLSLE_MOVW_TPREL_G2 544
+#define R_AARCH64_TLSLE_MOVW_TPREL_G1 545
+#define R_AARCH64_TLSLE_MOVW_TPREL_G1_NC 546
+#define R_AARCH64_TLSLE_MOVW_TPREL_G0 547
+#define R_AARCH64_TLSLE_MOVW_TPREL_G0_NC 548
+#define R_AARCH64_TLSLE_ADD_TPREL_HI12 549
+#define R_AARCH64_TLSLE_ADD_TPREL_LO12 550
+#define R_AARCH64_TLSLE_ADD_TPREL_LO12_NC 551
+#define R_AARCH64_TLSLE_LDST8_TPREL_LO12 552
+#define R_AARCH64_TLSLE_LDST8_TPREL_LO12_NC 553
+#define R_AARCH64_TLSLE_LDST16_TPREL_LO12 554
+#define R_AARCH64_TLSLE_LDST16_TPREL_LO12_NC 555
+#define R_AARCH64_TLSLE_LDST32_TPREL_LO12 556
+#define R_AARCH64_TLSLE_LDST32_TPREL_LO12_NC 557
+#define R_AARCH64_TLSLE_LDST64_TPREL_LO12 558
+#define R_AARCH64_TLSLE_LDST64_TPREL_LO12_NC 559
+#define R_AARCH64_TLSDESC_LD_PREL19 560
+#define R_AARCH64_TLSDESC_ADR_PREL21 561
+#define R_AARCH64_TLSDESC_ADR_PAGE21 562
+#define R_AARCH64_TLSDESC_LD64_LO12 563
+#define R_AARCH64_TLSDESC_ADD_LO12 564
+#define R_AARCH64_TLSDESC_OFF_G1 565
+#define R_AARCH64_TLSDESC_OFF_G0_NC 566
+#define R_AARCH64_TLSDESC_LDR	567
+#define R_AARCH64_TLSDESC_ADD	568
+#define R_AARCH64_TLSDESC_CALL	569
+#define R_AARCH64_TLSLE_LDST128_TPREL_LO12 570
+#define R_AARCH64_TLSLE_LDST128_TPREL_LO12_NC 571
+#define R_AARCH64_TLSLD_LDST128_DTPREL_LO12 572
+#define R_AARCH64_TLSLD_LDST128_DTPREL_LO12_NC 573
+#define R_AARCH64_COPY         1024
+#define R_AARCH64_GLOB_DAT     1025
+#define R_AARCH64_JUMP_SLOT    1026
+#define R_AARCH64_RELATIVE     1027
+#define R_AARCH64_TLS_DTPMOD   1028
+#define R_AARCH64_TLS_DTPMOD64 1028
+#define R_AARCH64_TLS_DTPREL   1029
+#define R_AARCH64_TLS_DTPREL64 1029
+#define R_AARCH64_TLS_TPREL    1030
+#define R_AARCH64_TLS_TPREL64  1030
+#define R_AARCH64_TLSDESC      1031
+
+
+#define R_ARM_NONE		0
+#define R_ARM_PC24		1
+#define R_ARM_ABS32		2
+#define R_ARM_REL32		3
+#define R_ARM_PC13		4
+#define R_ARM_ABS16		5
+#define R_ARM_ABS12		6
+#define R_ARM_THM_ABS5		7
+#define R_ARM_ABS8		8
+#define R_ARM_SBREL32		9
+#define R_ARM_THM_PC22		10
+#define R_ARM_THM_PC8		11
+#define R_ARM_AMP_VCALL9	12
+#define R_ARM_TLS_DESC		13
+#define R_ARM_THM_SWI8		14
+#define R_ARM_XPC25		15
+#define R_ARM_THM_XPC22		16
+#define R_ARM_TLS_DTPMOD32	17
+#define R_ARM_TLS_DTPOFF32	18
+#define R_ARM_TLS_TPOFF32	19
+#define R_ARM_COPY		20
+#define R_ARM_GLOB_DAT		21
+#define R_ARM_JUMP_SLOT		22
+#define R_ARM_RELATIVE		23
+#define R_ARM_GOTOFF		24
+#define R_ARM_GOTPC		25
+#define R_ARM_GOT32		26
+#define R_ARM_PLT32		27
+#define R_ARM_CALL		28
+#define R_ARM_JUMP24		29
+#define R_ARM_THM_JUMP24	30
+#define R_ARM_BASE_ABS		31
+#define R_ARM_ALU_PCREL_7_0	32
+#define R_ARM_ALU_PCREL_15_8	33
+#define R_ARM_ALU_PCREL_23_15	34
+#define R_ARM_LDR_SBREL_11_0	35
+#define R_ARM_ALU_SBREL_19_12	36
+#define R_ARM_ALU_SBREL_27_20	37
+#define R_ARM_TARGET1		38
+#define R_ARM_SBREL31		39
+#define R_ARM_V4BX		40
+#define R_ARM_TARGET2		41
+#define R_ARM_PREL31		42
+#define R_ARM_MOVW_ABS_NC	43
+#define R_ARM_MOVT_ABS		44
+#define R_ARM_MOVW_PREL_NC	45
+#define R_ARM_MOVT_PREL		46
+#define R_ARM_THM_MOVW_ABS_NC	47
+#define R_ARM_THM_MOVT_ABS	48
+#define R_ARM_THM_MOVW_PREL_NC	49
+#define R_ARM_THM_MOVT_PREL	50
+#define R_ARM_THM_JUMP19	51
+#define R_ARM_THM_JUMP6		52
+#define R_ARM_THM_ALU_PREL_11_0	53
+#define R_ARM_THM_PC12		54
+#define R_ARM_ABS32_NOI		55
+#define R_ARM_REL32_NOI		56
+#define R_ARM_ALU_PC_G0_NC	57
+#define R_ARM_ALU_PC_G0		58
+#define R_ARM_ALU_PC_G1_NC	59
+#define R_ARM_ALU_PC_G1		60
+#define R_ARM_ALU_PC_G2		61
+#define R_ARM_LDR_PC_G1		62
+#define R_ARM_LDR_PC_G2		63
+#define R_ARM_LDRS_PC_G0	64
+#define R_ARM_LDRS_PC_G1	65
+#define R_ARM_LDRS_PC_G2	66
+#define R_ARM_LDC_PC_G0		67
+#define R_ARM_LDC_PC_G1		68
+#define R_ARM_LDC_PC_G2		69
+#define R_ARM_ALU_SB_G0_NC	70
+#define R_ARM_ALU_SB_G0		71
+#define R_ARM_ALU_SB_G1_NC	72
+#define R_ARM_ALU_SB_G1		73
+#define R_ARM_ALU_SB_G2		74
+#define R_ARM_LDR_SB_G0		75
+#define R_ARM_LDR_SB_G1		76
+#define R_ARM_LDR_SB_G2		77
+#define R_ARM_LDRS_SB_G0	78
+#define R_ARM_LDRS_SB_G1	79
+#define R_ARM_LDRS_SB_G2	80
+#define R_ARM_LDC_SB_G0		81
+#define R_ARM_LDC_SB_G1		82
+#define R_ARM_LDC_SB_G2		83
+#define R_ARM_MOVW_BREL_NC	84
+#define R_ARM_MOVT_BREL		85
+#define R_ARM_MOVW_BREL		86
+#define R_ARM_THM_MOVW_BREL_NC	87
+#define R_ARM_THM_MOVT_BREL	88
+#define R_ARM_THM_MOVW_BREL	89
+#define R_ARM_TLS_GOTDESC	90
+#define R_ARM_TLS_CALL		91
+#define R_ARM_TLS_DESCSEQ	92
+#define R_ARM_THM_TLS_CALL	93
+#define R_ARM_PLT32_ABS		94
+#define R_ARM_GOT_ABS		95
+#define R_ARM_GOT_PREL		96
+#define R_ARM_GOT_BREL12	97
+#define R_ARM_GOTOFF12		98
+#define R_ARM_GOTRELAX		99
+#define R_ARM_GNU_VTENTRY	100
+#define R_ARM_GNU_VTINHERIT	101
+#define R_ARM_THM_PC11		102
+#define R_ARM_THM_PC9		103
+#define R_ARM_TLS_GD32		104
+
+#define R_ARM_TLS_LDM32		105
+
+#define R_ARM_TLS_LDO32		106
+
+#define R_ARM_TLS_IE32		107
+
+#define R_ARM_TLS_LE32		108
+#define R_ARM_TLS_LDO12		109
+#define R_ARM_TLS_LE12		110
+#define R_ARM_TLS_IE12GP	111
+#define R_ARM_ME_TOO		128
+#define R_ARM_THM_TLS_DESCSEQ	129
+#define R_ARM_THM_TLS_DESCSEQ16	129
+#define R_ARM_THM_TLS_DESCSEQ32	130
+#define R_ARM_THM_GOT_BREL12	131
+#define R_ARM_IRELATIVE		160
+#define R_ARM_RXPC25		249
+#define R_ARM_RSBREL32		250
+#define R_ARM_THM_RPC22		251
+#define R_ARM_RREL32		252
+#define R_ARM_RABS22		253
+#define R_ARM_RPC24		254
+#define R_ARM_RBASE		255
+
+#define R_ARM_NUM		256
+
+
+
+
+#define EF_IA_64_MASKOS		0x0000000f
+#define EF_IA_64_ABI64		0x00000010
+#define EF_IA_64_ARCH		0xff000000
+
+
+#define PT_IA_64_ARCHEXT	(PT_LOPROC + 0)
+#define PT_IA_64_UNWIND		(PT_LOPROC + 1)
+#define PT_IA_64_HP_OPT_ANOT	(PT_LOOS + 0x12)
+#define PT_IA_64_HP_HSL_ANOT	(PT_LOOS + 0x13)
+#define PT_IA_64_HP_STACK	(PT_LOOS + 0x14)
+
+
+#define PF_IA_64_NORECOV	0x80000000
+
+
+#define SHT_IA_64_EXT		(SHT_LOPROC + 0)
+#define SHT_IA_64_UNWIND	(SHT_LOPROC + 1)
+
+
+#define SHF_IA_64_SHORT		0x10000000
+#define SHF_IA_64_NORECOV	0x20000000
+
+
+#define DT_IA_64_PLT_RESERVE	(DT_LOPROC + 0)
+#define DT_IA_64_NUM		1
+
+
+#define R_IA64_NONE		0x00
+#define R_IA64_IMM14		0x21
+#define R_IA64_IMM22		0x22
+#define R_IA64_IMM64		0x23
+#define R_IA64_DIR32MSB		0x24
+#define R_IA64_DIR32LSB		0x25
+#define R_IA64_DIR64MSB		0x26
+#define R_IA64_DIR64LSB		0x27
+#define R_IA64_GPREL22		0x2a
+#define R_IA64_GPREL64I		0x2b
+#define R_IA64_GPREL32MSB	0x2c
+#define R_IA64_GPREL32LSB	0x2d
+#define R_IA64_GPREL64MSB	0x2e
+#define R_IA64_GPREL64LSB	0x2f
+#define R_IA64_LTOFF22		0x32
+#define R_IA64_LTOFF64I		0x33
+#define R_IA64_PLTOFF22		0x3a
+#define R_IA64_PLTOFF64I	0x3b
+#define R_IA64_PLTOFF64MSB	0x3e
+#define R_IA64_PLTOFF64LSB	0x3f
+#define R_IA64_FPTR64I		0x43
+#define R_IA64_FPTR32MSB	0x44
+#define R_IA64_FPTR32LSB	0x45
+#define R_IA64_FPTR64MSB	0x46
+#define R_IA64_FPTR64LSB	0x47
+#define R_IA64_PCREL60B		0x48
+#define R_IA64_PCREL21B		0x49
+#define R_IA64_PCREL21M		0x4a
+#define R_IA64_PCREL21F		0x4b
+#define R_IA64_PCREL32MSB	0x4c
+#define R_IA64_PCREL32LSB	0x4d
+#define R_IA64_PCREL64MSB	0x4e
+#define R_IA64_PCREL64LSB	0x4f
+#define R_IA64_LTOFF_FPTR22	0x52
+#define R_IA64_LTOFF_FPTR64I	0x53
+#define R_IA64_LTOFF_FPTR32MSB	0x54
+#define R_IA64_LTOFF_FPTR32LSB	0x55
+#define R_IA64_LTOFF_FPTR64MSB	0x56
+#define R_IA64_LTOFF_FPTR64LSB	0x57
+#define R_IA64_SEGREL32MSB	0x5c
+#define R_IA64_SEGREL32LSB	0x5d
+#define R_IA64_SEGREL64MSB	0x5e
+#define R_IA64_SEGREL64LSB	0x5f
+#define R_IA64_SECREL32MSB	0x64
+#define R_IA64_SECREL32LSB	0x65
+#define R_IA64_SECREL64MSB	0x66
+#define R_IA64_SECREL64LSB	0x67
+#define R_IA64_REL32MSB		0x6c
+#define R_IA64_REL32LSB		0x6d
+#define R_IA64_REL64MSB		0x6e
+#define R_IA64_REL64LSB		0x6f
+#define R_IA64_LTV32MSB		0x74
+#define R_IA64_LTV32LSB		0x75
+#define R_IA64_LTV64MSB		0x76
+#define R_IA64_LTV64LSB		0x77
+#define R_IA64_PCREL21BI	0x79
+#define R_IA64_PCREL22		0x7a
+#define R_IA64_PCREL64I		0x7b
+#define R_IA64_IPLTMSB		0x80
+#define R_IA64_IPLTLSB		0x81
+#define R_IA64_COPY		0x84
+#define R_IA64_SUB		0x85
+#define R_IA64_LTOFF22X		0x86
+#define R_IA64_LDXMOV		0x87
+#define R_IA64_TPREL14		0x91
+#define R_IA64_TPREL22		0x92
+#define R_IA64_TPREL64I		0x93
+#define R_IA64_TPREL64MSB	0x96
+#define R_IA64_TPREL64LSB	0x97
+#define R_IA64_LTOFF_TPREL22	0x9a
+#define R_IA64_DTPMOD64MSB	0xa6
+#define R_IA64_DTPMOD64LSB	0xa7
+#define R_IA64_LTOFF_DTPMOD22	0xaa
+#define R_IA64_DTPREL14		0xb1
+#define R_IA64_DTPREL22		0xb2
+#define R_IA64_DTPREL64I	0xb3
+#define R_IA64_DTPREL32MSB	0xb4
+#define R_IA64_DTPREL32LSB	0xb5
+#define R_IA64_DTPREL64MSB	0xb6
+#define R_IA64_DTPREL64LSB	0xb7
+#define R_IA64_LTOFF_DTPREL22	0xba
+
+
+#define EF_SH_MACH_MASK		0x1f
+#define EF_SH_UNKNOWN		0x0
+#define EF_SH1			0x1
+#define EF_SH2			0x2
+#define EF_SH3			0x3
+#define EF_SH_DSP		0x4
+#define EF_SH3_DSP		0x5
+#define EF_SH4AL_DSP		0x6
+#define EF_SH3E			0x8
+#define EF_SH4			0x9
+#define EF_SH2E			0xb
+#define EF_SH4A			0xc
+#define EF_SH2A			0xd
+#define EF_SH4_NOFPU		0x10
+#define EF_SH4A_NOFPU		0x11
+#define EF_SH4_NOMMU_NOFPU	0x12
+#define EF_SH2A_NOFPU		0x13
+#define EF_SH3_NOMMU		0x14
+#define EF_SH2A_SH4_NOFPU	0x15
+#define EF_SH2A_SH3_NOFPU	0x16
+#define EF_SH2A_SH4		0x17
+#define EF_SH2A_SH3E		0x18
+
+#define	R_SH_NONE		0
+#define	R_SH_DIR32		1
+#define	R_SH_REL32		2
+#define	R_SH_DIR8WPN		3
+#define	R_SH_IND12W		4
+#define	R_SH_DIR8WPL		5
+#define	R_SH_DIR8WPZ		6
+#define	R_SH_DIR8BP		7
+#define	R_SH_DIR8W		8
+#define	R_SH_DIR8L		9
+#define	R_SH_SWITCH16		25
+#define	R_SH_SWITCH32		26
+#define	R_SH_USES		27
+#define	R_SH_COUNT		28
+#define	R_SH_ALIGN		29
+#define	R_SH_CODE		30
+#define	R_SH_DATA		31
+#define	R_SH_LABEL		32
+#define	R_SH_SWITCH8		33
+#define	R_SH_GNU_VTINHERIT	34
+#define	R_SH_GNU_VTENTRY	35
+#define	R_SH_TLS_GD_32		144
+#define	R_SH_TLS_LD_32		145
+#define	R_SH_TLS_LDO_32		146
+#define	R_SH_TLS_IE_32		147
+#define	R_SH_TLS_LE_32		148
+#define	R_SH_TLS_DTPMOD32	149
+#define	R_SH_TLS_DTPOFF32	150
+#define	R_SH_TLS_TPOFF32	151
+#define	R_SH_GOT32		160
+#define	R_SH_PLT32		161
+#define	R_SH_COPY		162
+#define	R_SH_GLOB_DAT		163
+#define	R_SH_JMP_SLOT		164
+#define	R_SH_RELATIVE		165
+#define	R_SH_GOTOFF		166
+#define	R_SH_GOTPC		167
+#define	R_SH_GOT20		201
+#define	R_SH_GOTOFF20		202
+#define	R_SH_GOTFUNCDESC	203
+#define	R_SH_GOTFUNCDEST20	204
+#define	R_SH_GOTOFFFUNCDESC	205
+#define	R_SH_GOTOFFFUNCDEST20	206
+#define	R_SH_FUNCDESC		207
+#define	R_SH_FUNCDESC_VALUE	208
+
+#define	R_SH_NUM		256
+
+
+
+#define R_390_NONE		0
+#define R_390_8			1
+#define R_390_12		2
+#define R_390_16		3
+#define R_390_32		4
+#define R_390_PC32		5
+#define R_390_GOT12		6
+#define R_390_GOT32		7
+#define R_390_PLT32		8
+#define R_390_COPY		9
+#define R_390_GLOB_DAT		10
+#define R_390_JMP_SLOT		11
+#define R_390_RELATIVE		12
+#define R_390_GOTOFF32		13
+#define R_390_GOTPC		14
+#define R_390_GOT16		15
+#define R_390_PC16		16
+#define R_390_PC16DBL		17
+#define R_390_PLT16DBL		18
+#define R_390_PC32DBL		19
+#define R_390_PLT32DBL		20
+#define R_390_GOTPCDBL		21
+#define R_390_64		22
+#define R_390_PC64		23
+#define R_390_GOT64		24
+#define R_390_PLT64		25
+#define R_390_GOTENT		26
+#define R_390_GOTOFF16		27
+#define R_390_GOTOFF64		28
+#define R_390_GOTPLT12		29
+#define R_390_GOTPLT16		30
+#define R_390_GOTPLT32		31
+#define R_390_GOTPLT64		32
+#define R_390_GOTPLTENT		33
+#define R_390_PLTOFF16		34
+#define R_390_PLTOFF32		35
+#define R_390_PLTOFF64		36
+#define R_390_TLS_LOAD		37
+#define R_390_TLS_GDCALL	38
+
+#define R_390_TLS_LDCALL	39
+
+#define R_390_TLS_GD32		40
+
+#define R_390_TLS_GD64		41
+
+#define R_390_TLS_GOTIE12	42
+
+#define R_390_TLS_GOTIE32	43
+
+#define R_390_TLS_GOTIE64	44
+
+#define R_390_TLS_LDM32		45
+
+#define R_390_TLS_LDM64		46
+
+#define R_390_TLS_IE32		47
+
+#define R_390_TLS_IE64		48
+
+#define R_390_TLS_IEENT		49
+
+#define R_390_TLS_LE32		50
+
+#define R_390_TLS_LE64		51
+
+#define R_390_TLS_LDO32		52
+
+#define R_390_TLS_LDO64		53
+
+#define R_390_TLS_DTPMOD	54
+#define R_390_TLS_DTPOFF	55
+#define R_390_TLS_TPOFF		56
+
+#define R_390_20		57
+#define R_390_GOT20		58
+#define R_390_GOTPLT20		59
+#define R_390_TLS_GOTIE20	60
+
+
+#define R_390_NUM		61
+
+
+
+#define R_CRIS_NONE		0
+#define R_CRIS_8		1
+#define R_CRIS_16		2
+#define R_CRIS_32		3
+#define R_CRIS_8_PCREL		4
+#define R_CRIS_16_PCREL		5
+#define R_CRIS_32_PCREL		6
+#define R_CRIS_GNU_VTINHERIT	7
+#define R_CRIS_GNU_VTENTRY	8
+#define R_CRIS_COPY		9
+#define R_CRIS_GLOB_DAT		10
+#define R_CRIS_JUMP_SLOT	11
+#define R_CRIS_RELATIVE		12
+#define R_CRIS_16_GOT		13
+#define R_CRIS_32_GOT		14
+#define R_CRIS_16_GOTPLT	15
+#define R_CRIS_32_GOTPLT	16
+#define R_CRIS_32_GOTREL	17
+#define R_CRIS_32_PLT_GOTREL	18
+#define R_CRIS_32_PLT_PCREL	19
+
+#define R_CRIS_NUM		20
+
+
+
+#define R_X86_64_NONE		0
+#define R_X86_64_64		1
+#define R_X86_64_PC32		2
+#define R_X86_64_GOT32		3
+#define R_X86_64_PLT32		4
+#define R_X86_64_COPY		5
+#define R_X86_64_GLOB_DAT	6
+#define R_X86_64_JUMP_SLOT	7
+#define R_X86_64_RELATIVE	8
+#define R_X86_64_GOTPCREL	9
+
+#define R_X86_64_32		10
+#define R_X86_64_32S		11
+#define R_X86_64_16		12
+#define R_X86_64_PC16		13
+#define R_X86_64_8		14
+#define R_X86_64_PC8		15
+#define R_X86_64_DTPMOD64	16
+#define R_X86_64_DTPOFF64	17
+#define R_X86_64_TPOFF64	18
+#define R_X86_64_TLSGD		19
+
+#define R_X86_64_TLSLD		20
+
+#define R_X86_64_DTPOFF32	21
+#define R_X86_64_GOTTPOFF	22
+
+#define R_X86_64_TPOFF32	23
+#define R_X86_64_PC64		24
+#define R_X86_64_GOTOFF64	25
+#define R_X86_64_GOTPC32	26
+#define R_X86_64_GOT64		27
+#define R_X86_64_GOTPCREL64	28
+#define R_X86_64_GOTPC64	29
+#define R_X86_64_GOTPLT64	30
+#define R_X86_64_PLTOFF64	31
+#define R_X86_64_SIZE32		32
+#define R_X86_64_SIZE64		33
+
+#define R_X86_64_GOTPC32_TLSDESC 34
+#define R_X86_64_TLSDESC_CALL   35
+
+#define R_X86_64_TLSDESC        36
+#define R_X86_64_IRELATIVE	37
+#define R_X86_64_RELATIVE64	38
+#define R_X86_64_GOTPCRELX	41
+#define R_X86_64_REX_GOTPCRELX	42
+#define R_X86_64_NUM		43
+
+
+
+#define R_MN10300_NONE		0
+#define R_MN10300_32		1
+#define R_MN10300_16		2
+#define R_MN10300_8		3
+#define R_MN10300_PCREL32	4
+#define R_MN10300_PCREL16	5
+#define R_MN10300_PCREL8	6
+#define R_MN10300_GNU_VTINHERIT	7
+#define R_MN10300_GNU_VTENTRY	8
+#define R_MN10300_24		9
+#define R_MN10300_GOTPC32	10
+#define R_MN10300_GOTPC16	11
+#define R_MN10300_GOTOFF32	12
+#define R_MN10300_GOTOFF24	13
+#define R_MN10300_GOTOFF16	14
+#define R_MN10300_PLT32		15
+#define R_MN10300_PLT16		16
+#define R_MN10300_GOT32		17
+#define R_MN10300_GOT24		18
+#define R_MN10300_GOT16		19
+#define R_MN10300_COPY		20
+#define R_MN10300_GLOB_DAT	21
+#define R_MN10300_JMP_SLOT	22
+#define R_MN10300_RELATIVE	23
+
+#define R_MN10300_NUM		24
+
+
+
+#define R_M32R_NONE		0
+#define R_M32R_16		1
+#define R_M32R_32		2
+#define R_M32R_24		3
+#define R_M32R_10_PCREL		4
+#define R_M32R_18_PCREL		5
+#define R_M32R_26_PCREL		6
+#define R_M32R_HI16_ULO		7
+#define R_M32R_HI16_SLO		8
+#define R_M32R_LO16		9
+#define R_M32R_SDA16		10
+#define R_M32R_GNU_VTINHERIT	11
+#define R_M32R_GNU_VTENTRY	12
+
+#define R_M32R_16_RELA		33
+#define R_M32R_32_RELA		34
+#define R_M32R_24_RELA		35
+#define R_M32R_10_PCREL_RELA	36
+#define R_M32R_18_PCREL_RELA	37
+#define R_M32R_26_PCREL_RELA	38
+#define R_M32R_HI16_ULO_RELA	39
+#define R_M32R_HI16_SLO_RELA	40
+#define R_M32R_LO16_RELA	41
+#define R_M32R_SDA16_RELA	42
+#define R_M32R_RELA_GNU_VTINHERIT	43
+#define R_M32R_RELA_GNU_VTENTRY	44
+#define R_M32R_REL32		45
+
+#define R_M32R_GOT24		48
+#define R_M32R_26_PLTREL	49
+#define R_M32R_COPY		50
+#define R_M32R_GLOB_DAT		51
+#define R_M32R_JMP_SLOT		52
+#define R_M32R_RELATIVE		53
+#define R_M32R_GOTOFF		54
+#define R_M32R_GOTPC24		55
+#define R_M32R_GOT16_HI_ULO	56
+
+#define R_M32R_GOT16_HI_SLO	57
+
+#define R_M32R_GOT16_LO		58
+#define R_M32R_GOTPC_HI_ULO	59
+
+#define R_M32R_GOTPC_HI_SLO	60
+
+#define R_M32R_GOTPC_LO		61
+
+#define R_M32R_GOTOFF_HI_ULO	62
+
+#define R_M32R_GOTOFF_HI_SLO	63
+
+#define R_M32R_GOTOFF_LO	64
+#define R_M32R_NUM		256
+
+#define R_MICROBLAZE_NONE 0
+#define R_MICROBLAZE_32 1
+#define R_MICROBLAZE_32_PCREL 2
+#define R_MICROBLAZE_64_PCREL 3
+#define R_MICROBLAZE_32_PCREL_LO 4
+#define R_MICROBLAZE_64 5
+#define R_MICROBLAZE_32_LO 6
+#define R_MICROBLAZE_SRO32 7
+#define R_MICROBLAZE_SRW32 8
+#define R_MICROBLAZE_64_NONE 9
+#define R_MICROBLAZE_32_SYM_OP_SYM 10
+#define R_MICROBLAZE_GNU_VTINHERIT 11
+#define R_MICROBLAZE_GNU_VTENTRY 12
+#define R_MICROBLAZE_GOTPC_64 13
+#define R_MICROBLAZE_GOT_64 14
+#define R_MICROBLAZE_PLT_64 15
+#define R_MICROBLAZE_REL 16
+#define R_MICROBLAZE_JUMP_SLOT 17
+#define R_MICROBLAZE_GLOB_DAT 18
+#define R_MICROBLAZE_GOTOFF_64 19
+#define R_MICROBLAZE_GOTOFF_32 20
+#define R_MICROBLAZE_COPY 21
+#define R_MICROBLAZE_TLS 22
+#define R_MICROBLAZE_TLSGD 23
+#define R_MICROBLAZE_TLSLD 24
+#define R_MICROBLAZE_TLSDTPMOD32 25
+#define R_MICROBLAZE_TLSDTPREL32 26
+#define R_MICROBLAZE_TLSDTPREL64 27
+#define R_MICROBLAZE_TLSGOTTPREL32 28
+#define R_MICROBLAZE_TLSTPREL32	 29
+
+#define DT_NIOS2_GP             0x70000002
+
+#define R_NIOS2_NONE		0
+#define R_NIOS2_S16		1
+#define R_NIOS2_U16		2
+#define R_NIOS2_PCREL16		3
+#define R_NIOS2_CALL26		4
+#define R_NIOS2_IMM5		5
+#define R_NIOS2_CACHE_OPX	6
+#define R_NIOS2_IMM6		7
+#define R_NIOS2_IMM8		8
+#define R_NIOS2_HI16		9
+#define R_NIOS2_LO16		10
+#define R_NIOS2_HIADJ16		11
+#define R_NIOS2_BFD_RELOC_32	12
+#define R_NIOS2_BFD_RELOC_16	13
+#define R_NIOS2_BFD_RELOC_8	14
+#define R_NIOS2_GPREL		15
+#define R_NIOS2_GNU_VTINHERIT	16
+#define R_NIOS2_GNU_VTENTRY	17
+#define R_NIOS2_UJMP		18
+#define R_NIOS2_CJMP		19
+#define R_NIOS2_CALLR		20
+#define R_NIOS2_ALIGN		21
+#define R_NIOS2_GOT16		22
+#define R_NIOS2_CALL16		23
+#define R_NIOS2_GOTOFF_LO	24
+#define R_NIOS2_GOTOFF_HA	25
+#define R_NIOS2_PCREL_LO	26
+#define R_NIOS2_PCREL_HA	27
+#define R_NIOS2_TLS_GD16	28
+#define R_NIOS2_TLS_LDM16	29
+#define R_NIOS2_TLS_LDO16	30
+#define R_NIOS2_TLS_IE16	31
+#define R_NIOS2_TLS_LE16	32
+#define R_NIOS2_TLS_DTPMOD	33
+#define R_NIOS2_TLS_DTPREL	34
+#define R_NIOS2_TLS_TPREL	35
+#define R_NIOS2_COPY		36
+#define R_NIOS2_GLOB_DAT	37
+#define R_NIOS2_JUMP_SLOT	38
+#define R_NIOS2_RELATIVE	39
+#define R_NIOS2_GOTOFF		40
+#define R_NIOS2_CALL26_NOAT	41
+#define R_NIOS2_GOT_LO		42
+#define R_NIOS2_GOT_HA		43
+#define R_NIOS2_CALL_LO		44
+#define R_NIOS2_CALL_HA		45
+
+#define R_OR1K_NONE		0
+#define R_OR1K_32		1
+#define R_OR1K_16		2
+#define R_OR1K_8		3
+#define R_OR1K_LO_16_IN_INSN	4
+#define R_OR1K_HI_16_IN_INSN	5
+#define R_OR1K_INSN_REL_26	6
+#define R_OR1K_GNU_VTENTRY	7
+#define R_OR1K_GNU_VTINHERIT	8
+#define R_OR1K_32_PCREL		9
+#define R_OR1K_16_PCREL		10
+#define R_OR1K_8_PCREL		11
+#define R_OR1K_GOTPC_HI16	12
+#define R_OR1K_GOTPC_LO16	13
+#define R_OR1K_GOT16		14
+#define R_OR1K_PLT26		15
+#define R_OR1K_GOTOFF_HI16	16
+#define R_OR1K_GOTOFF_LO16	17
+#define R_OR1K_COPY		18
+#define R_OR1K_GLOB_DAT		19
+#define R_OR1K_JMP_SLOT		20
+#define R_OR1K_RELATIVE		21
+#define R_OR1K_TLS_GD_HI16	22
+#define R_OR1K_TLS_GD_LO16	23
+#define R_OR1K_TLS_LDM_HI16	24
+#define R_OR1K_TLS_LDM_LO16	25
+#define R_OR1K_TLS_LDO_HI16	26
+#define R_OR1K_TLS_LDO_LO16	27
+#define R_OR1K_TLS_IE_HI16	28
+#define R_OR1K_TLS_IE_LO16	29
+#define R_OR1K_TLS_LE_HI16	30
+#define R_OR1K_TLS_LE_LO16	31
+#define R_OR1K_TLS_TPOFF	32
+#define R_OR1K_TLS_DTPOFF	33
+#define R_OR1K_TLS_DTPMOD	34
+
+#define R_BPF_NONE		0
+#define R_BPF_MAP_FD		1
+
+#ifdef __cplusplus
+}
+#endif
+
+
+#endif
diff --git a/tools/inigen/elf.c b/tools/inigen/elf.c
new file mode 100644
index 000000000..5dde93d93
--- /dev/null
+++ b/tools/inigen/elf.c
@@ -0,0 +1,272 @@
+#include <string.h>
+#include <stdlib.h>
+#include <stdio.h>
+#include "elf.h"
+#include "util.h"
+
+static char * strtab = NULL;
+static char * shstrtab = NULL;
+static Elf32_Sym * symbols = NULL;
+static Elf32_Shdr * sectionHeaders = NULL;
+static Elf32_Phdr * programHeaders = NULL;
+static Elf32_Ehdr elfHeader = {};
+static int initialized = 0;
+unsigned int nSymbols = 0;
+static FILE * elfFile = NULL;
+
+#ifdef _MSC_VER
+#define DEBUG_MSG(fmt, ...) // fprintf(stderr, fmt, __VA_ARGS__)
+#else
+#define DEBUG_MSG(fmt, ...) // fprintf(stderr, fmt, ##__VA_ARGS__)
+#endif
+
+static void ReadElfHeader(void)
+{
+    DEBUG_MSG("ReadElfHeader\n");
+
+    fseek(elfFile, 0, SEEK_SET);
+    if (fread(&elfHeader, sizeof(elfHeader), 1, elfFile) != 1)
+        FATAL_ERROR("fread\n");
+    if (memcmp(elfHeader.e_ident, ELFMAG, SELFMAG) != 0) {
+        FATAL_ERROR("malformed ELF header\n");
+    }
+    if (elfHeader.e_ident[EI_CLASS] != ELFCLASS32) {
+        FATAL_ERROR("%s elf detected (this utility only supports 32-bit)\n", elfHeader.e_ident[EI_CLASS] == ELFCLASS64 ? "64-bit" : "unknown");
+    }
+    initialized = 1;
+}
+
+static void ReadProgramHeaders(void)
+{
+    DEBUG_MSG("ReadProgramHeaders\n");
+
+    if (!initialized) {
+        FATAL_ERROR("ELF not initialized\n");
+    }
+    programHeaders = malloc(elfHeader.e_phentsize * elfHeader.e_phnum);
+    if (programHeaders == NULL) {
+        FATAL_ERROR("failed to allocate programs table\n");
+    }
+    fseek(elfFile, elfHeader.e_phoff, SEEK_SET);
+    if (fread(programHeaders, elfHeader.e_phentsize, elfHeader.e_phnum, elfFile) != elfHeader.e_phnum)
+        FATAL_ERROR("fread\n");
+}
+
+static void ReadSectionHeaders(void)
+{
+    DEBUG_MSG("ReadSectionHeaders\n");
+
+    if (!initialized) {
+        FATAL_ERROR("ELF not initialized\n");
+    }
+    fseek(elfFile, elfHeader.e_shoff, SEEK_SET);
+    Elf32_Shdr firstHeader;
+    if (fread(&firstHeader, elfHeader.e_shentsize, 1, elfFile) != 1)
+        FATAL_ERROR("fread\n");
+    unsigned nsecs = elfHeader.e_shnum;
+    if (nsecs == SHN_UNDEF) {
+        nsecs = firstHeader.sh_size;
+    }
+    sectionHeaders = malloc(elfHeader.e_shentsize * elfHeader.e_shnum);
+    if (sectionHeaders == NULL) {
+        FATAL_ERROR("failed to allocate section table\n");
+    }
+    sectionHeaders[0] = firstHeader;
+    if (fread(sectionHeaders + 1, elfHeader.e_shentsize, nsecs - 1, elfFile) != nsecs - 1)
+        FATAL_ERROR("fread\n");
+}
+
+static char * read_strings(Elf32_Shdr * section)
+{
+    DEBUG_MSG("read_strings\n"
+              "offset: %X, size: %X\n", section->sh_offset, section->sh_size);
+
+    char * dest = malloc(section->sh_size);
+    if (dest == NULL) {
+        FATAL_ERROR("failed to allocate string table\n");
+    }
+    fseek(elfFile, section->sh_offset, SEEK_SET);
+    if (fread(dest, 1, section->sh_size, elfFile) != section->sh_size)
+        FATAL_ERROR("fread\n");
+    return dest;
+}
+
+static void ReadStringTables(void)
+{
+    DEBUG_MSG("ReadStringTables\n");
+
+    if (sectionHeaders == NULL) {
+        FATAL_ERROR("need to read section headers first\n");
+    }
+    shstrtab = read_strings(&sectionHeaders[elfHeader.e_shstrndx]);
+    for (int i = 0; i < elfHeader.e_shnum; i++)
+    {
+        if (i == elfHeader.e_shstrndx) continue;
+        if (sectionHeaders[i].sh_type == SHT_STRTAB) {
+            strtab = read_strings(&sectionHeaders[i]);
+            break;
+        }
+    }
+    if (strtab == NULL) {
+        FATAL_ERROR("failed to find strings table\n");
+    }
+}
+
+static int symcmp(const void * a, const void * b)
+{
+    const Elf32_Sym * aa = (const Elf32_Sym *)a;
+    const Elf32_Sym * bb = (const Elf32_Sym *)b;
+    return aa->st_value > bb->st_value;
+}
+
+static void ReadSymbols(void)
+{
+    DEBUG_MSG("ReadSymbols\n");
+
+    if (sectionHeaders == NULL) {
+        FATAL_ERROR("need to read section headers first\n");
+    }
+    for (int i = 0; i < elfHeader.e_shnum; i++)
+    {
+        if (sectionHeaders[i].sh_type == SHT_SYMTAB) {
+            nSymbols = sectionHeaders[i].sh_size / sizeof(Elf32_Sym);
+            DEBUG_MSG("nSymbols: %d\n", nSymbols);
+            symbols = malloc(sectionHeaders[i].sh_size);
+            if (symbols == NULL) {
+                FATAL_ERROR("failed to allocate symbol table\n");
+            }
+            fseek(elfFile, sectionHeaders[i].sh_offset, SEEK_SET);
+            if (fread(symbols, sizeof(Elf32_Sym), nSymbols, elfFile) != nSymbols)
+                FATAL_ERROR("fread\n");
+            msort(symbols, nSymbols, sizeof(Elf32_Sym), symcmp);
+            break;
+        }
+    }
+    if (symbols == NULL) {
+        FATAL_ERROR("failed to find symbol table\n");
+    }
+}
+
+Elf32_Sym * GetSymbol(unsigned int st_idx)
+{
+    DEBUG_MSG("GetSymbol\n");
+
+    if (symbols == NULL) {
+        FATAL_ERROR("must read symbols first\n");
+    }
+    if (st_idx >= nSymbols) {
+        FATAL_ERROR("symbol index out of array\n");
+    }
+    return &symbols[st_idx];
+}
+
+Elf32_Sym * GetSymbolByName(const char * name)
+{
+    DEBUG_MSG("GetSymbolByName\n");
+
+    if (symbols == NULL) {
+        FATAL_ERROR("must read symbols first\n");
+    }
+    for (unsigned int i = 0; i < nSymbols; i++) {
+        const char *checkName = strtab + symbols[i].st_name;
+        if (strcmp(checkName, name) == 0) {
+            return &symbols[i];
+        }
+    }
+    return NULL;
+}
+
+Elf32_Shdr * GetSectionHeader(unsigned int sh_idx)
+{
+    DEBUG_MSG("GetSectionHeader\n");
+
+    if (sh_idx >= SHN_LORESERVE) {  // reserved indices
+        return NULL;
+    }
+    if (sh_idx >= elfHeader.e_shnum) {
+        FATAL_ERROR("section index out of array\n");
+    }
+    return &sectionHeaders[sh_idx];
+}
+
+Elf32_Shdr * GetSectionHeaderByName(const char * shname)
+{
+    DEBUG_MSG("GetSectionHeader\n");
+
+    for (int sh_idx = 0; sh_idx < elfHeader.e_shnum; sh_idx++) {
+        if (strcmp(&shstrtab[sectionHeaders[sh_idx].sh_name], shname) == 0)
+            return &sectionHeaders[sh_idx];
+    }
+    return NULL;
+}
+
+Elf32_Phdr * GetProgramHeader(unsigned int ph_idx)
+{
+    DEBUG_MSG("GetProgramHeader\n");
+
+    if (ph_idx >= elfHeader.e_phnum) {
+        FATAL_ERROR("program index out of array\n");
+    }
+    return &programHeaders[ph_idx];
+}
+
+const char * GetSymbolName(Elf32_Sym * symbol)
+{
+    DEBUG_MSG("GetSymbolName\n");
+
+    if (strtab == NULL) {
+        FATAL_ERROR("must read strings first\n");
+    }
+    return strtab + symbol->st_name;
+}
+
+const char * GetSectionName(Elf32_Shdr * section)
+{
+    DEBUG_MSG("GetSectionName\n");
+
+    if (shstrtab == NULL) {
+        FATAL_ERROR("must read strings first\n");
+    }
+    return shstrtab + section->sh_name;
+}
+
+uint32_t GetEntryPoint(void)
+{
+    return elfHeader.e_entry;
+}
+
+int GetSectionHeaderCount(void)
+{
+    return elfHeader.e_shnum;
+}
+
+void InitElf(FILE * file)
+{
+    elfFile = file;
+
+    ReadElfHeader();
+    ReadProgramHeaders();
+    ReadSectionHeaders();
+    ReadStringTables();
+    ReadSymbols();
+}
+
+void DestroyResources(void)
+{
+    DEBUG_MSG("DestroyResources\n");
+
+    free(strtab);
+    strtab = NULL;
+    free(shstrtab);
+    shstrtab = NULL;
+    free(programHeaders);
+    programHeaders = NULL;
+    free(sectionHeaders);
+    sectionHeaders = NULL;
+    free(symbols);
+    symbols = NULL;
+    nSymbols = 0;
+    elfHeader = (Elf32_Ehdr){};
+    initialized = 0;
+    elfFile = NULL;
+}
diff --git a/tools/inigen/elf.h b/tools/inigen/elf.h
new file mode 100644
index 000000000..dee1cd339
--- /dev/null
+++ b/tools/inigen/elf.h
@@ -0,0 +1,27 @@
+#ifndef PGEGEN_ELF_H
+#define PGEGEN_ELF_H
+
+#include "elf-internal.h"
+#include "global.h"
+
+extern unsigned int nSymbols;
+
+typedef union {
+	Elf32_Ehdr e32;
+	Elf64_Ehdr e64;
+	unsigned char e_ident[EI_NIDENT];
+} Elf_Ehdr;
+
+Elf32_Sym * GetSymbol(unsigned int st_idx);
+Elf32_Sym * GetSymbolByName(const char * name);
+Elf32_Shdr * GetSectionHeader(unsigned int sh_idx);
+Elf32_Shdr * GetSectionHeaderByName(const char * name);
+Elf32_Phdr * GetProgramHeader(unsigned int ph_idx);
+const char * GetSymbolName(Elf32_Sym *);
+const char * GetSectionName(Elf32_Shdr *);
+uint32_t GetEntryPoint(void);
+int GetSectionHeaderCount(void);
+void InitElf(FILE * elfFile);
+void DestroyResources(void);
+
+#endif //PGEGEN_ELF_H
diff --git a/tools/inigen/global.h b/tools/inigen/global.h
new file mode 100644
index 000000000..9477251b8
--- /dev/null
+++ b/tools/inigen/global.h
@@ -0,0 +1,40 @@
+#ifndef PGEGEN_GLOBAL_H
+#define PGEGEN_GLOBAL_H
+
+#include <stdio.h>
+#include <stdlib.h>
+#include <stdint.h>
+
+typedef uint8_t u8;
+typedef uint16_t u16;
+typedef uint32_t u32;
+typedef uint64_t u64;
+typedef int8_t s8;
+typedef int16_t s16;
+typedef int32_t s32;
+typedef int64_t s64;
+
+#ifdef _MSC_VER
+
+#define FATAL_ERROR(format, ...)          \
+do                                        \
+{                                         \
+    fprintf(stderr, "FATAL: "format, __VA_ARGS__); \
+    exit(1);                              \
+} while (0)
+
+#else
+
+#define FATAL_ERROR(format, ...)            \
+do                                          \
+{                                           \
+    fprintf(stderr, "FATAL: "format, ##__VA_ARGS__); \
+    exit(1);                                \
+} while (0)
+
+#endif // _MSC_VER
+
+#define min(a, b) ((a) < (b) ? (a) : (b))
+#define max(a, b) ((a) < (b) ? (b) : (a))
+
+#endif //PGEGEN_GLOBAL_H
diff --git a/tools/inigen/inigen.c b/tools/inigen/inigen.c
new file mode 100644
index 000000000..92a6a15a3
--- /dev/null
+++ b/tools/inigen/inigen.c
@@ -0,0 +1,623 @@
+#include <stdio.h>
+#include <stdlib.h>
+#include <string.h>
+#include <capstone/capstone.h>
+#include "global.h"
+#include "elf.h"
+#include "util.h"
+
+// Get constants from the repository
+#include "constants/global.h"
+#include "constants/species.h"
+#include "constants/trainers.h"
+#include "constants/items.h"
+#include "constants/abilities.h"
+#include "constants/moves.h"
+#include "constants/pokemon.h"
+#include "constants/event_objects.h"
+
+/*
+ * ---------------------------------------------------------
+ * Type definitions
+ * ---------------------------------------------------------
+ */
+
+#define len(arr) (sizeof(arr)/sizeof(*arr))
+
+//struct TMText {
+//    int tmno;
+//    int mapgp;
+//    int mapno;
+//    int scriptno;
+//    int offset;
+//    const char * text;
+//};
+
+struct TMText {
+    int tmno;
+    const char * label;
+    const char * text;
+};
+
+struct StaticPokemon {
+    const char * label;
+    int offset;
+};
+
+static csh sCapstone;
+
+static Elf32_Shdr * sh_text;
+
+/*
+ * ---------------------------------------------------------
+ * Data
+ * ---------------------------------------------------------
+ */
+
+static const char * gTypeNames[] = {
+    "Normal",
+    "Fighting",
+    "Flying",
+    "Poison",
+    "Ground",
+    "Rock",
+    "Grass", // "Bug",
+    "Ghost",
+    "Steel",
+    "Ghost", // "Mystery",
+    "Fire",
+    "Water",
+    "Grass",
+    "Electric",
+    "Psychic",
+    "Ice",
+    "Dragon",
+    "Dark"
+};
+
+const struct StaticPokemon gStaticPokemon[][8] = {
+    {{"RustboroCity_DevonCorp_2F_EventScript_LileepReady", 0x2}, {"RustboroCity_DevonCorp_2F_EventScript_ReceiveLileep", 0x3}, {"RustboroCity_DevonCorp_2F_EventScript_ReceiveLileep", 0x6}, {"RustboroCity_DevonCorp_2F_EventScript_ReceivedLileepFanfare", 0x2}, {"RustboroCity_DevonCorp_2F_EventScript_ReceivedLileepFanfare", 0x10}},
+    {{"RustboroCity_DevonCorp_2F_EventScript_AnorithReady", 0x2}, {"RustboroCity_DevonCorp_2F_EventScript_ReceiveAnorith", 0x3}, {"RustboroCity_DevonCorp_2F_EventScript_ReceiveAnorith", 0x6}, {"RustboroCity_DevonCorp_2F_EventScript_ReceivedAnorithFanfare", 0x2}, {"RustboroCity_DevonCorp_2F_EventScript_ReceivedAnorithFanfare", 0x10}},
+    {{"MarineCave_End_EventScript_Kyogre", 0x17}, {"MarineCave_End_EventScript_Kyogre", 0x25}, {"MarineCave_End_EventScript_RanFromKyogre", 0x3}},
+    {{"TerraCave_End_EventScript_Groudon", 0x17}, {"TerraCave_End_EventScript_Groudon", 0x25}, {"TerraCave_End_EventScript_RanFromGroudon", 0x3}},
+    {{"DesertRuins_EventScript_Regirock", 0x4}, {"DesertRuins_EventScript_Regirock", 0xD}, {"DesertRuins_EventScript_RanFromRegirock", 0x3}},
+    {{"IslandCave_EventScript_Regice", 0x4}, {"IslandCave_EventScript_Regice", 0xD}, {"IslandCave_EventScript_RanFromRegice", 0x3}},
+    {{"AncientTomb_EventScript_Registeel", 0x4}, {"AncientTomb_EventScript_Registeel", 0xD}, {"AncientTomb_EventScript_RanFromRegisteel", 0x3}},
+    {{"SkyPillar_Top_EventScript_Rayquaza", 0x3}, {"SkyPillar_Top_EventScript_Rayquaza", 0xC}, {"SkyPillar_Top_EventScript_RanFromRayquaza", 0x3}},
+    {{"EventScript_BattleKecleon", 0x1F}, {"EventScript_BattleKecleon", 0x28}},
+    {{"Route120_EventScript_StevenBattleKecleon", 0x4B}, {"Route120_EventScript_StevenBattleKecleon", 0x54}},
+    {{"NewMauville_Inside_EventScript_Voltorb1", 0x3}, {"NewMauville_Inside_EventScript_Voltorb1", 0xA}},
+    {{"NewMauville_Inside_EventScript_Voltorb2", 0x3}, {"NewMauville_Inside_EventScript_Voltorb2", 0xA}},
+    {{"NewMauville_Inside_EventScript_Voltorb3", 0x3}, {"NewMauville_Inside_EventScript_Voltorb3", 0xA}},
+    {{"AquaHideout_B1F_EventScript_Electrode1", 0x3}, {"AquaHideout_B1F_EventScript_Electrode1", 0xA}},
+    {{"AquaHideout_B1F_EventScript_Electrode2", 0x3}, {"AquaHideout_B1F_EventScript_Electrode2", 0xA}},
+    {{"BattleFrontier_OutsideEast_EventScript_WaterSudowoodo", 0x1F}, {"BattleFrontier_OutsideEast_EventScript_WaterSudowoodo", 0x2D}},
+    {{"SouthernIsland_Interior_EventScript_SetLatiosBattleVars", 0x3}},
+    {{"SouthernIsland_Interior_EventScript_SetLatiasBattleVars", 0x3}},
+    {{"BirthIsland_Exterior_EventScript_Deoxys", 0x26}, {"BirthIsland_Exterior_EventScript_Deoxys", 0x36}, {"BirthIsland_Exterior_EventScript_DefeatedDeoxys", 0x6}, {"BirthIsland_Exterior_EventScript_RanFromDeoxys", 0x3}},
+    {{"FarawayIsland_Interior_EventScript_Mew", 0x1B}, {"FarawayIsland_Interior_EventScript_Mew", 0x55}, {"FarawayIsland_Interior_EventScript_MewDefeated", 0x6}, {"FarawayIsland_Interior_EventScript_PlayerOrMewRan", 0x3}},
+    {{"NavelRock_Top_EventScript_HoOh", 0x30}, {"NavelRock_Top_EventScript_HoOh", 0x5F}, {"NavelRock_Top_EventScript_DefeatedHoOh", 0x6}, {"NavelRock_Top_EventScript_RanFromHoOh", 0x3}},
+    {{"NavelRock_Bottom_EventScript_Lugia", 0x45}, {"NavelRock_Bottom_EventScript_Lugia", 0x50}, {"NavelRock_Bottom_EventScript_DefeatedLugia", 0x6}, {"NavelRock_Bottom_EventScript_RanFromLugia", 0x3}},
+    {{"MossdeepCity_StevensHouse_EventScript_GiveBeldum", 0x3}, {"MossdeepCity_StevensHouse_EventScript_GiveBeldum", 0x6}, {"MossdeepCity_StevensHouse_EventScript_ReceivedBeldumFanfare", 0x2}, {"MossdeepCity_StevensHouse_EventScript_ReceivedBeldumFanfare", 0x13}},
+    {{"Route119_WeatherInstitute_2F_EventScript_ReceiveCastform", 0xB}, {"Route119_WeatherInstitute_2F_EventScript_ReceiveCastform", 0xE}},
+};
+
+const struct TMText gTMTexts[] = {
+    {3, "gTMText_1", "The TECHNICAL MACHINE I handed you contains [move].\\p… … … … … …"},
+    {4, "gTMText_2", "TATE: That TM04 contains... LIZA: [move]!\\pTATE: It’s a move that’s perfect... LIZA: For any POKéMON!\\p… … … … … …"},
+    {5, "gTMText_3", "All my POKéMON does is [move]... No one dares to come near me...\\pSigh... If you would, please take this TM away..."},
+    {5, "gTMText_4", "TM05 contains [move]."},
+    {8, "gTMText_5", "That TM08 contains [move].\\p… … … … … …"},
+    {9, "gTMText_6", "I like filling my mouth with seeds, then spitting them out fast!\\pI like you, so you can have this!\\pUse it on a POKéMON, and it will learn [move].\\pWhat does that have to do with firing seeds? Well, nothing!"},
+    {24, "gTMText_7", "WATTSON: Wahahahaha!\\pI knew it, \\v01\\v05! I knew I’d made the right choice asking you!\\pThis is my thanks - a TM containing [move]!\\pGo on, you’ve earned it!"},
+    {31, "gTMText_8", "TM31 contains [move]! It’s a move so horrible that I can’t describe it."},
+    {34, "gTMText_9", "That TM34 there contains [move]. You can count on it!\\p… … … … … …"},
+    {39, "gTMText_10", "That TM39 contains [move].\\pIf you use a TM, it instantly teaches the move to a POKéMON.\\pRemember, a TM can be used only once, so think before you use it."},
+    {40, "gTMText_11", "TM40 contains [move].\\p… … … … … …"},
+    {41, "gTMText_12", "That’s, like, TM41, you know? Hey, it’s [move], you hearing me?\\pHey, now, you listen here, like, I’m not laying a torment on you!"},
+    {42, "gTMText_13", "DAD: TM42 contains [move].\\pIt might be able to turn a bad situation into an advantage."},
+    {47, "gTMText_14", "STEVEN: Okay, thank you.\\pYou went through all this trouble to deliver that. I need to thank you.\\pLet me see... I’ll give you this TM.\\pIt contains my favorite move, [move]."},
+    {50, "gTMText_15", "That TM50 contains [move]."}
+};
+
+const struct TMText gMoveTutorTexts[] = {
+    {4, "gMoveTutorText_1", "Sigh…\\pSOOTOPOLIS’s GYM LEADER is really lovably admirable.\\pBut that also means I have many rivals for his attention.\\pHe’s got appeal with a [move]. I couldn’t even catch his eye.\\pPlease, let me teach your POKéMON the move [move]!"},
+    {4, "gMoveTutorText_2", "Okay, which POKéMON should I teach [move]?"},
+    {15, "gMoveTutorText_3", "I can’t do this anymore!\\pIt’s utterly hopeless!\\pI’m a FIGHTING-type TRAINER, so I can’t win at the MOSSDEEP GYM no matter how hard I try!\\pArgh! Punch! Punch! Punch! Punch! Punch! Punch!\\pWhat, don’t look at me that way! I’m only hitting the ground!\\pOr do you want me to teach your POKéMON [move]?"},
+    {15, "gMoveTutorText_4", "I want you to win at the MOSSDEEP GYM using that [move]!"},
+    {12, "gMoveTutorText_5", "I don’t intend to be going nowhere fast in the sticks like this forever.\\pYou watch me, I’ll get out to the city and become a huge hit.\\pSeriously, I’m going to cause a huge explosion of popularity!\\pIf you overheard that, I’ll happily teach [move] to your POKéMON!"},
+    {12, "gMoveTutorText_6", "Fine! [move] it is! Which POKéMON wants to learn it?"},
+    {12, "gMoveTutorText_7", "For a long time, I’ve taught POKéMON how to use [move], but I’ve yet to ignite my own explosion…\\pMaybe it’s because deep down, I would rather stay here…"},
+    {29, "gMoveTutorText_8", "There’s a move that is wickedly cool.\\pIt’s called [move].\\nWant me to teach it to a POKéMON?"},
+    {8, "gMoveTutorText_9", "I want all sorts of things! But I used up my allowance…\\pWouldn’t it be nice if there were a spell that made money appear when you waggle a finger?\\pIf you want, I can teach your POKéMON the move [move].\\pMoney won’t appear, but your POKéMON will do well in battle. Yes?"},
+    {8, "gMoveTutorText_10", "When a POKéMON uses [move], all sorts of nice things happen."},
+    {7, "gMoveTutorText_11", "Ah, young one!\\pI am also a young one, but I mimic the styles and speech of the elderly folks of this town.\\pWhat do you say, young one? Would you agree to it if I were to offer to teach the move [move]?"},
+    {7, "gMoveTutorText_12", "[move] is a move of great depth.\\pCould you execute it to perfection as well as me…?"},
+    {7, "gMoveTutorText_13", "Oh, boo! I wanted to teach [move] to your POKéMON!"},
+    {16, "gMoveTutorText_14", "Did you know that you can go from here a long way in that direction without changing direction?\\pI might even be able to roll that way.\\pDo you think your POKéMON will want to roll, too?\\pI can teach one the move [move] if you’d like."},
+    {24, "gMoveTutorText_15", "Humph! My wife relies on HIDDEN POWER to stay awake.\\pShe should just take a nap like I do.\\pI can teach your POKéMON how to [move]. Interested?"},
+    {24, "gMoveTutorText_16", "I’ve never once gotten my wife’s coin trick right.\\pI would be happy if I got it right even as I teach [move]…"},
+    {14, "gMoveTutorText_17", "When I see the wide world from up here on the roof…\\pI think about how nice it would be if there were more than just one me so I could enjoy all sorts of lives.\\pOf course it’s not possible. Giggle…\\pI know! Would you be interested in having a POKéMON learn [move]?"},
+    {14, "gMoveTutorText_18", "Giggle… Which POKéMON do you want me to teach [move]?"},
+    {14, "gMoveTutorText_19", "Oh, no?\\pA POKéMON can do well in a battle using it, you know."},
+    {25, "gMoveTutorText_20", "Heh! My POKéMON totally rules! It’s cooler than any POKéMON!\\pI was lipping off with a swagger in my step like that when the CHAIRMAN chewed me out.\\pThat took the swagger out of my step.\\pIf you’d like, I’ll teach the move [move] to a POKéMON of yours."},
+    {25, "gMoveTutorText_21", "All right, which POKéMON wants to learn how to [move]?"},
+    {25, "gMoveTutorText_22", "I’ll just praise my POKéMON from now on without the [move]."}
+};
+
+/*
+ * ----------------------------------------------
+ * Capstone callbacks
+ * ----------------------------------------------
+ */
+
+static int IsLoadingStarterItems(const struct cs_insn * insn)
+{
+    static int to_return;
+    Elf32_Sym *sym = GetSymbolByName("ScriptGiveMon");
+    cs_arm_op * ops = insn->detail->arm.operands;
+    // mov r2, #0
+    if (insn->id == ARM_INS_MOV
+     && ops[0].type == ARM_OP_REG
+     && ops[0].reg == ARM_REG_R2
+     && ops[1].type == ARM_OP_IMM
+     && ops[1].imm == 0)
+        to_return = insn->address;
+    // bl ScriptGiveMon
+    else if (insn->id == ARM_INS_BL)
+    {
+        uint32_t target = ops[0].imm;
+        if (target == (sym->st_value & ~1))
+            return to_return;
+    }
+    return -1;
+}
+
+static int IsIntroLotadForCry_1(const struct cs_insn * insn)
+{
+    static int to_return;
+    static unsigned tmp_reg, tmp_reg2;
+    cs_arm_op * ops = insn->detail->arm.operands;
+    // mov rX, SPECIES_LOTAD / 2
+    if (insn->id == ARM_INS_MOV
+    && ops[0].type == ARM_OP_REG
+    && ops[1].type == ARM_OP_IMM
+    && ops[1].imm == SPECIES_LOTAD / 2)
+    {
+        to_return = insn->address;
+        tmp_reg = ops[0].reg;
+    }
+    // lsl rX, rY, 1
+    else if (insn->id == ARM_INS_LSL
+    && ops[0].type == ARM_OP_REG
+    && ops[1].type == ARM_OP_REG
+    && ops[1].reg == tmp_reg
+    && ops[2].type == ARM_OP_IMM
+    && ops[2].imm == 1
+    )
+        tmp_reg2 = ops[0].reg;
+    // str rX, [sp, 16]
+    else if (insn->id == ARM_INS_STR
+             && ops[0].type == ARM_OP_REG
+             && ops[0].reg == tmp_reg2
+             && ops[1].type == ARM_OP_MEM
+             && !ops[1].subtracted
+             && ops[1].mem.base == ARM_REG_SP
+             && ops[1].mem.index == ARM_REG_INVALID
+             && ops[1].mem.disp == 16)
+        return to_return;
+
+    return -1;
+}
+
+static int IsIntroLotadForCry_2(const struct cs_insn * insn)
+{
+    static int to_return;
+    static unsigned tmp_reg;
+    cs_arm_op * ops = insn->detail->arm.operands;
+    // ldr rX, =SPECIES_LOTAD
+    if (insn->id == ARM_INS_LDR
+        && ops[0].type == ARM_OP_REG
+        && ops[1].type == ARM_OP_MEM
+        && !ops[1].subtracted
+        && ops[1].mem.base == ARM_REG_PC
+        && ops[1].mem.index == ARM_REG_INVALID)
+    {
+        to_return = (insn->address & ~3) + ops[1].mem.disp + 4;
+        tmp_reg = ops[0].reg;
+    }
+    // str rX, [sp, #0x10]
+    else if (insn->id == ARM_INS_STR
+             && ops[0].type == ARM_OP_REG
+             && ops[0].reg == tmp_reg
+             && ops[1].type == ARM_OP_MEM
+             && !ops[1].subtracted
+             && ops[1].mem.base == ARM_REG_SP
+             && ops[1].mem.index == ARM_REG_INVALID
+             && ops[1].mem.disp == 16)
+        return to_return;
+    return -1;
+}
+
+static int IsIntroLotadForCry(const struct cs_insn * insn)
+{
+    int retval = IsIntroLotadForCry_1(insn);
+    if (retval >= 0)
+        return retval;
+    return IsIntroLotadForCry_2(insn);
+}
+
+static int IsIntroLotadForPic_1(const struct cs_insn * insn)
+{
+    static int to_return;
+    static unsigned tmp_reg;
+    cs_arm_op * ops = insn->detail->arm.operands;
+    // mov rX, SPECIES_LOTAD / 2
+    if (insn->id == ARM_INS_MOV
+    && ops[0].type == ARM_OP_REG
+    && ops[1].type == ARM_OP_IMM
+    && ops[1].imm == SPECIES_LOTAD / 2)
+    {
+        to_return = insn->address;
+        tmp_reg = ops[0].reg;
+    }
+    // lsl rX, rY, 1
+    else if (insn->id == ARM_INS_LSL
+    && ops[0].type == ARM_OP_REG
+    && ops[1].type == ARM_OP_REG
+    && ops[1].reg == tmp_reg
+    && ops[2].type == ARM_OP_IMM
+    && ops[2].imm == 1
+    )
+        return to_return;
+
+    return -1;
+}
+
+static int IsIntroLotadForPic_2(const struct cs_insn * insn)
+{
+    cs_arm_op * ops = insn->detail->arm.operands;
+    // ldr rX, =SPECIES_LOTAD
+    if (insn->id == ARM_INS_LDR
+        && ops[0].type == ARM_OP_REG
+        && ops[1].type == ARM_OP_MEM
+        && !ops[1].subtracted
+        && ops[1].mem.base == ARM_REG_PC
+        && ops[1].mem.index == ARM_REG_INVALID)
+        return (insn->address & ~3) + ops[1].mem.disp + 4;
+    return -1;
+}
+
+static int IsIntroLotadForPic(const struct cs_insn * insn)
+{
+    int retval = IsIntroLotadForPic_1(insn);
+    if (retval >= 0)
+        return retval;
+    return IsIntroLotadForPic_2(insn);
+}
+
+static int IsRunIndoorsTweakOffset(const struct cs_insn * insn)
+{
+    cs_arm_op * ops = insn->detail->arm.operands;
+    if (insn->id == ARM_INS_AND
+        && ops[0].type == ARM_OP_REG
+        && ops[1].type == ARM_OP_REG
+        && (insn - 1)->id == ARM_INS_MOV
+        && (insn - 1)->detail->arm.operands[0].type == ARM_OP_REG
+        && (insn - 1)->detail->arm.operands[1].type == ARM_OP_IMM
+        && (insn - 1)->detail->arm.operands[0].reg == ops[0].reg
+        && (insn - 1)->detail->arm.operands[1].imm == 4)
+        return insn->address;
+    return -1;
+}
+
+static int IsWallyZigzagoon_1(const struct cs_insn * insn)
+{
+    static int to_return;
+    static unsigned tmp_reg;
+    cs_arm_op * ops = insn->detail->arm.operands;
+    // mov rX, SPECIES_ZIGZAGOON / 2
+    if (insn->id == ARM_INS_MOV
+        && ops[0].type == ARM_OP_REG
+        && ops[1].type == ARM_OP_IMM
+        && ops[1].imm == SPECIES_ZIGZAGOON / 2)
+    {
+        to_return = insn->address;
+        tmp_reg = ops[0].reg;
+    }
+        // lsl rX, rY, 1
+    else if (insn->id == ARM_INS_LSL
+             && ops[0].type == ARM_OP_REG
+             && ops[0].reg == ARM_REG_R1
+             && ops[1].type == ARM_OP_REG
+             && ops[1].reg == tmp_reg
+             && ops[2].type == ARM_OP_IMM
+             && ops[2].imm == 1
+        )
+        return to_return;
+
+    return -1;
+}
+
+static int IsWallyZigzagoon_2(const struct cs_insn * insn)
+{
+    cs_arm_op * ops = insn->detail->arm.operands;
+    // ldr rX, =SPECIES_ZIGZAGOON
+    if (insn->id == ARM_INS_LDR
+        && ops[0].type == ARM_OP_REG
+        && ops[0].reg == ARM_REG_R1
+        && ops[1].type == ARM_OP_MEM
+        && !ops[1].subtracted
+        && ops[1].mem.base == ARM_REG_PC
+        && ops[1].mem.index == ARM_REG_INVALID)
+        return (insn->address & ~3) + ops[1].mem.disp + 4;
+    return -1;
+}
+
+static int IsWallyZigzagoon(const struct cs_insn * insn)
+{
+    int retval = IsWallyZigzagoon_1(insn);
+    if (retval >= 0)
+        return retval;
+    return IsWallyZigzagoon_2(insn);
+}
+
+static int IsWallyRalts_1(const struct cs_insn * insn)
+{
+    static int to_return;
+    static unsigned tmp_reg;
+    cs_arm_op * ops = insn->detail->arm.operands;
+    // mov rX, SPECIES_RALTS / 2
+    if (insn->id == ARM_INS_MOV
+        && ops[0].type == ARM_OP_REG
+        && ops[1].type == ARM_OP_IMM
+        && ops[1].imm == SPECIES_RALTS / 2)
+    {
+        to_return = insn->address;
+        tmp_reg = ops[0].reg;
+    }
+        // lsl rX, rY, 1
+    else if (insn->id == ARM_INS_LSL
+             && ops[0].type == ARM_OP_REG
+             && ops[0].reg == ARM_REG_R1
+             && ops[1].type == ARM_OP_REG
+             && ops[1].reg == tmp_reg
+             && ops[2].type == ARM_OP_IMM
+             && ops[2].imm == 1
+        )
+        return to_return;
+
+    return -1;
+}
+
+static int IsWallyRalts_2(const struct cs_insn * insn)
+{
+    cs_arm_op * ops = insn->detail->arm.operands;
+    // ldr rX, =SPECIES_RALTS
+    if (insn->id == ARM_INS_LDR
+        && ops[0].type == ARM_OP_REG
+        && ops[0].reg == ARM_REG_R1
+        && ops[1].type == ARM_OP_MEM
+        && !ops[1].subtracted
+        && ops[1].mem.base == ARM_REG_PC
+        && ops[1].mem.index == ARM_REG_INVALID)
+        return (insn->address & ~3) + ops[1].mem.disp + 4;
+    return -1;
+}
+
+static int IsWallyRalts(const struct cs_insn * insn)
+{
+    int retval = IsWallyRalts_1(insn);
+    if (retval >= 0)
+        return retval;
+    return IsWallyRalts_2(insn);
+}
+
+/*
+ * ---------------------------------------------------------
+ * get_instr_addr(
+ *   FILE * elfFile,
+ *   const char * symname,
+ *   int (*callback)(const struct cs_insn *)
+ * )
+ *
+ * Disassembles the function of the provided name until the
+ * callback returns a positive integer, then returns that
+ * integer. If the end of the function is reached and the
+ * callback never returns positive, -1 is returned instead.
+ * The callback takes a single argument, a pointer to a
+ * disassembled instruction. It then runs internal logic to
+ * determine whether the instruction or sequence of in-
+ * structions is what is desired, then returns the address
+ * of that instruction.
+ * ---------------------------------------------------------
+ */
+
+static int get_instr_addr(FILE * elfFile, const char * symname, int (*callback)(const struct cs_insn *))
+{
+    int retval = -1;
+    Elf32_Sym * sym = GetSymbolByName(symname);
+    fseek(elfFile, (sym->st_value & ~1) - sh_text->sh_addr + sh_text->sh_offset, SEEK_SET);
+    unsigned char * data = malloc(sym->st_size);
+    if (fread(data, 1, sym->st_size, elfFile) != sym->st_size)
+        FATAL_ERROR("fread");
+    struct cs_insn *insn;
+    int count = cs_disasm(sCapstone, data, sym->st_size, sym->st_value & ~1, 0, &insn);
+    for (int i = 0; i < count; i++) {
+        int to_return = callback(&insn[i]);
+        if (to_return >= 0) {
+            retval = to_return;
+            break;
+        }
+    }
+    cs_free(insn, count);
+    free(data);
+    return retval;
+}
+
+int main(int argc, char ** argv)
+{
+    const char * romName = "Emerald (U)";
+    const char * romCode = "BPEE";
+    FILE * elfFile = NULL;
+    FILE * outFile = NULL;
+
+    // Argument parser
+    for (int i = 1; i < argc; i++) {
+        char * arg = argv[i];
+        if (strcmp(arg, "--name") == 0) {
+            i++;
+            if (i == argc) {
+                FATAL_ERROR("missing argument to --name\n");
+            }
+            romName = argv[i];
+        } else if (strcmp(arg, "--code") == 0) {
+            i++;
+            if (i == argc) {
+                FATAL_ERROR("missing argument to --code\n");
+            }
+            romCode = argv[i];
+        } else if (arg[0] == '-') {
+            FATAL_ERROR("unrecognized option: \"%s\"\n", arg);
+        } else if (elfFile == NULL) {
+            elfFile = fopen(arg, "rb");
+            if (elfFile == NULL) {
+                FATAL_ERROR("unable to open file \"%s\" for reading\n", arg);
+            }
+        } else if (outFile == NULL) {
+            outFile = fopen(arg, "w");
+            if (outFile == NULL) {
+                FATAL_ERROR("unable to open file \"%s\" for writing\n", arg);
+            }
+        } else {
+            FATAL_ERROR("usage: %s ELF OUTPUT [--name NAME] [--code CODE]\n", argv[0]);
+        }
+    }
+
+    if (outFile == NULL) {
+        FATAL_ERROR("usage: %s ELF OUTPUT [--name NAME] [--code CODE]\n", argv[0]);
+    }
+
+    // Load the ELF metadata
+    InitElf(elfFile);
+#ifdef _MSC_VER
+#define print(format, ...) (fprintf(outFile, format, __VA_ARGS__))
+#else
+#define print(format, ...) (fprintf(outFile, format, ##__VA_ARGS__))
+#endif
+#define config_set(name, value) (print("%s=0x%X\n", (name), (value)))
+#define sym_get(name) (GetSymbolByName((name))->st_value)
+#define config_sym(name, symname) (config_set((name), sym_get(symname) & 0xFFFFFF))
+
+    // Initialize Capstone
+    cs_open(CS_ARCH_ARM, CS_MODE_THUMB, &sCapstone);
+    cs_option(sCapstone, CS_OPT_DETAIL, CS_OPT_ON);
+    sh_text = GetSectionHeaderByName(".text");
+
+    // Start writing the INI
+    print("[%s]\n", romName);
+    print("Game=%s\n", romCode);
+    print("Version=0\n");
+    print("Type=Em\n");
+    print("TableFile=gba_english\n");
+
+    // Find the first block after the ROM
+    int shnum = GetSectionHeaderCount();
+    uint32_t entry = GetEntryPoint();
+    uint32_t end = entry;
+    for (int i = 0; i < shnum; i++) {
+        Elf32_Shdr * sec = GetSectionHeader(i);
+        end = max(end, sec->sh_addr + sec->sh_size);
+    }
+    end -= entry;
+    if (end & 0xFFFF) {
+        end += 0x10000 - (end & 0xFFFF);
+    }
+    print("FreeSpace=0x%X\n", end);
+
+    // Pokemon data
+    print("PokemonCount=%d\n", NUM_SPECIES - 1);
+    print("PokemonNameLength=%d\n", POKEMON_NAME_LENGTH + 1);
+    config_sym("PokemonMovesets", "gLevelUpLearnsets");
+    config_sym("PokemonTMHMCompat", "gTMHMLearnsets");
+    config_sym("PokemonEvolutions", "gEvolutionTable");
+    config_sym("StarterPokemon", "sStarterMon");
+    // This symbol is inside a C function, so we must take an assist from capstone.
+    config_set("StarterItems", get_instr_addr(elfFile, "CB2_GiveStarter", IsLoadingStarterItems) & 0xFFFFFF);
+    config_sym("TrainerData", "gTrainers");
+    Elf32_Sym * Em_gTrainers = GetSymbolByName("gTrainers");
+    config_sym("WildPokemon", "gWildMonHeaders");
+    print("TrainerEntrySize=%d\n", Em_gTrainers->st_size / TRAINERS_COUNT);
+    config_set("TrainerCount", TRAINERS_COUNT);
+    config_sym("TrainerClassNames", "gTrainerClassNames");
+    Elf32_Sym * Em_gTrainerClassNames = GetSymbolByName("gTrainerClassNames");
+    print("TrainerClassCount=%d\n", TRAINER_CLASS_COUNT);
+    print("TrainerClassNameLength=%d\n", Em_gTrainerClassNames->st_size / TRAINER_CLASS_COUNT);
+    print("TrainerNameLength=%d\n", 12); // hardcoded for now
+    print("DoublesTrainerClasses=[%d, %d, %d, %d, %d]\n", TRAINER_CLASS_SR_AND_JR, TRAINER_CLASS_TWINS, TRAINER_CLASS_YOUNG_COUPLE, TRAINER_CLASS_OLD_COUPLE, TRAINER_CLASS_SIS_AND_BRO); // hardcoded for now
+    Elf32_Sym * Em_gItems = GetSymbolByName("gItems");
+    print("ItemEntrySize=%d\n", Em_gItems->st_size / ITEMS_COUNT);
+    print("ItemCount=%d\n", ITEMS_COUNT - 2); // NONE, DONE_BUTTON
+    print("MoveCount=%d\n", MOVES_COUNT - 1);
+    config_sym("MoveDescriptions", "gMoveDescriptionPointers");
+    Elf32_Sym * Em_gMoveNames = GetSymbolByName("gMoveNames");
+    print("MoveNameLength=%d\n", Em_gMoveNames->st_size / MOVES_COUNT);
+    Elf32_Sym * Em_gAbilityNames = GetSymbolByName("gAbilityNames");
+    print("AbilityNameLength=%d\n", Em_gAbilityNames->st_size / ABILITIES_COUNT);
+    config_sym("TmMoves", "sTMHMMoves");
+    config_sym("TmMovesDuplicate", "sUnused_StatStrings");
+    config_sym("MoveTutorData", "gTutorMoves");
+    Elf32_Sym* Em_gTutorMoves = GetSymbolByName("gTutorMoves");
+    print("MoveTutorMoves=%d\n", Em_gTutorMoves->st_size / 2);
+    config_sym("ItemImages", "gItemIconTable");
+
+    print("TmPals=[");
+    char buffer[64];
+    for (int i = 0; i < len(gTypeNames); i++) {
+        sprintf(buffer, "gItemIconPalette_%sTMHM", gTypeNames[i]);
+        if (i != 0)
+            print(",");
+        print("0x%X", GetSymbolByName(buffer)->st_value & 0xFFFFFF);
+    }
+    print("]\n");
+
+    config_set("IntroCryOffset", get_instr_addr(elfFile, "Task_NewGameBirchSpeechSub_InitPokeBall", IsIntroLotadForCry) & 0xFFFFFF);
+    config_set("IntroSpriteOffset", get_instr_addr(elfFile, "NewGameBirchSpeech_CreateLotadSprite", IsIntroLotadForPic) & 0xFFFFFF);
+    print("ItemBallPic=%d\n", OBJ_EVENT_GFX_ITEM_BALL);
+    config_sym("TradeTableOffset", "sIngameTrades");
+    Elf32_Sym * Em_gIngameTrades = GetSymbolByName("sIngameTrades");
+    print("TradeTableSize=%d\n", Em_gIngameTrades->st_size / 60); // hardcoded for now
+    print("TradesUnused=[]\n"); // so randomizer doesn't complain
+    config_set("CatchingTutorialOpponentMonOffset", get_instr_addr(elfFile, "StartWallyTutorialBattle", IsWallyRalts) & 0xFFFFFF);
+    config_set("CatchingTutorialPlayerMonOffset", get_instr_addr(elfFile, "PutZigzagoonInPlayerParty", IsWallyZigzagoon) & 0xFFFFFF);
+    config_sym("PCPotionOffset", "gNewGamePCItems");
+
+    // These may need some fixing to support dynamic offsets.
+    print("StaticPokemonSupport=1\n");
+    for (int i = 0; i < len(gStaticPokemon); i++) {
+        print("StaticPokemon[]=[");
+        for (int j = 0; j < 8; j++) {
+            if (gStaticPokemon[i][j].label == NULL) break;
+            if (j != 0)
+                print(",");
+            print("0x%X", (sym_get(gStaticPokemon[i][j].label) & 0xFFFFFF) + gStaticPokemon[i][j].offset);
+        }
+        print("]\n");
+    }
+    for (int i = 0; i < len(gTMTexts); i++) {
+        Elf32_Sym * sym = GetSymbolByName(gTMTexts[i].label);
+        print("TMTextSpdc[]=[%d,0x%X,%s]\n", gTMTexts[i].tmno, (sym->st_value + 2) & 0xFFFFFF, gTMTexts[i].text);
+    }
+    for (int i = 0; i < len(gMoveTutorTexts); i++) {
+        Elf32_Sym * sym = GetSymbolByName(gMoveTutorTexts[i].label);
+        print("MoveTutorTextSpdc[]=[%d,0x%X,%s]\n", gMoveTutorTexts[i].tmno, (sym->st_value + 2) & 0xFFFFFF, gMoveTutorTexts[i].text);
+    }
+
+    config_sym("PokedexOrder", "gSpeciesToNationalPokedexNum");
+    config_sym("CheckValueOffset", "gRandomizerCheckValue");
+
+    DestroyResources();
+    fclose(outFile);
+    fclose(elfFile);
+    return 0;
+}
diff --git a/tools/inigen/util.c b/tools/inigen/util.c
new file mode 100644
index 000000000..e9482e83b
--- /dev/null
+++ b/tools/inigen/util.c
@@ -0,0 +1,84 @@
+#include <stdlib.h>
+#include <string.h>
+#include "util.h"
+
+int msort_r(void * data, size_t count, size_t size, cmpfun cmp, void * buffer) {
+    /*
+     * Out-of-place mergesort (stable sort)
+     * Returns 1 on success, 0 on failure
+     */
+    void * leftPtr;
+    void * rightPtr;
+    void * leftEnd;
+    void * rightEnd;
+    int i;
+
+    switch (count) {
+        case 0:
+            // Should never be here
+            return 0;
+
+        case 1:
+            // Nothing to do here
+            break;
+
+        case 2:
+            // Swap the two entries if the right one compares higher.
+            if (cmp(data, data + size) > 0) {
+                memcpy(buffer, data, size);
+                memcpy(data, data + size, size);
+                memcpy(data + size, buffer, size);
+            }
+            break;
+        default:
+            // Merge sort out-of-place.
+            leftPtr = data;
+            leftEnd = rightPtr = data + count / 2 * size;
+            rightEnd = data + count * size;
+
+            // Sort the left half
+            if (!msort_r(leftPtr, count / 2, size, cmp, buffer))
+                return 0;
+
+            // Sort the right half
+            if (!msort_r(rightPtr, count / 2 + (count & 1), size, cmp, buffer))
+                return 0;
+
+            // Merge the sorted halves out of place
+            i = 0;
+            do {
+                if (cmp(leftPtr, rightPtr) <= 0) {
+                    memcpy(buffer + i * size, leftPtr, size);
+                    leftPtr += size;
+                } else {
+                    memcpy(buffer + i * size, rightPtr, size);
+                    rightPtr += size;
+                }
+
+            } while (++i < count && leftPtr < leftEnd && rightPtr < rightEnd);
+
+            // Copy the remainder
+            if (i < count) {
+                if (leftPtr < leftEnd) {
+                    memcpy(buffer + i * size, leftPtr, leftEnd - leftPtr);
+                }
+                else {
+                    memcpy(buffer + i * size, rightPtr, rightEnd - rightPtr);
+                }
+            }
+
+            // Copy the merged data back
+            memcpy(data, buffer, count * size);
+            break;
+    }
+
+    return 1;
+}
+
+int msort(void * data, size_t count, size_t size, cmpfun cmp) {
+    void * buffer = malloc(count * size);
+    if (buffer == NULL) return 0;
+    int result = msort_r(data, count, size, cmp, buffer);
+    free(buffer);
+    return result;
+}
diff --git a/tools/inigen/util.h b/tools/inigen/util.h
new file mode 100644
index 000000000..e6e8bdb46
--- /dev/null
+++ b/tools/inigen/util.h
@@ -0,0 +1,8 @@
+#ifndef PGEGEN_UTIL_H
+#define PGEGEN_UTIL_H
+
+typedef int (*cmpfun)(const void *, const void *);
+
+int msort(void * data, size_t count, size_t size, cmpfun cmp);
+
+#endif //PGEGEN_UTIL_H
